@article{kamei12_jit,
title = "A large-scale empirical study of just-in-time quality assurance",
author = "Y. Kamei and E. Shihab and B. Adams and A. E. Hassan and A. Mockus and A. Sinha and N. Ubayashi",
year = "2013",
journal = "TSE",
}

@inproceedings{hindle08_largecommits,
 author = {Hindle, A. and German, D. M. and Holt, R.},
 title = {What Do Large Commits Tell Us?: A Taxonomical Study of Large Commits},
 series = {MSR},
 year = {2008},
 keywords = {large commits, software evolution, source control system},
} 

@article{Kim08changes,
 author = {Kim, S. and Whitehead,Jr., E. J. and Zhang, Y.},
 title = {Classifying Software Changes: Clean or Buggy?},
 journal = {TSE},
 year = {2008},
 keywords = {Clustering, Configuration Management, Data mining, Metrics/Measurement, Software maintenance, Software maintenance, Metrics/Measurement, Clustering, classification, and association rules, Configuration Management, Data mining, and association rules, classification},
} 

@misc{xia2019sequential,
    title={Sequential Model Optimization for Software Process Control},
    author={Tianpei Xia and Rui Shu and Xipeng Shen and Tim Menzies},
    year={2019},
    archivePrefix={arXiv},
}

@INPROCEEDINGS{vasilescu16_limit,
author={B. {Vasilescu} and K. {Blincoe} and Q. {Xuan} and C. {Casalnuovo} and D. {Damian} and P. {Devanbu} and V. {Filkov}},
booktitle={2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)},
title={The Sky Is Not the Limit: Multitasking Across GitHub Projects},
year={2016},}

@Inbook{vanLamsweerde2009_requirement,
author="van Lamsweerde, Axel",
title="Reasoning About Alternative Requirements Options",
bookTitle="Conceptual Modeling: Foundations and Applications: Essays in Honor of John Mylopoulos",
year="2009",
isbn="978-3-642-02463-4",
doi="10.1007/978-3-642-02463-4_20",
url="https://doi.org/10.1007/978-3-642-02463-4_20"
}

@article{cai19_debt,
author={M. {Nayebi} and Y. {Cai} and R. {Kazman} and G. {Ruhe} and Q. {Feng} and C. {Carlson} and F. {Chew}},
booktitle={ICSE-SEIP},
title={A Longitudinal Study of Identifying and Paying Down Architecture Debt},
year={2019},
doi={10.1109/ICSE-SEIP.2019.00026}
}

@article{majumder19_heroes,
  author    = {Suvodeep Majumder and
               Joymallya Chakraborty and
               Amritanshu Agrawal and
               Tim Menzies},
  title     = {Why Software Projects need Heroes (Lessons Learned from 1100+ Projects)},
  journal   = {CoRR},
  volume    = {abs/1904.09954},
  year      = {2019},
  url       = {http://arxiv.org/abs/1904.09954},
  archivePrefix = {arXiv},
  eprint    = {1904.09954},
  timestamp = {Fri, 26 Apr 2019 13:18:53 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1904-09954.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{tu2019better,
    title={Better Data Labelling with EMBLEM (and how that Impacts Defect Prediction)},
    author={Huy Tu and Zhe Yu and Tim Menzies},
    year={2019},
    archivePrefix={arXiv},
}

@article{kaplan1996using,
  title={Using the Balanced Scorecard as a Strategic Management System},
  author={Kaplan, Robert S and Norton, David P},
  journal={Harvard Business Review },
  year={1996}
}


@inproceedings{barone2011composite,
  title={Composite indicators for business intelligence},
  author={Barone, Daniele and Jiang, Lei and Amyot, Daniel and Mylopoulos, John},
  booktitle={International Conference on Conceptual Modeling},
  pages={448--458},
  year={2011},
  organization={Springer}
}

@article{schouten2010indicators,
  title={Indicators for monitoring and improving representativeness of response},
  author={Schouten, Barry and Shlomo, Natalie and Skinner, Chris},
  year={2010},
  publisher={Southampton Statistical Sciences Research Institute, University of Southampton}
}


@article{zadeh88, 
author = {Zadeh, Lofti A.}, 
title = {Fuzzy Logic}, 
year = {1988}, 
issue_date = {April 1988}, 
publisher = {IEEE Computer Society Press}, 
address = {Washington, DC, USA}, 
volume = {21}, 
number = {4}, 
issn = {0018-9162},
url = {https://doi.org/10.1109/2.53}, 
doi = {10.1109/2.53}, 
journal = {Computer}}
 


@article{brooks1995mythical,
  title={The mythical man-month (anniversary ed.)},
  author={Brooks Jr, Frederick P},
  year={1995},
  publisher={Addison-Wesley Longman Publishing Co., Inc.}
}

@article{Geoffrey_JMB,
author = {Chang, Geoffrey},
year = {2003},
month = {08},
pages = {419-30},
title = {RETRACTED: Structure of MsbA from Vibrio cholera: A Multidrug Resistance ABC Transporter Homolog in a Closed Conformation},
volume = {330},
journal = {Journal of molecular biology},
doi = {10.1016/S0022-2836(03)00587-4}
}

@article{lee_ecolet,
author = {Lees, David and Colwell, Robert},
year = {2007},
month = {10},
pages = {E4-8; author reply E9},
title = {A strong Madagascan rainforest MDE and no equatorward increase in species richness: Re-analysis of 'The missing Madagascan mid-domain effect', by Kerr J.T., Perring M. & Currie D.J. (Ecology Letters 9:149-159, 2006)},
volume = {10},
journal = {Ecology letters},
doi = {10.1111/j.1461-0248.2007.01040.x}
}

@article{david_ecolet,
author = {Currie, David and Kerr, Jeremy},
year = {2007},
month = {09},
pages = {E9 - E10},
title = {Testing, as opposed to supporting, the Mid-domain Hypothesis: A response to Lees and Colwell (2007)},
volume = {10},
journal = {Ecology Letters},
doi = {10.1111/j.1461-0248.2007.01074.x}
}

@article{comments_science,
author = {Ferrari, F and Jung, Y.L. and Kharchenko, P.V. and Plachetka, A and Alekseyenko, Artyom and Kuroda, M.I. and Park, P.J.},
year = {2013},
month = {04},
pages = {273},
title = {Comment on "Drosophila Dosage Compensation Involves Enhanced Pol II Recruitment to Male X-Linked Promoters"},
volume = {340},
journal = {Science (New York, N.Y.)},
doi = {10.1126/science.1231815}
}

@article {Chang1875_science,
	author = {Chang, Geoffrey and Roth, Christopher B. and Reyes, Christopher L. and Pornillos, Owen and Chen, Yen-Ju and Chen, Andy P.},
	title = {Retraction},
	volume = {314},
	number = {5807},
	pages = {1875--1875},
	year = {2006},
	doi = {10.1126/science.314.5807.1875b},
	publisher = {American Association for the Advancement of Science},
	issn = {0036-8075},
	URL = {https://science.sciencemag.org/content/314/5807/1875.2},
	eprint = {https://science.sciencemag.org/content/314/5807/1875.2.full.pdf},
	journal = {Science}
}


@article{sanders08_risk,
author = {Sanders, Rebecca and Kelly, Diane},
year = {2008},
month = {08},
pages = {21 - 28},
title = {Dealing with Risk in Scientific Software Development},
volume = {25},
journal = {Software, IEEE},
doi = {10.1109/MS.2008.84}
}

@online{nobel_2013, 
author = {M. Shanley, S. Nordenstam},
title = {Scientists who took chemistry into cyberspace win Nobel Prize},
year = {2013}
}

@online{claburn2020_heroes,
  author = {Thomas Claburn },
  title = {Rockstar dev debate reopens: Hero programmers do exist, do all the work, do chat a lot – and do need love and attention from project leaders},
  year = 2020,
  url = {https://www.theregister.co.uk/2020/01/24/developer_heroes_exist/},
  urldate = {2020-01-24}
}

@INPROCEEDINGS{ragan14_pythoncs,
       author = {{Ragan-Kelley}, M. and {Perez}, F. and {Granger}, B. and {Kluyver}, T. and
         {Ivanov}, P. and {Frederic}, J. and {Bussonnier}, M.},
        title = "{The Jupyter/IPython architecture: a unified view of computational research, from interactive exploration to communication and publication.}",
     keywords = {1805 Computational hydrology, 1847 Modeling, 1894 Instruments and techniques: modeling, 1910 Data assimilation, integration and fusion},
    booktitle = {AGU Fall Meeting Abstracts},
         year = "2014",
}

@article{kendall05_C,
author = {Heroux, Michael and Bartlett, Roscoe and Howle, Victoria and Hoekstra, Robert and Hu, Jonathan and Kolda, Tamara and Lehoucq, Richard and Long, Katharine and Pawlowski, Roger and Phipps, Eric and Salinger, Andrew and Thornquist, Heidi and Tuminaro, R. and Willenbring, James and Williams, Alan and Stanley, Kendall},
year = {2005},
month = {09},
pages = {397-423},
title = {An overview of the Trilinos Project},
volume = {31},
journal = {ACM Trans. Math. Softw.},
doi = {10.1145/1089014.1089021}
}

@INPROCEEDINGS{mockus00changeskeys, 
author={A. Mockus and L. Votta}, 
booktitle={ICPC}, 
title={Identifying reasons for software changes using historic databases}, 
year={2000}, 
keywords={reverse engineering;software maintenance;configuration management;management of change;temporal databases;software changes;historic databases;large scale software products;changing environment;historic data;legacy software systems;code restructuring;textual description field;maintenance activity;textual description;automatic classification;developer opinions;perfective changes;version control data;software project;change management system;Reverse engineering}, }

@INPROCEEDINGS{Shull05_parallel,
author={L. {Hochstein} and J. {Carver} and F. {Shull} and S. {Asgari} and V. {Basili} and J. K. {Hollingsworth} and M. V. {Zelkowitz}},
booktitle={SC '05: Proceedings of the 2005 ACM/IEEE Conference on Supercomputing},
title={Parallel Programmer Productivity: A Case Study of Novice Parallel Programmers},
year={2005},
volume={},
number={},
pages={35-35},
keywords={Programming profession;Productivity;Computer aided software engineering;Humans;Application software;Concurrent computing;High performance computing;Software engineering;Educational institutions;Instruments},
doi={10.1109/SC.2005.53},
ISSN={null},
month={Nov},}

@ARTICLE{boyle09_lessons,
author={S. {Killcoyne} and J. {Boyle}},
journal={Computing in Science Engineering},
title={Managing Chaos: Lessons Learned Developing Software in the Life Sciences},
year={2009},
volume={11},
number={6},
pages={20-29},
keywords={Software development management;Chaos;Programming;Isolation technology;Systems biology;Collaborative work;Software standards;Standards development;Testing;Publishing;Software development process;software design;life sciences research;agile;rapid application development},
doi={10.1109/MCSE.2009.198},
ISSN={1558-366X},
month={Nov},}

@ARTICLE{johan18_secs, 
author={A. Johanson and W. Hasselbring}, 
journal={Computing in Science Engineering}, 
title={Software Engineering for Computational Science: Past, Present, Future}, 
year={2018},}

@ARTICLE{basili08_hpc, 
author={V. R. Basili and J. C. Carver and D. Cruzes and L. M. Hochstein and J. K. Hollingsworth and F. Shull and M. V. Zelkowitz}, 
journal={IEEE Software}, 
title={Understanding the High-Performance-Computing Community: A Software Engineer's Perspective}, 
year={2008},}

@ARTICLE{carver13_perception, 
author={J. Carver and D. Heaton and L. Hochstein and R. Bartlett}, 
journal={Computing in Science Engineering}, 
title={Self-Perceptions about Software Engineering: A Survey of Scientists and Engineers}, 
year={2013},}

@ARTICLE{faulk09_secs,
author = {M. L. Vanter and S. Faulk and S. Squires and E. Loh and L. G. Votta},
journal = {Computing in Science \& Engineering},
title = {Scientific Computing's Productivity Gridlock: How Software Engineering Can Help},
year = {2009},
}

@INPROCEEDINGS{hannay09_secs, 
author={J. E. Hannay and C. MacLeod and J. Singer and H. P. Langtangen and D. Pfahl and G. Wilson}, 
booktitle={2009 ICSE Workshop on Software Engineering for Computational Science and Engineering}, 
title={How do scientists develop and use scientific software?}, 
year={2009}, 
volume={}, 
number={}, 
pages={1-8}, 
keywords={scientific information systems;software engineering;scientific software;supercomputers;software testing;software engineering;software development projects;Software testing;Software engineering;Knowledge engineering;Resource management;Computer science education;Supercomputers;Peer to peer computing;Automatic testing;Software standards;Standards development}, 
doi={10.1109/SECSE.2009.5069155}, 
ISSN={}, 
month={May},}

@article{Krishna15_peer,
 author = {Krishnamurthi, Shriram and Vitek, Jan},
 title = {The Real Software Crisis: Repeatability As a Core Value},
 journal = {Commun. ACM},
 issue_date = {March 2015},
 volume = {58},
 number = {3},
 month = feb,
 year = {2015},
 issn = {0001-0782},
 pages = {34--36},
 numpages = {3},
 url = {http://doi.acm.org/10.1145/2658987},
 doi = {10.1145/2658987},
 acmid = {2658987},
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@Article{wilson14_SC,
AUTHOR = { Wilson, G},
TITLE = {Software Carpentry: Lessons Learned
},
JOURNAL = {F1000Research},
VOLUME = {3},
YEAR = {2014},
NUMBER = {62},
DOI = {10.12688/f1000research.3-62.v1}
}


@book{fowler10_dsl,
 author = {Fowler, Martin},
 title = {Domain Specific Languages},
 year = {2010},
 isbn = {0321712943, 9780321712943},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
} 

@book{bondi15_spe,
 author = {Bondi, A. B. },
 title = {Foundations of Software and System Performance Engineering: Process, Performance Modeling, Requirements, Testing, Scalability, and Practice},
 year = {2015},
 publisher = {Addison-Wesley Professional},
} 

@article{chemora_14,
  author    = {Erik Schnetter and
               Marek Blazewicz and
               Steven R. Brandt and
               David M. Koppelman and
               Frank L{\"{o}}ffler},
  title     = {Chemora: {A} {PDE} Solving Framework for Modern {HPC} Architectures},
  journal   = {CoRR},
  volume    = {abs/1410.1764},
  year      = {2014},
  url       = {http://arxiv.org/abs/1410.1764},
  archivePrefix = {arXiv},
  eprint    = {1410.1764},
  timestamp = {Mon, 13 Aug 2018 16:46:29 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/SchnetterBBKL14},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{johanson17_sprat,
title = "SPRAT: A spatially-explicit marine ecosystem model based on population balance equations",
journal = "Ecological Modelling",
volume = "349",
pages = "11 - 25",
year = "2017",
issn = "0304-3800",
doi = "https://doi.org/10.1016/j.ecolmodel.2017.01.020",
url = "http://www.sciencedirect.com/science/article/pii/S0304380017300704",
author = "Arne N. Johanson and Andreas Oschlies and Wilhelm Hasselbring and Boris Worm",
keywords = "End-to-end modeling, Population balance equation, Fish stock prediction, Ecosystem-based management"
}

@article{balsamo04_spe,
author = {Balsamo, Simonetta and Marco, Antinisca and Inverardi, Paola and Simeoni, Marta},
year = {2004},
month = {06},
pages = {295 - 310},
title = {Model-Based Performance Prediction in Software Development: A Survey},
volume = {30},
booktitle = {Software Engineering, IEEE Transactions on}
}

@INPROCEEDINGS{mayer07_testing, 
author={R. Guderlei and J. Mayer}, 
booktitle={Seventh International Conference on Quality Software (QSIC 2007)}, 
title={Statistical Metamorphic Testing Testing Programs with Random Output by Means of Statistical Hypothesis Tests and Metamorphic Testing}, 
year={2007}, 
volume={}, 
number={}, 
pages={404-409}, 
keywords={program testing;statistical analysis;statistical metamorphic testing;program testing;random output;statistical hypothesis tests;software testing;randomized software;implementation under test;Software testing;Statistical analysis;Random variables;Investments;Context modeling;Collaborative software;Software quality;Statistical distributions;Error correction;Probability}, 
doi={10.1109/QSIC.2007.4385527}, 
ISSN={1550-6002}, 
month={Oct},}

@inproceedings{hasselbring16_testing,
 author = {Hasselbring, Wilhelm},
 title = {Microservices for Scalability: Keynote Talk Abstract},
 booktitle = {Proceedings of the 7th ACM/SPEC on International Conference on Performance Engineering},
 series = {ICPE '16},
 year = {2016},
 isbn = {978-1-4503-4080-9},
 location = {Delft, The Netherlands},
 pages = {133--134},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/2851553.2858659},
 doi = {10.1145/2851553.2858659},
 acmid = {2858659},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {microservices, monitoring, scalability},
} 


@INPROCEEDINGS{hasselbring17_testing, 
author={W. Hasselbring and G. Steinacker}, 
booktitle={2017 IEEE International Conference on Software Architecture Workshops (ICSAW)}, 
title={Microservice Architectures for Scalability, Agility and Reliability in E-Commerce}, 
year={2017}, 
volume={}, 
number={}, 
pages={243-246}, 
keywords={electronic commerce;information systems;middleware;software architecture;software quality;software reliability;microservice architectures;scalability;agility;reliability;e-commerce;middleware stacks;vertical decomposition;self contained systems;microservices granularity;automated quality assurance;information system integration;Computer architecture;Scalability;Pipelines;Software;Business;Reliability;Monitoring;Microservices;Scalability;Agility;Reliability;E-Commerce}, 
doi={10.1109/ICSAW.2017.11}, 
ISSN={}, 
month={April},}

@ARTICLE{thew09_requirement, 
author={S. Thew and A. Sutcliffe and R. Procter and O. de Bruijn and J. McNaught and C. C. Venters and I. Buchan}, 
journal={IEEE Software}, 
title={Requirements Engineering for E-science: Experiences in Epidemiology}, 
year={2009}, 
volume={26}, 
number={1}, 
pages={80-87}, 
keywords={data visualisation;medical computing;systems analysis;requirements engineering;E-science;geographic visualization;public-health decision making;Visualization;Diseases;Iterative methods;Geographic Information Systems;Biomedical informatics;Decision making;Genetics;Technological innovation;Usability;Data engineering;requirements analysis;epidemiology;maps;data-driven research;storyboards;scenarios;ethnography;tacit knowledge;ontology development;prototyping}, 
doi={10.1109/MS.2009.19}, 
ISSN={0740-7459}, 
month={Jan},}

@article{garcia13_requirement,
author = {Corral García, Javier and Gómez-Martín, César and González-Sánchez, J.L. and Cortés Polo, David},
year = {2013},
month = {08},
pages = {},
title = {Development of Scientific Applications with High-Performance Computing through a Component-Based and Aspect-Oriented Methodology},
volume = {3},
booktitle = {International Journal of Advanced Computer Science}
}

@article{lo19_mislabeled,
author = {Fan, Y. and Xia, X. and Costa, D. and Lo, D. and Hassan, A. E. and Li, S.},
year = {2019},
title = {The Impact of Mislabeled Changes by SZZ on Just-in-Time Defect Prediction},
journal = {IEEE TSE},
doi = {10.1109/TSE.2019.2929761}
}

@inproceedings{Wu11_relink,
 author = {Wu, R. and Zhang, H. and Kim, S. and Cheung, S.},
 title = {ReLink: Recovering Links Between Bugs and Changes},
 series = {ESEC/FSE},
 year = {2011},
 keywords = {bugs, changes, data quality, mining software repository, missing links},
} 

@inproceedings{Tian12_linux,
 author = {Tian, Y. and Lawall, J. and Lo, D.},
 title = {Identifying Linux Bug Fixing Patches},
 series = {ICSE},
 year = {2012}
} 

@inproceedings{linkster_10,
author = {Bachmann, A. and Bird, C. and Rahman, F. and Devanbu, P. and Bernstein, A.},
year = {2010},
title = {The Missing Links: Bugs and Bug-fix Commits},
booktitle = {FSE},
doi = {10.1145/1882291.1882308}
}

@InProceedings{amershi_ICSE19AI4SE,
author = {Amershi, S. and Begel, A. and Bird, C. and DeLine, R. and Gall, H. and Kamar, E. and Nagappan, N. and Nushi, B. and Zimmermann, T.},
title = {Software Engineering for Machine Learning: A Case Study},
booktitle = {ICSE},
year = {2019},
abstract = {Recent advances in machine learning have stimulated widespread interest within the Information Technology sector on integrating AI capabilities into software and services. This goal has forced organizations to evolve their development processes. We report on a study that we conducted on observing software teams at Microsoft as they develop AI-based applications. We consider a nine-stage workflow process informed by prior experiences developing AI applications (e.g., search and NLP) and data science tools (e.g. application diagnostics and bug reporting). We found that various Microsoft teams have united this workflow into preexisting, well-evolved, Agile-like software engineering processes, providing insights about several essential engineering challenges that organizations may face in creating large-scale AI solutions for the marketplace. We collected some best practices from Microsoft teams to address these challenges. In addition, we have identified three aspects of the AI domain that make it fundamentally different from prior software application domains: 1) discovering, managing, and versioning the data needed for machine learning applications is much more complex and difficult than other types of software engineering, 2) model customization and model reuse require very different skills than are typically found in software teams, and 3) AI components are more difficult to handle as distinct modules than traditional software components – models may be ``entangled'' in complex ways and experience non-monotonic error behavior. We believe that the lessons learned by Microsoft teams will be valuable to other organizations.},
}

@article{xia16ist17,
title = "TLEL: A two-layer ensemble learning approach for just-in-time defect prediction",
journal = "IST",
year = "2017",
url = "http://www.sciencedirect.com/science/article/pii/S0950584917302501",
author = "X. Yang and D. Lo and X. Xia and J. Sun",
keywords = "Ensemble learning, Just-in-time defect prediction, Cost effectiveness",
}

@inproceedings{yang16unsupervised,
 author = {Yang, Y. and Zhou, Y. and Liu, J. and Zhao, Y. and Lu, H. and Xu, L. and Xu, B. and Leung, H.},
 title = {Effort-aware Just-in-time Defect Prediction: Simple Unsupervised Models Could Be Better Than Supervised Models},
 series = {FSE},
 year = {2016},
 url = {http://doi.acm.org/10.1145/2950290.2950353},
 keywords = {Defect, changes, effort-aware, just-in-time, prediction},
} 

@INPROCEEDINGS{LoDL15, 
author={X. {Yang} and D. {Lo} and X. {Xia} and Y. {Zhang} and J. {Sun}}, 
booktitle={2015 IEEE International Conference on Software Quality, Reliability and Security}, 
title={Deep Learning for Just-in-Time Defect Prediction}, 
year={2015}, 
volume={}, 
number={}, 
pages={17-26}, 
keywords={just-in-time;learning (artificial intelligence);pattern classification;software quality;deep learning;just-in-time defect prediction;change-level defect prediction;software quality;machine learning literature;machine learning classifier;Feature extraction;Logistics;Machine learning;Computer bugs;Measurement;Training;Software quality;Deep Learning;Just-In-Time Defect Prediction;Deep Belief Network;Cost Effectiveness}, 
doi={10.1109/QRS.2015.14}, 
ISSN={}, 
month={Aug},}

@INPROCEEDINGS{segal07_enduser, 
author={J. {Segal}}, 
booktitle={VLHCC}, 
title={Some Problems of Professional End User Developers}, 
year={2007}, 
keywords={software development management;professional end user developers;knowledge-rich domains;software engineering;learning programming languages;software development;Computer languages;Software engineering;Biological information theory;Software performance;Software tools;Collaborative software;Engineering drawings;Java;Programming profession;Robustness}, }


@ARTICLE{easterbrook_cs, 
author={S. M. {Easterbrook} and T. C. {Johns}}, 
journal={Computing in Science Engineering}, 
title={Engineering the Software for Understanding Climate Change}, 
year={2009},}

@inproceedings{Prabhu11_cssurvey,
 author = {Prabhu, Prakash and Jablin, Thomas B. and Raman, Arun and Zhang, Yun and Huang, Jialu and Kim, Hanjun and Johnson, Nick P. and Liu, Feng and Ghosh, Soumyadeep and Beard, Stephen and Oh, Taewook and Zoufaly, Matthew and Walker, David and August, David I.},
 title = {A Survey of the Practice of Computational Science},
 booktitle = {State of the Practice Reports},
 year = {2011},
 publisher = {ACM},
} 


@article{carver06_hpc,
author = {Carver, Jeff and Hochstein, Lorin and Kendall, Richard and Nakamura, Taiga and Zelkowitz, Marvin and R Basili, Victor and Post, Douglass},
year = {2006},
title = {Observations about software development for high end computing},
journal = {CT Watch Quarterly}
}

@article{bieman18_slr,
    author    = {Upulee Kanewala and
               James M. Bieman},
  title     = {Testing Scientific Software: {A} Systematic Literature Review},
  journal   = {CoRR},
  volume    = {abs/1804.01954},
  year      = {2018},
  url       = {http://arxiv.org/abs/1804.01954},
  archivePrefix = {arXiv},
  eprint    = {1804.01954},
  timestamp = {Mon, 13 Aug 2018 16:46:05 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1804-01954},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{segal07_problem,
 author = {Segal, Judith},
 title = {Some Problems of Professional End User Developers},
 booktitle = {VLHCC},
 year = {2007}
}

@ARTICLE {segal08_ss,
author = {J. Segal and C. Morris},
journal = {IEEE Software},
title = {Developing Scientific Software},
year = {2008},
publisher = {IEEE Computer Society},
}


@article{heaton15_lit,
title = "Claims about the use of software engineering practices in science: A systematic literature review",
journal = "Information and Software Technology",
volume = "67",
pages = "207 - 219",
year = "2015",
author = "Dustin Heaton and Jeffrey C. Carver",
}

@INPROCEEDINGS{carver07_environment, 
author={J. C. Carver and R. P. Kendall and S. E. Squires and D. E. Post}, 
booktitle={ICSE'07}, 
title={Software Development Environments for Scientific and Engineering Software: A Series of Case Studies}, 
year={2007}}


@INPROCEEDINGS{hannay09_secs, 
author={J. E. Hannay and C. MacLeod and J. Singer and H. P. Langtangen and D. Pfahl and G. Wilson}, 
booktitle={2009 ICSE Workshop on Software Engineering for Computational Science and Engineering}, 
title={How do scientists develop and use scientific software?}, 
year={2009}, 
volume={}, 
number={}, 
pages={1-8}, 
keywords={scientific information systems;software engineering;scientific software;supercomputers;software testing;software engineering;software development projects;Software testing;Software engineering;Knowledge engineering;Resource management;Computer science education;Supercomputers;Peer to peer computing;Automatic testing;Software standards;Standards development}, 
doi={10.1109/SECSE.2009.5069155}, 
ISSN={}, 
month={May},}


@ARTICLE{merali10_error,
author = {Zeeya Merali},
journal = {Nature},
title = {Computational science: Error, why scientific programming does not compute},
year = {2010},
volume = {467},
number = {7317},
keywords={Sciences; scientific programming; software engineering},
doi = {10.1038/467775a},
}

@article{Krishna15_peer,
 author = {Krishnamurthi, Shriram and Vitek, Jan},
 title = {The Real Software Crisis: Repeatability As a Core Value},
 journal = {Commun. ACM},
 issue_date = {March 2015},
 volume = {58},
 number = {3},
 month = feb,
 year = {2015},
 issn = {0001-0782},
 pages = {34--36},
 numpages = {3},
 url = {http://doi.acm.org/10.1145/2658987},
 doi = {10.1145/2658987},
 acmid = {2658987},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@Article{segal05_ss,
author="Segal, Judith",
title="When Software Engineers Met Research Scientists: A Case Study",
journal="Empirical Software Engineering",
year="2005",
}

@Article{wilson14_SC,
AUTHOR = { Wilson, G},
TITLE = {Software Carpentry: Lessons Learned
},
JOURNAL = {F1000Research},
VOLUME = {3},
YEAR = {2014},
NUMBER = {62},
DOI = {10.12688/f1000research.3-62.v1}
}


@book{fowler10_dsl,
 author = {Fowler, Martin},
 title = {Domain Specific Languages},
 year = {2010},
 isbn = {0321712943, 9780321712943},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
} 

@book{bondi15_spe,
 author = {Bondi, A. B. },
 title = {Foundations of Software and System Performance Engineering: Process, Performance Modeling, Requirements, Testing, Scalability, and Practice},
 year = {2015},
 publisher = {Addison-Wesley Professional},
} 

@article{chemora_14,
  author    = {Erik Schnetter and
               Marek Blazewicz and
               Steven R. Brandt and
               David M. Koppelman and
               Frank L{\"{o}}ffler},
  title     = {Chemora: {A} {PDE} Solving Framework for Modern {HPC} Architectures},
  journal   = {CoRR},
  volume    = {abs/1410.1764},
  year      = {2014},
  url       = {http://arxiv.org/abs/1410.1764},
  archivePrefix = {arXiv},
  eprint    = {1410.1764},
  timestamp = {Mon, 13 Aug 2018 16:46:29 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/SchnetterBBKL14},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{johanson17_sprat,
title = "SPRAT: A spatially-explicit marine ecosystem model based on population balance equations",
journal = "Ecological Modelling",
volume = "349",
pages = "11 - 25",
year = "2017",
issn = "0304-3800",
doi = "https://doi.org/10.1016/j.ecolmodel.2017.01.020",
url = "http://www.sciencedirect.com/science/article/pii/S0304380017300704",
author = "Arne N. Johanson and Andreas Oschlies and Wilhelm Hasselbring and Boris Worm",
keywords = "End-to-end modeling, Population balance equation, Fish stock prediction, Ecosystem-based management"
}

@article{balsamo04_spe,
author = {Balsamo, Simonetta and Marco, Antinisca and Inverardi, Paola and Simeoni, Marta},
year = {2004},
month = {06},
pages = {295 - 310},
title = {Model-Based Performance Prediction in Software Development: A Survey},
volume = {30},
booktitle = {Software Engineering, IEEE Transactions on}
}

@INPROCEEDINGS{mayer07_testing, 
author={R. Guderlei and J. Mayer}, 
booktitle={Seventh International Conference on Quality Software (QSIC 2007)}, 
title={Statistical Metamorphic Testing Testing Programs with Random Output by Means of Statistical Hypothesis Tests and Metamorphic Testing}, 
year={2007}, 
volume={}, 
number={}, 
pages={404-409}, 
keywords={program testing;statistical analysis;statistical metamorphic testing;program testing;random output;statistical hypothesis tests;software testing;randomized software;implementation under test;Software testing;Statistical analysis;Random variables;Investments;Context modeling;Collaborative software;Software quality;Statistical distributions;Error correction;Probability}, 
doi={10.1109/QSIC.2007.4385527}, 
ISSN={1550-6002}, 
month={Oct},}

@inproceedings{hasselbring16_testing,
 author = {Hasselbring, Wilhelm},
 title = {Microservices for Scalability: Keynote Talk Abstract},
 booktitle = {Proceedings of the 7th ACM/SPEC on International Conference on Performance Engineering},
 series = {ICPE '16},
 year = {2016},
 isbn = {978-1-4503-4080-9},
 location = {Delft, The Netherlands},
 pages = {133--134},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/2851553.2858659},
 doi = {10.1145/2851553.2858659},
 acmid = {2858659},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {microservices, monitoring, scalability},
} 


@INPROCEEDINGS{hasselbring17_testing, 
author={W. Hasselbring and G. Steinacker}, 
booktitle={2017 IEEE International Conference on Software Architecture Workshops (ICSAW)}, 
title={Microservice Architectures for Scalability, Agility and Reliability in E-Commerce}, 
year={2017}, 
volume={}, 
number={}, 
pages={243-246}, 
keywords={electronic commerce;information systems;middleware;software architecture;software quality;software reliability;microservice architectures;scalability;agility;reliability;e-commerce;middleware stacks;vertical decomposition;self contained systems;microservices granularity;automated quality assurance;information system integration;Computer architecture;Scalability;Pipelines;Software;Business;Reliability;Monitoring;Microservices;Scalability;Agility;Reliability;E-Commerce}, 
doi={10.1109/ICSAW.2017.11}, 
ISSN={}, 
month={April},}

@ARTICLE{thew09_requirement, 
author={S. Thew and A. Sutcliffe and R. Procter and O. de Bruijn and J. McNaught and C. C. Venters and I. Buchan}, 
journal={IEEE Software}, 
title={Requirements Engineering for E-science: Experiences in Epidemiology}, 
year={2009}, 
volume={26}, 
number={1}, 
pages={80-87}, 
keywords={data visualisation;medical computing;systems analysis;requirements engineering;E-science;geographic visualization;public-health decision making;Visualization;Diseases;Iterative methods;Geographic Information Systems;Biomedical informatics;Decision making;Genetics;Technological innovation;Usability;Data engineering;requirements analysis;epidemiology;maps;data-driven research;storyboards;scenarios;ethnography;tacit knowledge;ontology development;prototyping}, 
doi={10.1109/MS.2009.19}, 
ISSN={0740-7459}, 
month={Jan},}

@article{garcia13_requirement,
author = {Corral García, Javier and Gómez-Martín, César and González-Sánchez, J.L. and Cortés Polo, David},
year = {2013},
month = {08},
pages = {},
title = {Development of Scientific Applications with High-Performance Computing through a Component-Based and Aspect-Oriented Methodology},
volume = {3},
booktitle = {International Journal of Advanced Computer Science}
}

@inproceedings{bird09_bias,
author = {Bird, C. and Bachmann, A. and Aune, E. and Duffy, J. and Bernstein, A. and Filkov, V. and Devanbu, P.},
year = {2009},
title = {Fair and Balanced? Bias in Bug-Fix Datasets},
}

@inproceedings{herzig13_misclassifications,
 author = {Herzig, K. and Just, S. and Zeller, A.},
 title = {It's Not a Bug, It's a Feature: How Misclassification Impacts Bug Prediction},
 booktitle = {ICSE},
 year = {2013}
} 


@ARTICLE {hall12_slr_dp,
author = {T. Hall and S. Beecham and D. Bowes and D. Gray and S. Counsell},
journal = {IEEE TSE},
title = {A Systematic Literature Review on Fault Prediction Performance in Software Engineering},
year = {2012}
}


@inproceedings{gray11_misuse,
author = {Gray, D and Bowes, David and Davey, N and Sun, Yi and Christianson, Bruce},
year = {2011},
month = {01},
pages = {},
title = {The Misuse of the NASA Metrics Data Program Data Sets for Automated Software Defect Prediction},
volume = {2011},
journal = {IET Seminar Digest},
doi = {10.1049/ic.2011.0012}
}

@INPROCEEDINGS{zeng2008fast, 
author={Zeng, Z. Q. and Yu, H. B. and Xu, H. R. and Xie, Y. Q. and Gao, J.}, 
booktitle={3rd ISKE}, 
title={Fast training Support Vector Machines using parallel sequential minimal optimization}, 
year={2008}, 
keywords={multiprocessing systems;parallel processing;quadratic programming;support vector machines;fast training support vector machines;parallel sequential minimal optimization;large-scale quadratic programming;memory space;symmetric multiprocessor machine;Support vector machines;Quadratic programming;Knowledge engineering;Optimization methods;Computer science;Matrix decomposition;Intelligent systems;Industrial training;Face detection;Training data}, 
doi={10.1109/ISKE.2008.4731075}, 
ISSN={}, 
month={Nov},}

@article{danijel13lit,
author = {Radjenović, D. and Hericko, M. and Torkar, R. and Živkovič, A.},
year = {2013},
title = {Software fault prediction metrics: A systematic literature review},
journal = {IST},
}

@ARTICLE{dpmetrics94, 
author={S. R. {Chidamber} and C. F. {Kemerer}}, 
journal={IEEE Transactions on Software Engineering}, 
title={A metrics suite for object oriented design}, 
year={1994}, 
keywords={object-oriented programming;object-oriented methods;software metrics;object oriented design;metrics suite;software development;process improvement;software measures;organization;automated data collection tool;measurement principles;object oriented programming;Programming;Information management;Software measurement;Engineering management;Application software;Information technology;Software development management;Technology management;Ontologies;Software engineering}, }

@INPROCEEDINGS{zimmerman, 
author={S. {Kim} and T. {Zimmermann} and K. {Pan} and E. J. {Jr. Whitehead}}, 
booktitle={21st IEEE/ACM International Conference on Automated Software Engineering (ASE'06)}, 
title={Automatic Identification of Bug-Introducing Changes}, 
year={2006}, 
keywords={configuration management;graph theory;program debugging;automatic bug identification;bug fixing;software bugs;false positives;false negatives;annotation graphs;nonsemantic source code changes;outlier fix;Computer bugs;Open source software;Software debugging;History;Project management;Inspection;Risk analysis;Fixtures;Computer industry;Electrical equipment industry}, }

@inproceedings{yang16effort,
 author = {Yang, Y. and Zhou, Y. and Liu, J. and Zhao, Y. and Lu, H. and Xu, L. and Xu, B. and Leung, H.},
 title = {Effort-aware Just-in-time Defect Prediction: Simple Unsupervised Models Could Be Better Than Supervised Models},
 booktitle = {24th SIGSOFT FSE},
 year = {2016},
 keywords = {Defect, changes, effort-aware, just-in-time, prediction},
} 

@ARTICLE{monden13cost, 
author={A. {Monden} and T. {Hayashi} and S. {Shinoda} and K. {Shirai} and J. {Yoshida} and M. {Barker} and K. {Matsumoto}}, 
journal={IEEE TSE}, 
title={Assessing the Cost Effectiveness of Fault Prediction in Acceptance Testing}, 
year={2013}, 
keywords={program testing;resource allocation;software cost estimation;software fault tolerance;software metrics;cost effectiveness assessment;fault prediction;acceptance testing;quality improvement;cost reduction;software testing;test effort allocation strategies;fault discovery;resource allocation strategy;test resources;telecommunication industry;metrics collection;data cleansing;data modeling;effort-aware measure;Testing;Predictive models;Measurement;Software;Resource management;Companies;Accuracy;Complexity measures;fault prediction;quality assurance;resource allocation;simulation}, }

@INPROCEEDINGS{mende10effort, 
author={T. {Mende} and R. {Koschke}}, 
booktitle={14th CSMR}, 
title={Effort-Aware Defect Prediction Models}, 
year={2010}, 
keywords={program testing;quality assurance;software performance evaluation;software quality;effort-aware defect prediction models;error-prone modules;software system;quality assurance activity;trivial classifier ordering files;random module selection;prediction process;Predictive models;Testing;Prediction algorithms;Object oriented modeling;Quality assurance;Complexity theory;Data models;Defect Prediction Models;Evaluation;Cost-Benefits},}

@ARTICLE{ostrand05fault, 
author={T. J. {Ostrand} and E. J. {Weyuker} and R. M. {Bell}}, 
journal={IEEE TSE}, 
title={Predicting the location and number of faults in large software systems}, 
year={2005},
keywords={program testing;software fault tolerance;binomial distribution;regression analysis;large software systems;binomial regression model;software fault prediction;software testing;Software systems;Predictive models;Fault diagnosis;System testing;History;Fault detection;Software testing;Personnel;Resource management;Sorting;Index Terms- Software faults;fault-prone;prediction;regression model;empirical study;software testing.}, }

@article{munaiah17curating,
 author = {Munaiah, N. and Kroh, S. and Cabrey, C. and Nagappan, M.},
 title = {Curating GitHub for Engineered Software Projects},
 journal = {EMSE},
 year = {2017},
} 


@inproceedings{zhu2018test,
 title={Test Re-prioritization in Continuous Testing Environments},
 author={Zhu, Yuecai and Shihab, Emad and Rigby, Peter C},
 booktitle={2018 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
 pages={69--79},
 year={2018},
 organization={IEEE}
}


@article{eirini15promise,
author = {Kalliamvakou, E. and Gousios, G. and Blincoe, K. and Singer, L. and M German, D. and Damian, D.},
year = {2015},
title = {The Promises and Perils of Mining GitHub (Extended Version)},
journal = {EMSE}
}


@INPROCEEDINGS{bird09promise, 
author={C. {Bird} and P. C. {Rigby} and E. T. {Barr} and D. J. {Hamilton} and D. M. {German} and P. {Devanbu}}, 
booktitle={Mining Software Repositories}, 
title={The promises and perils of mining git}, 
year={2009}
}

@ARTICLE{comments07, 
author={H. {Zhang} and X. {Zhang}}, 
journal={IEEE TSE}, 
title={Comments on "Data Mining Static Code Attributes to Learn Defect Predictors"}, 
year={2007}, 
keywords={data mining;learning (artificial intelligence);data mining static code attributes;defect predictors;detection probability;false alarm probability;Data mining;Predictive models;Accuracy;Area measurement;Q measurement;Machine learning;Training data;Information retrieval;Resource management;defect prediction;accuracy measures;static code attributes;empirical}, 
}

@ARTICLE{shatnawi10g1, 
author={R. {Shatnawi}}, 
journal={IEEE TSE}, 
title={A Quantitative Investigation of the Acceptable Risk Levels of Object-Oriented Metrics in Open-Source Systems}, 
year={2010}, 
keywords={decision trees;object-oriented programming;public domain software;software fault tolerance;software maintenance;software metrics;statistical analysis;object-oriented metrics;open source systems;software complexity;software design;software metrics;statistical model;logistic regression;Chidamber and Kemerer metrics;Eclipse project version 2.1;decision trees;threshold values;data distribution parameters;Open source software;Object oriented modeling;Software metrics;Software quality;Software testing;Software design;Predictive models;Quality assurance;Probability;Fault diagnosis;Object-oriented programming;product metrics;CK metrics;threshold values;open-source software.}, }

@article{sedp100,
author = {Shihab, E.},
year = {2019},
month = {02},
title = {AN EXPLORATION OF CHALLENGES LIMITING PRAGMATIC SOFTWARE DEFECT PREDICTION}
}

@article{softwareecon,
author = {, Tassey and , Gregory},
year = {2002},
month = {05},
pages = {},
title = {The Economic Impacts of Inadequate Infrastructure for Software Testing}
}

@ARTICLE{costa17szz, 
author={D. A. {da Costa} and S. {McIntosh} and W. {Shang} and U. {Kulesza} and R. {Coelho} and A. E. {Hassan}}, 
journal={TSE}, 
title={A Framework for Evaluating the Results of the SZZ Approach for Identifying Bug-Introducing Changes}, 
year={2017}, 
keywords={program debugging;SZZ approach;bug-introducing change identification;Silwerski-Zimmermann-Zeller approach;ground truth;open source projects;data evaluation;Computer bugs;Software engineering;Electronic mail;Software;Manuals;History;Systematics;SZZ;evaluation framework;bug detection;software repository mining},}

@INPROCEEDINGS{bird09reliabity, 
author={C. {Bird} and N. {Nagappan} and H. {Gall} and B. {Murphy} and P. {Devanbu}}, 
booktitle={ISSRE}, 
title={Putting It All Together: Using Socio-technical Networks to Predict Failures}, 
year={2009}
}

@INPROCEEDINGS{Jureczko10oodp,
    author = {M. Jureczko and D. D. Spinellis},
    title = {Using Object-Oriented Design Metrics to Predict Software Defects},
    booktitle = {Models and Methods of System Dependability},
    year = {2010},
}

@article{settles2012active,
  title={Active learning},
  author={Settles, B.},
  journal={Synthesis Lectures on Artificial Intelligence and Machine Learning},
  year={2012},
}

@inproceedings{Yin11fixes,
 author = {Yin, Z. and Yuan, D. and Zhou, Y. and Pasupathy, S. and Bairavasundaram, L.},
 title = {How Do Fixes Become Bugs?},
 series = {ESEC/FSE},
 year = {2011},
 keywords = {bug fixing, human factor, incorrect fixes, software bugs, testing},
} 

@article{Sliwerski05changes,
 author = {\'{S}liwerski, Jacek and Zimmermann, Thomas and Zeller, Andreas},
 title = {When Do Changes Induce Fixes?},
 journal = {SIGSOFT Softw. Eng. Notes},
 year = {2005},
} 

@inproceedings{Eyolfson11bugginess,
 author = {Eyolfson, J. and Tan, L. and Lam, P.},
 title = {Do Time of Day and Developer Experience Affect Commit Bugginess?},
 booktitle = {MSR},
 year = {2011},
 keywords = {bug detection, empirical study, source control system},
} 



@inproceedings{aversano07bug,
 author = {Aversano, L. and Cerulo, L. and Del Grosso, C.},
 title = {Learning from Bug-introducing Changes to Prevent Fault Prone Code},
 booktitle = {ESEC/FSE IWPSE},
 year = {2007},
 keywords = {bug prediction, mining software repositories, software evolution},
} 

@INPROCEEDINGS{nagappan05codechurn, 
author={N. Nagappan and T. Ball}, 
booktitle={ICSE}, 
title={Use of relative code churn measures to predict system defect density}, 
year={2005}, 
keywords={regression analysis;systems analysis;software metrics;relative code churn measures;system defect density prediction;statistical regression;multiple regression;principal component analysis;Density measurement;Time measurement;Software systems;Software measurement;Software quality;Software engineering;History;Automatic control;Control systems;Computer science},}

@article{elbaum00codechurn,
author = {Elbaum, S. and Munson, J.},
year = {2000},
title = {Code Churn: A Measure for Estimating the Impact of Code Change},
journal = {ICSME}
}

@INPROCEEDINGS{moser08changemetrics, 
author={R. Moser and W. Pedrycz and G. Succi}, 
booktitle={30th ICSE}, 
title={A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction}, 
year={2008},
keywords={Bayes methods;decision trees;Java;learning (artificial intelligence);pattern classification;program diagnostics;regression analysis;software metrics;software quality;comparative analysis;change metrics;static code attribute;defect prediction;product related software metrics;process related software metrics;Java file classification;Eclipse project;machine learning;logistic regression;naive Bayes method;decision tree;cost-sensitive classification;software quality;Costs;Predictive models;Testing;Software metrics;Logistics;Software engineering;Resource management;Permission;Java;Classification tree analysis;cost-sensitive classification;defect prediction;software metrics}, }

@article{menzies17, author = {Menzies, Tim and Nichols, William and Shull, Forrest and Layman, Lucas}, title = {Are Delayed Issues Harder to Resolve? Revisiting Cost-to-Fix of Defects throughout the Lifecycle}, year = {2017}, issue_date = {August 2017}, publisher = {Kluwer Academic Publishers}, address = {USA}, volume = {22}, number = {4}, issn = {1382-3256}, url = {https://doi.org/10.1007/s10664-016-9469-x}, doi = {10.1007/s10664-016-9469-x}, journal = {Empirical Softw. Engg.}, month = aug, pages = {1903–1935}, numpages = {33}, keywords = {Cost to fix, Software economics, Phase delay} }


@INPROCEEDINGS{hassan09codechanges, 
author={A. E. Hassan}, 
booktitle={IEEE 31st ICSE}, 
title={Predicting faults using the complexity of code changes}, 
year={2009}, 
keywords={program diagnostics;program verification;software fault tolerance;software metrics;fault prediction;code changes complexity;fault incidence;complexity measurement;complexity metrics;code change process;Software systems;Predictive models;Software measurement;Delay;History;Lab-on-a-chip;Information theory;Entropy;Project management}, }

@article{menzies10dp,
 author = {Menzies, T. and Milton, Z. and Turhan, B. and Cukic, B. and Jiang, Y. and Bener, A.},
 title = {Defect Prediction from Static Code Features: Current Results, Limitations, New Approaches},
 journal = {ASE},
 year = {2010},
 keywords = {Defect prediction, Static code features, WHICH},
} 


@INPROCEEDINGS{ambros10extensive, 
author={M. D'Ambros and M. Lanza and R. Robbes}, 
booktitle={MSR}, 
title={An extensive comparison of bug prediction approaches}, 
year={2010},
keywords={program debugging;resource allocation;software engineering;bug prediction approaches;software defects;software engineering;resource allocation problem;Computer bugs;Entropy;Software systems;Predictive models;Open source software;Informatics;Computer science;Software engineering;Stability;Power system modeling}, }


@ARTICLE{7588121, 
author={D. A. {da Costa} and S. {McIntosh} and W. {Shang} and U. {Kulesza} and R. {Coelho} and A. E. {Hassan}}, 
journal={IEEE Transactions on Software Engineering}, 
title={A Framework for Evaluating the Results of the SZZ Approach for Identifying Bug-Introducing Changes}, 
year={2017}, 
volume={43}, 
number={7}, 
pages={641-657}, 
keywords={program debugging;SZZ approach;bug-introducing change identification;Silwerski-Zimmermann-Zeller approach;ground truth;open source projects;data evaluation;Computer bugs;Software engineering;Electronic mail;Software;Manuals;History;Systematics;SZZ;evaluation framework;bug detection;software repository mining}, 
doi={10.1109/TSE.2016.2616306}, 
ISSN={}, 
month={July},}

@ARTICLE{menzies07dp, 
author={T. Menzies and J. Greenwald and A. Frank}, 
journal={TSE}, 
title={Data Mining Static Code Attributes to Learn Defect Predictors}, 
year={2007},
keywords={data mining;learning (artificial intelligence);program diagnostics;program testing;software quality;data mining;static code attributes;defect predictor learning;McCabes versus Halstead;lines of code counts;resource-bound exploration;Data mining;Bayesian methods;Artificial intelligence;Software testing;System testing;Learning systems;Art;Software quality;Software systems;Financial management;Data mining detect prediction;McCabe;Halstead;artifical intelligence;empirical;naive Bayes.}, }

@misc{pcmsolver,
  author       = {R. D. Remigio and
                  L. Frediani and
                  K. Mozgawa},
  title        = {PCMSolver},
  year         = 2014,
  url          = {https://doi.org/10.5281/zenodo.11910}
}
@misc{xenon,
  author       = {Maassen, J. and
                  Verhoeven, S. and
                  Borgdorff, J. and
                  Spaaks, J. H. and
                  Drost, N. and
                  Meijer, C. and
                  Van Der Ploeg, A. and
                  De Boer, Piter T. and
                  Van Nieuwpoort, R. and
                  Van Werkhoven, B. and
                  Kuzniar, A.},
  title        = {Xenon},
  year         = {2018},
  url          = {https://doi.org/10.5281/zenodo.1287235}
}
@inproceedings{mdanalysis,
  author       = {O. Beckstein and
                  R. Gowers and
                  M. Matta and
                  S. Fan},
  title        = {MDAnalysis: A Python package for the rapid analysis of molecular dynamics simulations},
  booktitle = {The 15th Python in Science Conference},
  year         = {2016},
}
@misc{hoomd,
  author = {J. Anderson and A. Travesset},
  title = {HOOMD-Blue},
  year = {2019},
  journal = {Bitbucket repository},
  howpublished = {\url{https://bitbucket.org/glotzer/hoomd-blue}},
}

@misc{Abinit,
  author = {X. Gonze and D.C. Allan},
  title = {ABINIT},
  year = {2000},
  publisher = {Github},
  journal = {Github repository},
  howpublished = {\url{https://github.com/abinit/abinit/}},
}
@misc{Amber-MD,
  author = {D. R. Roe and J. M. Swails},
  title = {CPPTRAJ},
  year = {2010},
  journal = {Github repository},
  howpublished = {\url{https://github.com/Amber-MD/cpptraj}},
}
@misc{ReactionMechanismGenerator,
  author = {W. H. Green and R. H. West},
  title = {RMG-Py},
  year = {2002},
  journal = {Github repository},
  howpublished = {\url{https://github.com/ReactionMechanismGenerator/RMG-Py}},
}
@misc{lammps-sandia,
  author = {S. Plimpton and A. Thompson and S. Moore and A. Kohlmeyer and R. Berger},
  title = {LAMMPS},
  year = {2004},
  journal = {Github repository},
  howpublished = {\url{https://github.com/lammps/lammps}},
}
@Article{libMesh,
  author  = {B.~S.~Kirk and J.~W.~Peterson and R.~H.~Stogner and G.~F.~Carey},
  title   = {{\texttt{libMesh}: A C++ Library for Parallel Adaptive Mesh Refinement/Coarsening Simulations}},
  journal = {Engineering with Computers},
  year    = 2006,
  note    = {\url{https://doi.org/10.1007/s00366-006-0049-3}}
}

@article{fu05committopic,
title = "Automated classification of software change messages by semi-supervised Latent Dirichlet Allocation",
journal = "Information and Software Technology",
author = "Y. Fu and M. Yan and X. Zhang and L. Xu and D. Yang and J. D. Kymer",
keywords = "Software repositories mining, Semi-supervised topic modeling, LDA, Change message",
abstract = "Context
Topic models such as probabilistic Latent Semantic Analysis (pLSA) and Latent Dirichlet Allocation (LDA) have demonstrated success in mining software repository tasks. Understanding software change messages described by the unstructured nature-language text is one of the fundamental challenges in mining these messages in repositories.
Objective
We seek to present a novel automatic change message classification method characterized by semi-supervised topic semantic analysis.
Method
In this work, we present a semi-supervised LDA based approach to automatically classify change messages. We use domain knowledge of software changes to make labeled samples which are added to build the semi-supervised LDA model. Next, we verify the cross-project analysis application of our method on three open-source projects. Our method has two advantages over existing software change classification methods: First of all, it mitigates the issue of how to set the appropriate number of latent topics. We do not have to choose the number of latent topics in our method, because it corresponds to the number of class labels. Second, this approach utilizes the information provided by the label samples in the training set.
Results
Our method automatically classified about 85% of the change messages in our experiment and our validation survey showed that 70.56% of the time our automatic classification results were in agreement with developer opinions.
Conclusion
Our approach automatically classifies most of the change messages which record the cause of the software change and the method is applicable to cross-project analysis of software change messages."
}

inproceedings{Hindle08commit,
 author = {Hindle, A. and German, D. M. and Holt, R.},
 title = {What Do Large Commits Tell Us?: A Taxonomical Study of Large Commits},
 booktitle = {MSR},
 year = {2008},
 keywords = {large commits, software evolution, source control system},
} 


@inproceedings{Vasilescu15github,
 author = {Vasilescu, B. and Yu, Y. and Wang, H. and Devanbu, P. and Filkov, V.},
 title = {Quality and Productivity Outcomes Relating to Continuous Integration in GitHub},
 booktitle = {FSE},
 year = {2015},
 keywords = {Continuous integration, GitHub, pull requests},
} 






@INPROCEEDINGS{hannay09_secs, 
author={J. E. Hannay and C. MacLeod and J. Singer and H. P. Langtangen and D. Pfahl and G. Wilson}, 
booktitle={2009 ICSE Workshop on Software Engineering for Computational Science and Engineering}, 
title={How do scientists develop and use scientific software?}, 
year={2009}, 
keywords={scientific information systems;software engineering;scientific software;supercomputers;software testing;software engineering;software development projects;Software testing;Software engineering;Knowledge engineering;Resource management;Computer science education;Supercomputers;Peer to peer computing;Automatic testing;Software standards;Standards development}, }



@article{Krishna15_peer,
 author = {Krishnamurthi, Shriram and Vitek, Jan},
 title = {The Real Software Crisis: Repeatability As a Core Value},
 journal = {Commun. ACM},
 issue_date = {March 2015},
 year = {2015},
} 


@Article{wilson14_SC,
AUTHOR = { Wilson, G},
TITLE = {Software Carpentry: Lessons Learned
},
JOURNAL = {F1000Research},
VOLUME = {3},
YEAR = {2014},
}


@book{fowler10_dsl,
 author = {Fowler, Martin},
 title = {Domain Specific Languages},
 year = {2010},
} 

@book{bondi15_spe,
 author = {Bondi, A. B. },
 title = {Foundations of Software and System Performance Engineering: Process, Performance Modeling, Requirements, Testing, Scalability, and Practice},
 year = {2015},
} 

@article{chemora_14,
  author    = {Erik Schnetter and
               Marek Blazewicz and
               Steven R. Brandt and
               David M. Koppelman and
               Frank L{\"{o}}ffler},
  title     = {Chemora: {A} {PDE} Solving Framework for Modern {HPC} Architectures},
  journal   = {CoRR},
  year      = {2014},
}

@article{johanson17_sprat,
title = "SPRAT: A spatially-explicit marine ecosystem model based on population balance equations",
journal = "Ecological Modelling",
year = "2017",
author = "A. N. Johanson and A. Oschlies and W. Hasselbring and B. Worm",
keywords = "End-to-end modeling, Population balance equation, Fish stock prediction, Ecosystem-based management"
}

@article{balsamo04_spe,
author = {Balsamo, Simonetta and Marco, Antinisca and Inverardi, Paola and Simeoni, Marta},
year = {2004},
title = {Model-Based Performance Prediction in Software Development: A Survey},
booktitle = {TSE}
}


@INPROCEEDINGS{mayer07_testing, 
author={R. Guderlei and J. Mayer}, 
booktitle={QSIC}, 
title={Statistical Metamorphic Testing Testing Programs with Random Output by Means of Statistical Hypothesis Tests and Metamorphic Testing}, 
year={2007}, 
keywords={program testing;statistical analysis;statistical metamorphic testing;program testing;random output;statistical hypothesis tests;software testing;randomized software;implementation under test;Software testing;Statistical analysis;Random variables;Investments;Context modeling;Collaborative software;Software quality;Statistical distributions;Error correction;Probability},}

@inproceedings{hasselbring16_testing,
 author = {Hasselbring, Wilhelm},
 title = {Microservices for Scalability: Keynote Talk Abstract},
 booktitle = {Proceedings of the 7th ACM/SPEC on ICPE},
 year = {2016},
 keywords = {microservices, monitoring, scalability},
} 


@INPROCEEDINGS{hasselbring17_testing, 
author={W. Hasselbring and G. Steinacker}, 
booktitle={ICSAW}, 
title={Microservice Architectures for Scalability, Agility and Reliability in E-Commerce}, 
year={2017}, 
keywords={electronic commerce;information systems;middleware;software architecture;software quality;software reliability;microservice architectures;scalability;agility;reliability;e-commerce;middleware stacks;vertical decomposition;self contained systems;microservices granularity;automated quality assurance;information system integration;Computer architecture;Scalability;Pipelines;Software;Business;Reliability;Monitoring;Microservices;Scalability;Agility;Reliability;E-Commerce}, }

@ARTICLE{thew09_requirement, 
author={S. Thew and A. Sutcliffe and R. Procter and O. de Bruijn and J. McNaught and C. C. Venters and I. Buchan}, 
journal={IEEE Software}, 
title={Requirements Engineering for E-science: Experiences in Epidemiology}, 
year={2009}, 
keywords={data visualisation;medical computing;systems analysis;requirements engineering;E-science;geographic visualization;public-health decision making;Visualization;Diseases;Iterative methods;Geographic Information Systems;Biomedical informatics;Decision making;Genetics;Technological innovation;Usability;Data engineering;requirements analysis;epidemiology;maps;data-driven research;storyboards;scenarios;ethnography;tacit knowledge;ontology development;prototyping},}

@article{garcia13_requirement,
author = {Corral García, J. and Gómez-Martín, C. and González-Sánchez, J.L. and Cortés Polo, D.},
year = {2013},
title = {Development of Scientific Applications with High-Performance Computing through a Component-Based and Aspect-Oriented Methodology},
booktitle = {IJACSA}
}


@INPROCEEDINGS{kamei16_lit, 
author={Y. Kamei and E. Shihab}, 
booktitle={SANER}, 
title={Defect Prediction: Accomplishments and Future Challenges}, 
year={2016}, 
keywords={software metrics;software quality;software prediction models;software defect prediction;software quality assurance;software systems complexity;Software;Predictive models;Data models;Complexity theory;Market research;Power measurement;Software quality assurance;defect prediction;trends and future directions}, }

@inproceedings{commitguru,
 author = {Rosen, C. and Grawi, B. and Shihab, E.},
 title = {Commit Guru: Analytics and Risk Prediction of Software Commits},
 series = {ESEC/FSE 2015},
 year = {2015},
 keywords = {Risky Software Commits, Software Analytics, Software Metrics, Software Prediction},
} 

@INPROCEEDINGS{barnett13_mcontent, 
author={J. G. Barnett and C. K. Gathuru and L. S. Soldano and S. McIntosh}, 
booktitle={MSR}, 
title={The Relationship between Commit Message Detail and Defect Proneness in Java Projects on GitHub}, 
year={2016}
}

@INPROCEEDINGS{catolino17_jitmobile, 
author={G. Catolino}, 
booktitle={MOBILESoft}, 
title={Just-In-Time Bug Prediction in Mobile Applications: The Domain Matters!}, 
year={2017}
}

@inproceedings{nayrolles18_clever,
 author = {Nayrolles, M. and Hamou-Lhadj, A.},
 title = {CLEVER: Combining Code Metrics with Clone Detection for Just-in-time Fault Prevention and Resolution in Large Industrial Projects},
 booktitle = {MSR},
 year = {2018},
 keywords = {defect predictions, fault fixing, software evolution, software maintenance},
} 

@INPROCEEDINGS{cordy11_NiCad, 
author={J. R. Cordy and C. K. Roy}, 
booktitle={ICPC}, 
title={The NiCad Clone Detector}, 
year={2011}, 
keywords={embedded systems;formal specification;software tools;NiCad clone detector;clone detection tool;automated detection of near-miss intentional clones;hybrid clone detection method;command-line tool;IDE;XML;HTML;component-based plugin architecture;very large systems;FreeBSD;Cloning;Java;Detectors;Syntactics;Linux;HTML;Web pages;tools;clone detection;NiCad;plugin architecture}, }

@ARTICLE{yan18_tddetermination, 
author={M. Yan and X. Xia and E. Shihab and D. Lo and J. Yin and X. Yang}, 
journal={TSE}, 
title={Automating Change-level Self-admitted Technical Debt Determination}, 
year={2018},
keywords={Feature extraction;Java;Measurement;History;Labeling;Software quality;Technical Debt;Software Change;Change-level Determination;Self-admitted Technical Debt}, }

@article{fluri07_changedistiller,
 author = {Fluri, B. and Wuersch, M. and PInzger, M. and Gall, H.},
 title = {Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction},
 journal = {TSE},
 year = {2007},
 keywords = {Source code change extraction, Source code change extraction, tree differencing algorithms, software repositories, software evolution analysis, software evolution analysis, software repositories, tree differencing algorithms},
} 



@inproceedings{nguyen2015combining,
  title={Combining crowd and expert labels using decision theoretic active learning},
  author={Nguyen, A. T. and Wallace, B. C. and Lease, M.},
  booktitle={HCOMP},
  year={2015}
}

@inproceedings{legoues12_aprlit,
 author = {Le Goues, C. and Dewey-Vogt, M. and Forrest, S. and Weimer, W.},
 title = {A Systematic Study of Automated Program Repair: Fixing 55 out of 105 Bugs for \$8 Each},
 series = {ICSE},
 year = {2012},
} 

@INPROCEEDINGS{nguyen13_semfix, 
author={H. D. T. Nguyen and D. Qi and A. Roychoudhury and S. Chandra}, 
booktitle={ICSE}, 
title={SemFix: Program repair via semantic analysis}, 
year={2013}, 
keywords={genetic algorithms;program debugging;program testing;software engineering;SemFix;automated program repair methods;semantic analysis;debugging;software development project;symbolic execution;constraint solving;program synthesis;repair expressions;repair code complexity;genetic programming based repair;SIR programs;seeded bugs;GNU Coreutils;Maintenance engineering;Computer bugs;Genetic programming;Input variables;Semantics;Syntactics;Educational institutions}, }







@article{Krishna15_peer,
 author = {Krishnamurthi, S. and Vitek, J.},
 title = {The Real Software Crisis: Repeatability As a Core Value},
 journal = {Commun. ACM},
 year = {2015},
} 


@Article{wilson14_SC,
AUTHOR = { Wilson, G},
TITLE = {Software Carpentry: Lessons Learned},
JOURNAL = {F1000Research},
YEAR = {2014},
}


@book{fowler10_dsl,
 author = {Fowler, M.},
 title = {Domain Specific Languages},
 year = {2010},
 publisher = {Addison-Wesley Professional},
} 

@book{bondi15_spe,
 author = {Bondi, A. B. },
 title = {Foundations of Software and System Performance Engineering: Process, Performance Modeling, Requirements, Testing, Scalability, and Practice},
 year = {2015},
 publisher = {Addison-Wesley Professional},
} 


 
@book{Witten:2011,
 author = {Witten, I. H. and Frank, E. and Hall, M. A.},
 title = {Data Mining: Practical Machine Learning Tools and Techniques},
 year = {2011},
 edition = {3rd},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
} 
[download]

@article{chemora_14,
  author    = {E. Schnetter and
               M. Blazewicz and
               S. R. Brandt and
               D. M. Koppelman and
               F. L{\"{o}}ffler},
  title     = {Chemora: {A} {PDE} Solving Framework for Modern {HPC} Architectures},
  journal   = {CoRR},
  year      = {2014},
}

@article{johanson17_sprat,
title = "SPRAT: A spatially-explicit marine ecosystem model based on population balance equations",
journal = "Ecological Modelling",
year = "2017",
author = "Arne N. Johanson and Andreas Oschlies and Wilhelm Hasselbring and Boris Worm",
keywords = "End-to-end modeling, Population balance equation, Fish stock prediction, Ecosystem-based management"
}

@article{balsamo04_spe,
author = {Balsamo, S. and Marco, A. and Inverardi, P. and Simeoni, M.},
year = {2004},
title = {Model-Based Performance Prediction in Software Development: A Survey},
booktitle = {TSE}
}

@INPROCEEDINGS{kanewala13_testing, 
author={U. Kanewala and J. M. Bieman}, 
booktitle={ISSRE}, 
title={Using machine learning techniques to detect metamorphic relations for programs without test oracles}, 
year={2013},}

@INPROCEEDINGS{mayer07_testing, 
author={R. Guderlei and J. Mayer}, 
booktitle={QSIC}, 
title={Statistical Metamorphic Testing Testing Programs with Random Output by Means of Statistical Hypothesis Tests and Metamorphic Testing}, 
year={2007},
keywords={program testing;statistical analysis;statistical metamorphic testing;program testing;random output;statistical hypothesis tests;software testing;randomized software;implementation under test;Software testing;Statistical analysis;Random variables;Investments;Context modeling;Collaborative software;Software quality;Statistical distributions;Error correction;Probability}, 
}

@inproceedings{hasselbring16_testing,
 author = {Hasselbring, W.},
 title = {Microservices for Scalability: Keynote Talk Abstract},
 series = {ICPE '16},
 year = {2016},
 keywords = {microservices, monitoring, scalability},
} 


@INPROCEEDINGS{hasselbring17_testing, 
author={W. Hasselbring and G. Steinacker}, 
booktitle={ICSAW}, 
title={Microservice Architectures for Scalability, Agility and Reliability in E-Commerce}, 
year={2017}, 
keywords={electronic commerce;information systems;middleware;software architecture;software quality;software reliability;microservice architectures;scalability;agility;reliability;e-commerce;middleware stacks;vertical decomposition;self contained systems;microservices granularity;automated quality assurance;information system integration;Computer architecture;Scalability;Pipelines;Software;Business;Reliability;Monitoring;Microservices;Scalability;Agility;Reliability;E-Commerce}, }

@ARTICLE{thew09_requirement, 
author={S. Thew and A. Sutcliffe and R. Procter and O. de Bruijn and J. McNaught and C. C. Venters and I. Buchan}, 
journal={IEEE Software}, 
title={Requirements Engineering for E-science: Experiences in Epidemiology}, 
year={2009}, 
keywords={data visualisation;medical computing;systems analysis;requirements engineering;E-science;geographic visualization;public-health decision making;Visualization;Diseases;Iterative methods;Geographic Information Systems;Biomedical informatics;Decision making;Genetics;Technological innovation;Usability;Data engineering;requirements analysis;epidemiology;maps;data-driven research;storyboards;scenarios;ethnography;tacit knowledge;ontology development;prototyping}, 
}

@article{garcia13_requirement,
author = {Corral García, J. and Gómez-Martín, C. and González-Sánchez, J.L. and Cortés Polo, D.},
year = {2013},
title = {Development of Scientific Applications with High-Performance Computing through a Component-Based and Aspect-Oriented Methodology},
booktitle = {IJACSA},
}

@INPROCEEDINGS{ghotra15, 
author={B. Ghotra and S. McIntosh and A. E. Hassan}, 
booktitle={2015 37th ICSE}, 
title={Revisiting the Impact of Classification Techniques on the Performance of Defect Prediction Models}, 
keywords={pattern classification;quality assurance;software quality;NASA dataset;PROMISE dataset;classification techniques;defect prediction models;defect-prone software modules;open source software;software quality assurance teams;Complexity theory;Decision trees;Logistics;NASA;Predictive models;Software;Training;Classification Techniques;Defect Prediction}, 
}

@article{Fu17easy,
  author    = {W. Fu and
               T. Menzies},
  title     = {Easy over Hard: {A} Case Study on Deep Learning},
  journal   = {CoRR},
  year      = {2017},
}

@inproceedings{Kalliamvakou:2014,
 author = {Kalliamvakou, E. and Gousios, G. and Blincoe, K. and Singer, L. and German, D. and Damian, D.},
 title = {The Promises and Perils of Mining GitHub},
 booktitle = {MSR},
 year = {2014},
} 

@misc{Vasilescu18z,
 author ="B. Vasilescu",
  year=2018,
  title="Personnel communication at FSE'18"
  }

@article{JMLR:v18:16-261,
  author  = {L. Kotthoff and C. Thornton and H. Hoos and F. Hutter and K. Leyton-Brown},
  title   = {Auto-WEKA 2.0: Automatic model selection and hyperparameter optimization in WEKA},
  journal = {Journal of Machine Learning Research},
  year    = {2017},
}

@inproceedings{wang13config,
 author = {Wang, T. and Harman, M. and Jia, Y. and Krinke, J.},
 title = {Searching for Better Configurations: A Rigorous Approach to Clone Evaluation},
 booktitle = {FSE},
 year = {2013},
 keywords = {Clone Detection, Genetic Algorithms, SBSE},
} 

@inproceedings{chen2017riot,
  title={RIOT: a Novel Stochastic Method for Rapidly Configuring Cloud-Based Workflows},
  author={Chen, J. and Menzies, T.},
  booktitle={IEEE Cloud 2018},
  year={2018}
}



@inproceedings{jia15combinatorial,
 author = {Jia, Y. and Cohen, M. B. and Harman, M. and Petke, J.},
 title = {Learning Combinatorial Interaction Test Generation Strategies Using Hyperheuristic Search},
 booktitle = {ICSE},
 year = {2015},
 isbn = {978-1-4799-1934-5},
 acmid = {2818821},
} 

@inproceedings{corazza10ee,
 author = {Corazza, A. and Di Martino, S. and Ferrucci, F. and Gravino, C. and Sarro, F. },
 title = {How Effective is Tabu Search to Configure Support Vector Regression for Effort Estimation?},
 booktitle = {6th PROMISE},
 year = {2010},
 acmid = {1868335},
 keywords = {Tabu search, development effort estimation, empirical studies, support vector machines, support vector regression},
} 

@inproceedings{minky13ensemble,
 author = {Minku, L. and Yao, X.},
 title = {An Analysis of Multi-objective Evolutionary Algorithms for Training Ensemble Models Based on Different Performance Measures in Software Effort Estimation},
 booktitle = {Proceedings of the 9th PROMISE},
 year = {2013},
 isbn = {978-1-4503-2016-0},
 acmid = {2499396},
 keywords = {ensembles of learning machines, multi-objective evolutionary algorithms, software effort estimation},
} 


@inproceedings{song13ee,
 author = {Song, L. and Minku, L. L. and Yao, X.},
 title = {The Impact of Parameter Tuning on Software Effort Estimation Using Learning Machines},
 booktitle = {9th PROMISE},
 year = {2013},
 keywords = {ensembles, machine learning, online learning, sensitivity to parameters, software effort estimation},
} 

@inproceedings{krishna16bellwether,
 author = {Krishna, R. and Menzies, T. and Fu, W.},
 title = {Too Much Automation? The Bellwether Effect and Its Implications for Transfer Learning},
 booktitle = {IEEE/ACM ICSE},
 series = {ASE 2016},
 isbn = {978-1-4503-3845-5},
 acmid = {2970339},
 keywords = {Data Mining, Defect Prediction, Transfer learning},
} 

@inproceedings{nam15hetero,
 author = {Nam, J. and Kim, S.},
 title = {Heterogeneous Defect Prediction},
 booktitle = {10th FSE},
 year = {2015},
 keywords = {Defect prediction, heterogeneous metrics, quality assurance},
}

@inproceedings{tan15online,
 author = {Tan, M. and Tan, L. and Dara, S.},
 title = {Online Defect Prediction for Imbalanced Data},
 booktitle = {ICSE},
  year = {2015},
} 

@article{Bergstra:2012,
 author = {Bergstra, J. and Bengio, Y.},
 title = {Random Search for Hyper-parameter Optimization},
 journal = {J. Mach. Learn. Res.},
 issue_date = {January 2012},
 year = {2012},
 publisher = {JMLR.org},
 keywords = {deep learning, global optimization, model selection, neural networks, response surface modeling},
} 



@inproceedings{bergstra11TPE,
 author = {Bergstra, J. and Bardenet, R. and Bengio, Y. and K{\'e}gl, B.},
 title = {Algorithms for Hyper-parameter Optimization},
 booktitle = {NIPS},
 year = {2011}
} 

@inproceedings{hutter11smac,
 author = {Hutter, F. and Hoos, H. H. and Leyton-Brown, K.},
 title = {Sequential Model-based Optimization for General Algorithm Configuration},
 booktitle = {5th LION},
 year = {2011}
} 

@inproceedings{snoek12gp,
 author = {Snoek, J. and Larochelle, H. and Adams, R.},
 title = {Practical Bayesian Optimization of Machine Learning Algorithms},
 booktitle = {NIPS - Volume 2},
 year = {2012}
} 

@incollection{feurer15autosk,
title = {Efficient and Robust Automated Machine Learning},
author = {Feurer, M. and Klein, A. and Eggensperger, K. and Springenberg, J. and Blum, M. and Hutter, F.},
booktitle = {NIPS 28},
year = {2015},
}
@inproceedings{agrawal2018we,
  title={We don't need another hero?: the impact of heroes on software development},
  author={Agrawal, A. , and Rahman, A. and Krishna, R. and Sobran, A. and Menzies, T.},
  booktitle={ICSE},
  year={2018}
}

@inproceedings{moser08defect,
 author = {Moser, R. and Pedrycz, W. and Succi, G.},
 title = {A Comparative Analysis of the Efficiency of Change Metrics and Static Code Attributes for Defect Prediction},
 booktitle = {2008 ICSE},
 keywords = {cost-sensitive classification, defect prediction, software metrics},
} 

@article{elish08defect,
 author = {Elish, K. O. and Elish, M. O.},
 title = {Predicting Defect-prone Software Modules Using Support Vector Machines},
 journal = {J. Syst. Softw.},
 issue_date = {May, 2008},
 volume = {81},
 number = {5},
 month = may,
 year = {2008},
 issn = {0164-1212},
 pages = {649--660},
 numpages = {12},
 acmid = {1353072},
 publisher = {Elsevier Science Inc.},
 address = {New York, NY, USA},
 keywords = {Defect-prone modules, Predictive models, Software metrics, Support vector machines},
}

@inproceedings{tanti16defect,
 author = {Tantithamthavorn, C. and McIntosh, S. and Hassan, A. E. and Matsumoto, K.},
 title = {Automated Parameter Optimization of Classification Techniques for Defect Prediction Models},
 booktitle = {38th ICSE},
 year = {2016},
 keywords = {classification techniques, experimental design, parameter optimization, software defect prediction},
} 

@misc{sk18,
 title="SKlean, manual",
 url="https://automl.github.io/auto-sklearn/stable/manual.html",
 year=2018
 }
 
@article{lessmann08benchmarking,
 author = {Lessmann, S. and Baesens, B. and Mues, C. and Pietsch, S.},
 title = {Benchmarking Classification Models for Software Defect Prediction: A Proposed Framework and Novel Findings},
 journal = {IEEE TSE},
 year = {2008},
 keywords = {Complexity measures, Complexity measures, Data mining, Formal methods, Statistical methods, Data mining, Formal methods, Statistical methods},
} 

@inproceedings{sayyad13sbse,
 author = {Sayyad, A. S. and Menzies, T. and Ammar, H.},
 title = {On the Value of User Preferences in Search-based Software Engineering: A Case Study in Software Product Lines},
 booktitle = {35th ICSE},
 year = {2013},
 isbn = {978-1-4673-3076-3},
 acmid = {2486853},
} 

@article{scikit-learn,
 title={Scikit-learn: Machine Learning in {P}ython},
 author={Pedregosa, F. and Varoquaux, G.},
 journal={Journal of Machine Learning Research},
 volume={12},
 pages={2825--2830},
 year={2011}
}

@article{storn1997de,
 author = {Storn, R. and Price, K.},
 title = {Differential Evolution; A Simple and Efficient Heuristic for Global Optimization over Continuous Spaces},
 journal = {J. of Global Optimization},
 issue_date = {December 1997},
 year = {1997},
 acmid = {596146},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Stochastic optimization, evolution strategy, genetic algorithm, global optimization, nonlinear optimization},
} 

@article{arcuri13parameterto,
  title={Parameter tuning or default values? An empirical investigation in search-based software engineering},
  author={Andrea Arcuri and Gordon Fraser},
  journal={Empirical Software Engineering},
  year={2013},
}
@INPROCEEDINGS{lowry98, 
author={M. Lowry and M. Boyd and D. Kulkami}, 
booktitle={13th IEEE ASE}, 
title={Towards a theory for integration of mathematical verification and empirical testing}, 
year={1998}, 
keywords={program verification;software reliability;program testing;programming theory;mathematical verification;empirical testing;software project management;software system verification;software system validation;coverage analysis;software fault detection;cost savings;tradeoffs;software reliability;formalized fault models;fault detection tool utility;black-box testing;white-box testing;structural testing;formal methods;utility model;case study;NASA software system;Fault detection;Software systems;Software testing;System testing;Project management;Software standards;Costs;Software reliability;Mathematical model;NASA}, }

@inproceedings{nagappan05,
 author = {Nagappan, N. and Ball, T.},
 title = {Static Analysis Tools As Early Indicators of Pre-release Defect Density},
 booktitle = {27th ICSE},
 year = {2005},
 keywords = {defect density, fault-proneness, static analysis tools, statistical methods},
} 
@inproceedings{menzies02_truism,
 author = {Menzies, T. and Raffo, D. and Setamanit, S. and Hu, Y. and Tootoonian, S.},
 title = {Model-Based Tests of Truisms},
 booktitle = {17th ASE},
 year = {2002},
} 

@inproceedings{lewis13_bug,
 author = {Lewis, C. and Lin, Z. and Sadowski, C. and Zhu, X. and Ou, R. and Whitehead Jr., E. J.},
 title = {Does Bug Prediction Support Human Developers? Findings from a Google Case Study},
 booktitle = {ICSE},
 year = {2013},
 pages = {372--381},
 numpages = {10},
 acmid = {2486838}
} 

@article{fu18_fft,
  author    = {W. Fu and
               T. Menzies and
               D. Chen and
               A. Agrawal},
  title     = {Building Better Quality Predictors Using "{\(\epsilon\)}-Dominance"},
  journal   = {CoRR},
  year      = {2018},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1803-04608}
}

@ARTICLE{jorgensen04_realism, 
author={M. Jorgensen}, 
journal={IEEE TSE}, 
title={Realism in assessment of effort estimation uncertainty: it matters how you ask}, 
year={2004}, 
keywords={software cost estimation;risk management;software houses;project management;professional aspects;software professionals;software companies;traditional-framing project;alternative framing project;software cost estimation;risk assessment;software psychology;Uncertainty;Amplitude shift keying;Project management;Risk management;Psychology;Contingency management;Costs;Humans}}

@ARTICLE{ostrand05_predicting, 
author={T. J. Ostrand and E. J. Weyuker and R. M. Bell}, 
journal={TSE}, 
title={Predicting the location and number of faults in large software systems}, 
year={2005}, 
keywords={program testing;software fault tolerance;binomial distribution;regression analysis;large software systems;binomial regression model;software fault prediction;software testing;Software systems;Predictive models;Fault diagnosis;System testing;History;Fault detection;Software testing;Personnel;Resource management;Sorting;Index Terms- Software faults;fault-prone;prediction;regression model;empirical study;software testing.}, }

@ARTICLE{monden13_assessing, 
author={A. Monden and T. Hayashi and S. Shinoda and K. Shirai and J. Yoshida and M. Barker and K. Matsumoto}, 
journal={IEEE TSE}, 
title={Assessing the Cost Effectiveness of Fault Prediction in Acceptance Testing}, 
year={2013}, 
keywords={program testing;resource allocation;software cost estimation;software fault tolerance;software metrics;cost effectiveness assessment;fault prediction;acceptance testing;quality improvement;cost reduction;software testing;test effort allocation strategies;fault discovery;resource allocation strategy;test resources;telecommunication industry;metrics collection;data cleansing;data modeling;effort-aware measure;Testing;Predictive models;Measurement;Software;Resource management;Companies;Accuracy;Complexity measures;fault prediction;quality assurance;resource allocation;simulation}, 
ISSN={0098-5589}, 
month={Oct},}
@article{krishna17_bell,
  author    = {R. Krishna and
               T. Menzies},
  title     = {Simpler Transfer Learning (Using "Bellwethers")},
  journal   = {CoRR},
  volume    = {abs/1703.06218},
  year      = {2017},
  archivePrefix = {arXiv},
  eprint    = {1703.06218},
  timestamp = {Wed, 07 Jun 2017 14:42:11 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/KrishnaM17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{calero15_green,
 author = {Calero, C. and Piattini, M.},
 title = {Green in Software Engineering},
 year = {2015},
 isbn = {3319085808, 9783319085807},
 publisher = {Springer Publishing Company, Incorporated},
} 

@article{agrawal18_fft,
  title={Can You Explain That, Better? Comprehensible Text Analytics for SE Applications},
  author={Agrawal, Amritanshu and Tu, Huy and Menzies, Tim},
  journal={arXiv preprint arXiv:1804.10657},
  year={2018}
}

@article{phillips17_fft,
  title={FFTrees: A toolbox to create, visualize, and evaluate fast-and-frugal decision trees},
  author={Phillips, N. D. and Neth, H. and Woike, J. K. and Gaissmaier, W.},
  journal={Judgment and Decision Making},
  year={2017}
}

@INPROCEEDINGS{lo17_ifa, 
author={Q. Huang and X. Xia and D. Lo}, 
booktitle={ICSME}, 
title={Supervised vs Unsupervised Models: A Holistic Look at Effort-Aware Just-in-Time Defect Prediction}, 
year={2017}, 
keywords={inspection;just-in-time;learning (artificial intelligence);program debugging;public domain software;software cost estimation;software maintenance;software metrics;inspection budget;unsupervised model;code inspection cost;LT;defective software;historical bug data;effort-aware just-in-time defect prediction;JIT defect prediction;CBS;EALR;harmonic mean;Predictive models;Inspection;Measurement;Computer bugs;Analytical models;Feature extraction;Software;Change Classification;Cost Effectiveness;Evaluation;Bias}, 
doi={10.1109/ICSME.2017.51}, 
ISSN={}, 
month={Sept},}
@article{Yu2018Recall,
  author    = {Zhe Yu and
               Tim Menzies},
  title     = {Total Recall, Language Processing, and Software Engineering},
  journal   = {CoRR},
  year      = {2018},
  archivePrefix = {arXiv},
}

@inproceedings{Cormack2017Navigating,
 author = {Cormack, G. V. and Grossman, M. R.},
 title = {Navigating Imprecision in Relevance Assessments on the Road to Total Recall: Roger and Me},
 booktitle = {40th ACM SIGIR},
 year = {2017},
 keywords = {continuous active learning, high recall, relevance assessment, total recall},
} 

@misc{meijer18,
   title = "Software 2.0, Keynote,  European Software Engineering 
               Conference and Symposium on the Foundations of 
               Software Engineering (ESEC/FSE)",
   author = " E. Meijer",
   year = 2018,
   note = "https://2018.fseconference.org/info/keynotes"
}
   
@misc{neumann13,
  title="GitHub, You Got Issues: An Analysis of Issues on GitHub in 2013",
   year=2013,
   author="Saggi Neumann",
} 

@article{mauczka12,
author = {Andreas Mauczka, Markus Huber, Christian Schanes, Wolfgang Schramm, MarioBernhart, and Thomas Grechenig.},
year = {2012},
title = {Tracing your maintenance work–across-project validation of an automated classification dictionary for commit messages},
booktitle = {International Conference on Fundamental Approaches to Software Engineering},
}

@inproceedings{Cormack2016Engineering,
 author = {Cormack, G. V. and Grossman, M. R.},
 title = {Engineering Quality and Reliability in Technology-Assisted Review},
 booktitle = {SIGIR},
 year = {2016},
 keywords = {continuous active learning, e-discovery, electronic discovery, predictive coding, quality, relevance feedback, reliability, systematic review, technology-assisted review, test collections},
} 

@inproceedings{cormack2016scalability,
 author = {Cormack, G. V. and Grossman, M. R.},
 title = {Scalability of Continuous Active Learning for Reliable High-Recall Text Classification},
 booktitle = {CIKM},
 year = {2016},
 keywords = {cal, continuous active learning, ediscovery, electronic discovery, predictive coding, relevance feedback, tar, technology-assisted review, test collections, text categorization, volume estimation},
} 

@article{mittas2013ranking,
  title={Ranking and clustering software cost estimation models through a multiple comparisons algorithm},
  author={Mittas, N. and Angelis, L.},
  journal={TSE},
  year={2013}
}



@article {kampenes2007,
	title = {A Systematic Review of Effect Size in Software Engineering Experiments},
	journal = {IST},
	year = {2007},
	author = {Vigdis By {Kampenes} and Dyb{\r a}, T. and J. Erskine {Hannay} and Sj{\o}berg, D. I. K.}
	}
	


@book{efron94,
	Address = {London},
	Author = {Efron, Bradley and Tibshirani, Robert J},
	Series = {Mono. Stat. Appl. Probab.},
	Title = {An introduction to the bootstrap},
	Year = {1994}}
	
@inproceedings{arcuri2011practical,
  title={A practical guide for using statistical tests to assess randomized algorithms in software engineering},
  author={Arcuri, A. and Briand, L.},
  booktitle={ICSE},
  year={2011},
  organization={IEEE}
}

@article{cormack2015autonomy,
  title={Autonomy and Reliability of Continuous Active Learning for Technology-Assisted Review},
  author={Cormack, G. V and Grossman, M. R},
  journal= {CoRR},
  year={2015}
}


@inproceedings{Cormack2014Evaluation,
 author = {G. V. Cormack and
               M. R. Grossman},
 title = {Evaluation of Machine-learning Protocols for Technology-assisted Review in Electronic Discovery},
 booktitle = {SIGIR},
 year = {2014},
 keywords = {e-discovery, electronic discovery, predictive coding, technology-assisted review},
} 

@inproceedings{Jureczko:2010,
 author = {Jureczko, M. and Madeyski, L.},
 title = {Towards Identifying Software Project Clusters with Regard to Defect Prediction},
 booktitle = {PROMISE},
 year = {2010},
 keywords = {clustering, defect prediction, design metrics, size metrics},
}  

@inproceedings{wallace2013active,
  title={Active literature discovery for scoping evidence reviews: How many needles are there},
  author={Wallace, B. C and Dahabreh, I. J and Moran, K. H and Brodley, C. E and Trikalinos, T. A},
  booktitle={KDD-DMH},
  year={2013}
}

@article{wallace2010semi,
  title={Semi-automated screening of biomedical citations for systematic reviews},
  author={Wallace, B. C and Trikalinos, T. A and Lau, J. and Brodley, C. and Schmid, C. H},
  journal={BMC bioinformatics},
  year={2010}
}

@article{hatton2008testing,
  title={Testing the value of checklists in code inspections},
  author={Hatton, Les},
  journal={IEEE software},
  volume={25},
  number={4},
  year={2008},
  publisher={IEEE}
}

@inproceedings{maldonado2015detecting,
  title={Detecting and quantifying different types of self-admitted technical debt},
  author={Maldonado, E. da S and Shihab, E.},
  booktitle={2015 IEEE 7th International Workshop on Managing Technical Debt (MTD)},
  pages={9--15},
  year={2015},
  organization={IEEE}
}

@inproceedings{ros2017machine,
  title={A Machine Learning Approach for Semi-Automated Search and Selection in Literature Studies},
  author={Ros, R. and Bjarnason, E. and Runeson, P.},
  booktitle={21st EASE},
  year={2017},
  organization={ACM}
}

@inproceedings{wallace2011should,
  author    = {B. C. Wallace and
               K. Small and
               C. E. Brodley and
               T, A. Trikalinos},
  title     = {Who Should Label What? Instance Allocation in Multiple Expert Active
               Learning},
  booktitle = {SIAM},
  year      = {2011},
}

@inproceedings{wallace2010active,
 author = {Wallace, B. C. and Small, K. and Brodley, C. E. and Trikalinos, T. A.},
 title = {Active Learning for Biomedical Citation Screening},
 booktitle = {16th SIGKDD},
 year = {2010},
 keywords = {active learning, applications, medicine, text classification},
} 

@inproceedings{wallace2012class,
  author    = {B. C. Wallace and
               I. J. Dahabreh},
  title     = {Class Probability Estimates are Unreliable for Imbalanced Data (and
               How to Fix Them)},
  booktitle = {ICDM},
  year      = {2012},
}



@article{Fu2016TuningFS,
  title={Tuning for software analytics: Is it really necessary?},
  author={W. Fu, and T. Menzies and X. Shen},
  journal={IST},
  year={2016},
  volume={76},
  pages={135-146}
}

@misc{alana18,
author="AlANA SEMUELS",
year=2018,
title="The Internet Is Enabling a New Kind of Poorly Paid Hell",
note="https://www.theatlantic.com/business/archive/2018/01/amazon-mechanical-turk/551192/"
}



@article{JMLR:v18:16-261,
  author  = {Lars Kotthoff and Chris Thornton and Holger H. Hoos and Frank Hutter and Kevin Leyton-Brown},
  title   = {Auto-WEKA 2.0: Automatic model selection and hyperparameter optimization in WEKA},
  journal = {Journal of Machine Learning Research},
  year    = {2017},
  volume  = {18},
  number  = {25},
  pages   = {1-5},
  url     = {http://jmlr.org/papers/v18/16-261.html}
}


@article{Fu16Grid,
  author    = {W. Fu and
               V. Nair and
               T. Menzies},
  title     = {Why is Differential Evolution Better than Grid Search for Tuning Defect
               Predictors?},
  journal   = {CoRR},
  volume    = {abs/1609.02613},
  year      = {2016},
  archivePrefix = {arXiv},
  timestamp = {June 2017},
  biburl    = {https://dblp.org/rec/bib/journals/corr/FuNM16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{wang13config,
 author = {Wang, T. and Harman, M. and Jia, Y. and Krinke, J.},
 title = {Searching for Better Configurations: A Rigorous Approach to Clone Evaluation},
 booktitle = {2013 9th Joint Meeting on FSE},
 keywords = {Clone Detection, Genetic Algorithms, SBSE},
} 

@inproceedings{chen2017riot,
  title={RIOT: a Novel Stochastic Method for Rapidly Configuring Cloud-Based Workflows},
  author={Chen, Jianfeng and Menzies, Tim},
  booktitle={IEEE Cloud 2018},
  year={2018}
}



@inproceedings{jia15combinatorial,
 author = {Jia, Y. and Cohen, M. B. and Harman, M. and Petke, J.},
 title = {Learning Combinatorial Interaction Test Generation Strategies Using Hyperheuristic Search},
 booktitle = {ICSE},
 year = {2015},
 isbn = {978-1-4799-1934-5},
 acmid = {2818821},
} 

@inproceedings{corazza10ee,
 author = {Corazza, A. and Di Martino, S. and Ferrucci, F. and Gravino, C. and Sarro, F. },
 title = {How Effective is Tabu Search to Configure Support Vector Regression for Effort Estimation?},
 booktitle = {6th PROMISE},
 year = {2010},
 acmid = {1868335},
 keywords = {Tabu search, development effort estimation, empirical studies, support vector machines, support vector regression},
} 

@inproceedings{minky13ensemble,
 author = {Minku, L. and Yao, X.},
 title = {An Analysis of Multi-objective Evolutionary Algorithms for Training Ensemble Models Based on Different Performance Measures in Software Effort Estimation},
 booktitle = {Proceedings of the 9th PROMISE},
 year = {2013},
 isbn = {978-1-4503-2016-0},
 acmid = {2499396},
 keywords = {ensembles of learning machines, multi-objective evolutionary algorithms, software effort estimation},
} 


@inproceedings{song13ee,
 author = {Song, L. and Minku, L. L. and Yao, X.},
 title = {The Impact of Parameter Tuning on Software Effort Estimation Using Learning Machines},
 booktitle = {9th PROMISE},
 year = {2013},
 keywords = {ensembles, machine learning, online learning, sensitivity to parameters, software effort estimation},
} 


@inproceedings{tantithamthavorn2016automated,
  title={Automated parameter optimization of classification techniques for defect prediction models},
  author={Tantithamthavorn, C. and McIntosh, S. and Hassan, A. E and Matsumoto, K.},
  booktitle={38th ICSE},
  year={2016},
  organization={IEEE}
}

@ARTICLE{nam18tse, 
author={J. {Nam} and W. {Fu} and S. {Kim} and T. {Menzies} and L. {Tan}}, 
journal={IEEE TSE}, 
title={Heterogeneous Defect Prediction}, 
year={2018}, 
keywords={data handling;pattern matching;metric matching;cross-project defect prediction;defect data;homogeneous data;heterogeneous defect prediction;metric sets;Predictive models;Software metrics;Quality assurance;Training;Defect prediction;quality assurance;heterogeneous metrics;transfer learning}}

@ARTICLE{krishnaTSE18, 
author={R. {Krishna} and T. {Menzies}}, 
journal={IEEE TSE}, 
title={Bellwethers: A Baseline Method For Transfer Learning}, 
year={2018}, 
keywords={Estimation;Software;Software engineering;Task analysis;Benchmark testing;Complexity theory;Analytical models;Transfer learning;Defect Prediction;Bad smells;Issue Close Time;Effort Estimation;Prediction}, 
doi={10.1109/TSE.2018.2821670}, 
ISSN={0098-5589}, 
month={},}

@inproceedings{nam15hetero,
 author = {Nam, J. and Kim, S.},
 title = {Heterogeneous Defect Prediction},
 booktitle = {10th FSE},
 year = {2015},
 keywords = {Defect prediction, heterogeneous metrics, quality assurance},
}

@inproceedings{tan15online,
 author = {Tan, M. and Tan, L. and Dara, S.},
 title = {Online Defect Prediction for Imbalanced Data},
 booktitle = {ICSE},
  year = {2015},
} 

@article{Bergstra:2012,
 author = {Bergstra, J. and Bengio, Y.},
 title = {Random Search for Hyper-parameter Optimization},
 journal = {J. Mach. Learn. Res.},
 issue_date = {January 2012},
 volume = {13},
 number = {1},
 month = feb,
 year = {2012},
 issn = {1532-4435},
 pages = {281--305},
 numpages = {25},
 publisher = {JMLR.org},
 keywords = {deep learning, global optimization, model selection, neural networks, response surface modeling},
} 



@inproceedings{bergstra11TPE,
 author = {Bergstra, J. and Bardenet, R. and Bengio, Y. and K{\'e}gl, B.},
 title = {Algorithms for Hyper-parameter Optimization},
 booktitle = {24th International Conference on NIPS},
 year = {2011},
 numpages = {9}
} 

@inproceedings{hutter11smac,
 author = {Hutter, F. and Hoos, H. H. and Leyton-Brown, K.},
 title = {Sequential Model-based Optimization for General Algorithm Configuration},
 booktitle = {5th LION},
 year = {2011}
} 

@inproceedings{snoek12gp,
 author = {Snoek, J. and Larochelle, H. and Adams, R.},
 title = {Practical Bayesian Optimization of Machine Learning Algorithms},
 booktitle = {NIPS - Volume 2},
 year = {2012}
} 

@incollection{feurer15autosk,
title = {Efficient and Robust Automated Machine Learning},
author = {Feurer, M. and Klein, A. and Eggensperger, K. and Springenberg, J. and Blum, M. and Hutter, F.},
booktitle = {NIPS 28},
year = {2015},
}

@ARTICLE{menzies07defect, 
author={T. Menzies and J. Greenwald and A. Frank}, 
journal={IEEE TSE}, 
title={Data Mining Static Code Attributes to Learn Defect Predictors}, 
year={2007}, 
keywords={data mining;learning (artificial intelligence);program diagnostics;program testing;software quality;McCabes versus Halstead;data mining;defect predictor learning;lines of code counts;resource-bound exploration;static code attributes;Art;Artificial intelligence;Bayesian methods;Data mining;Financial management;Learning systems;Software quality;Software systems;Software testing;System testing;Data mining detect prediction;Halstead;McCabe;artifical intelligence;empirical;naive Bayes.}, 
month={Jan},}

@inproceedings{moser08defect,
 author = {Moser, R. and Pedrycz, W. and Succi, G.},
 title = {A Comparative Analysis of the Efficiency of Change Metrics and Static Code Attributes for Defect Prediction},
 booktitle = {2008 ICSE},
 keywords = {cost-sensitive classification, defect prediction, software metrics},
} 

@article{elish08defect,
 author = {Elish, K. O. and Elish, M. O.},
 title = {Predicting Defect-prone Software Modules Using Support Vector Machines},
 journal = {J. Syst. Softw.},
 issue_date = {May, 2008},
 volume = {81},
 number = {5},
 month = may,
 year = {2008},
 issn = {0164-1212},
 pages = {649--660},
 numpages = {12},
 acmid = {1353072},
 publisher = {Elsevier Science Inc.},
 address = {New York, NY, USA},
 keywords = {Defect-prone modules, Predictive models, Software metrics, Support vector machines},
}

@inproceedings{tanti16defect,
 author = {Tantithamthavorn, C. and McIntosh, S. and Hassan, A. E. and Matsumoto, K.},
 title = {Automated Parameter Optimization of Classification Techniques for Defect Prediction Models},
 booktitle = {38th ICSE},
 year = {2016},
 keywords = {classification techniques, experimental design, parameter optimization, software defect prediction},
} 

@misc{sk18,
 title="SKlean, manual",
 url="https://automl.github.io/auto-sklearn/stable/manual.html",
 year=2018
 }
 
@article{lessmann08benchmarking,
 author = {Lessmann, S. and Baesens, B. and Mues, C. and Pietsch, S.},
 title = {Benchmarking Classification Models for Software Defect Prediction: A Proposed Framework and Novel Findings},
 journal = {IEEE TSE},
 year = {2008},
 keywords = {Complexity measures, Complexity measures, Data mining, Formal methods, Statistical methods, Data mining, Formal methods, Statistical methods},
} 

@inproceedings{sayyad13sbse,
 author = {Sayyad, A. S. and Menzies, T. and Ammar, H.},
 title = {On the Value of User Preferences in Search-based Software Engineering: A Case Study in Software Product Lines},
 booktitle = {35th ICSE},
 year = {2013},
 isbn = {978-1-4673-3076-3},
 acmid = {2486853},
} 

@article{scikit-learn,
 title={Scikit-learn: Machine Learning in {P}ython},
 author={Pedregosa, F. and Varoquaux, G.},
 journal={Journal of Machine Learning Research},
 volume={12},
 pages={2825--2830},
 year={2011}
}

@article{storn1997de,
 author = {Storn, R. and Price, K.},
 title = {Differential Evolution; A Simple and Efficient Heuristic for Global Optimization over Continuous Spaces},
 journal = {J. of Global Optimization},
 issue_date = {December 1997},
 year = {1997},
 acmid = {596146},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Stochastic optimization, evolution strategy, genetic algorithm, global optimization, nonlinear optimization},
} 

@article{arcuri13parameterto,
  title={Parameter tuning or default values? An empirical investigation in search-based software engineering},
  author={Andrea Arcuri and Gordon Fraser},
  journal={Empirical Software Engineering},
  year={2013},
}
@INPROCEEDINGS{lowry98, 
author={M. Lowry and M. Boyd and D. Kulkami}, 
booktitle={13th IEEE ASE}, 
title={Towards a theory for integration of mathematical verification and empirical testing}, 
year={1998}, 
keywords={program verification;software reliability;program testing;programming theory;mathematical verification;empirical testing;software project management;software system verification;software system validation;coverage analysis;software fault detection;cost savings;tradeoffs;software reliability;formalized fault models;fault detection tool utility;black-box testing;white-box testing;structural testing;formal methods;utility model;case study;NASA software system;Fault detection;Software systems;Software testing;System testing;Project management;Software standards;Costs;Software reliability;Mathematical model;NASA}, }


@inproceedings{Tu18Tuning,
  author    = {Huy Tu and
               Vivek Nair},
  title     = {While Tuning is Good, No Tuner is Best},
  booktitle = {FSE SWAN},
  year      = {2018},
}

@article{KRISHNA201753,
title = "Less is more: Minimizing code reorganization using XTREE",
journal = "Information and Software Technology",
volume = "88",
pages = "53 - 66",
year = "2017",
issn = "0950-5849",
doi = "https://doi.org/10.1016/j.infsof.2017.03.012",
url = "http://www.sciencedirect.com/science/article/pii/S0950584916301641",
author = "Rahul Krishna and Tim Menzies and Lucas Layman",
keywords = "Bad smells, Performance prediction, Decision trees",
abstract = "Context: Developers use bad code smells to guide code reorganization. Yet developers, textbooks, tools, and researchers disagree on which bad smells are important. How can we offer reliable advice to developers about which bad smells to fix? Objective: To evaluate the likelihood that a code reorganization to address bad code smells will yield improvement in the defect-proneness of the code. Method: We introduce XTREE, a framework that analyzes a historical log of defects seen previously in the code and generates a set of useful code changes. Any bad smell that requires changes outside of that set can be deprioritized (since there is no historical evidence that the bad smell causes any problems). Evaluation: We evaluate XTREE’s recommendations for bad smell improvement against recommendations from previous work (Shatnawi, Alves, and Borges) using multiple data sets of code metrics and defect counts. Results: Code modules that are changed in response to XTREE’s recommendations contain significantly fewer defects than recommendations from previous studies. Further, XTREE endorses changes to very few code metrics, so XTREE requires programmers to do less work. Further, XTREE’s recommendations are more responsive to the particulars of different data sets. Finally XTREE’s recommendations may be generalized to identify the most crucial factors affecting multiple datasets (see the last figure in paper). Conclusion: Before undertaking a code reorganization based on a bad smell report, use a framework like XTREE to check and ignore any such operations that are useless; i.e. ones which lack evidence in the historical record that it is useful to make that change. Note that this use case applies to both manual code reorganizations proposed by developers as well as those conducted by automatic methods."
}

@article{huang2018identifying,
 title={Identifying self-admitted technical debt in open source projects using text mining},
 author={Huang, Qiao and Shihab, Emad and Xia, Xin and Lo, David and Li, Shanping},
 journal={Empirical Software Engineering},
 volume={23},
 number={1},
 pages={418--451},
 year={2018},
 publisher={Springer}
}

@inproceedings{menzies02_truism,
 author = {Menzies, T. and Raffo, D. and Setamanit, S. and Hu, Y. and Tootoonian, S.},
 title = {Model-Based Tests of Truisms},
 booktitle = {17th IEEE International Conference on ASE},
 series = {ASE '02},
 year = {2002},
} 

@inproceedings{lewis13_bug,
 author = {Lewis, C. and Lin, Z. and Sadowski, C. and Zhu, X. and Ou, R. and Whitehead Jr., E. J.},
 title = {Does Bug Prediction Support Human Developers? Findings from a Google Case Study},
 booktitle = {Proceedings of the 2013 ICSE},
 year = {2013},
 pages = {372--381},
 numpages = {10},
 acmid = {2486838}
} 

@article{krishna16c,
  author    = {Rahul Krishna and
               Tim Menzies and
               Lucas Layman},
  title     = {Recommendations for Intelligent Code Reorganization},
  journal   = {CoRR},
  volume    = {abs/1609.03614},
  year      = {2016},
  url       = {http://arxiv.org/abs/1609.03614},
  archivePrefix = {arXiv},
  eprint    = {1609.03614},
  timestamp = {Mon, 13 Aug 2018 16:48:50 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/KrishnaML16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{di18_fft,
  title={Applications of psychological science for actionable analytics},
  author={Chen, D. and Fu, W. and Krishna, R. and Menzies, T.},
  booktitle={FSE},
  year={2018}
}


@Article{Shin2013,
author="Shin, Y.
and Williams, L.",
title="Can traditional fault prediction models be used for vulnerability prediction?",
journal="EMSE",
year="2013",
abstract="Finding security vulnerabilities requires a different mindset than finding general faults in software---thinking like an attacker. Therefore, security engineers looking to prioritize security inspection and testing efforts may be better served by a prediction model that indicates security vulnerabilities rather than faults. At the same time, faults and vulnerabilities have commonalities that may allow development teams to use traditional fault prediction models and metrics for vulnerability prediction. The goal of our study is to determine whether fault prediction models can be used for vulnerability prediction or if specialized vulnerability prediction models should be developed when both models are built with traditional metrics of complexity, code churn, and fault history. We have performed an empirical study on a widely-used, large open source project, the Mozilla Firefox web browser, where 21{\%} of the source code files have faults and only 3{\%} of the files have vulnerabilities. Both the fault prediction model and the vulnerability prediction model provide similar ability in vulnerability prediction across a wide range of classification thresholds. For example, the fault prediction model provided recall of 83{\%} and precision of 11{\%} at classification threshold 0.6 and the vulnerability prediction model provided recall of 83{\%} and precision of 12{\%} at classification threshold 0.5. Our results suggest that fault prediction models based upon traditional metrics can substitute for specialized vulnerability prediction models. However, both fault prediction and vulnerability prediction models require significant improvement to reduce false positives while providing high recall.",
issn="1573-7616",
doi="10.1007/s10664-011-9190-8",
url="https://doi.org/10.1007/s10664-011-9190-8"
}

@article{Yu18_vulnerability,
  author    = {Z. Yu and
               C. Theisen and
               H. Sohn and
               L. Williams and
               T. Menzies},
  title     = {Cost-aware Vulnerability Prediction: the {HARMLESS} Approach},
  journal   = {CoRR},
  volume    = {abs/1803.06545},
  year      = {2018},
  url       = {http://arxiv.org/abs/1803.06545},
  archivePrefix = {arXiv},
  eprint    = {1803.06545},
  timestamp = {Mon, 13 Aug 2018 16:46:12 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1803-06545},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{yu18v,
  author    = {Z. Yu and
               C. Theisen and
               H. Sohn and
               L. Williams and
               T. Menzies},
  title     = {Cost-aware Vulnerability Prediction: the {HARMLESS} Approach},
  journal   = {CoRR},
  year      = {2018},
  url       = {http://arxiv.org/abs/1803.06545},
  archivePrefix = {arXiv},
  timestamp = {Mon, 13 Aug 2018 16:46:12 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1803-06545},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{fu18_fft,
  author    = {W. Fu and
               T. Menzies and
               D. Chen and
               A. Agrawal},
  title     = {Building Better Quality Predictors Using "{\(\epsilon\)}-Dominance"},
  journal   = {CoRR},
  volume    = {abs/1803.04608},
  year      = {2018},
  archivePrefix = {arXiv},
  eprint    = {1803.04608},
  timestamp = {Tue, 10 Apr 2018 20:50:05 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1803-04608},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@ARTICLE{jorgensen04_realism, 
author={M. Jorgensen}, 
journal={IEEE TSE}, 
title={Realism in assessment of effort estimation uncertainty: it matters how you ask}, 
year={2004}, 
volume={30}, 
number={4}, 
pages={209-217}, 
keywords={software cost estimation;risk management;software houses;project management;professional aspects;software professionals;software companies;traditional-framing project;alternative framing project;software cost estimation;risk assessment;software psychology;Uncertainty;Amplitude shift keying;Project management;Risk management;Psychology;Contingency management;Costs;Humans}, 
doi={10.1109/TSE.2004.1274041}, 
ISSN={0098-5589}, 
month={April},}


@ARTICLE{monden13_assessing, 
author={A. Monden and T. Hayashi and S. Shinoda and K. Shirai and J. Yoshida and M. Barker and K. Matsumoto}, 
journal={IEEE TSE}, 
title={Assessing the Cost Effectiveness of Fault Prediction in Acceptance Testing}, 
year={2013}, 
volume={39}, 
number={10}, 
pages={1345-1357}, 
keywords={program testing;resource allocation;software cost estimation;software fault tolerance;software metrics;cost effectiveness assessment;fault prediction;acceptance testing;quality improvement;cost reduction;software testing;test effort allocation strategies;fault discovery;resource allocation strategy;test resources;telecommunication industry;metrics collection;data cleansing;data modeling;effort-aware measure;Testing;Predictive models;Measurement;Software;Resource management;Companies;Accuracy;Complexity measures;fault prediction;quality assurance;resource allocation;simulation}, 
ISSN={0098-5589}, 
month={Oct},}

@ARTICLE{kamei13_assurance, 
author={Y. Kamei and E. Shihab and B. Adams and A. E. Hassan and A. Mockus and A. Sinha}, 
journal={IEEE TSE}, 
title={A large-scale empirical study of just-in-time quality assurance}, 
year={2013},
keywords={program testing;software maintenance;software metrics;software quality;just-in-time quality assurance;defect prediction models;defect-prone file identification;defect-prone package identification;software systems;risk model;open source projects;commercial projects;risky changes;cost reduction;defect-prone software change identification;software metrics;software repository mining;software quality assurance activities;source code inspection;unit testing;Measurement;Quality assurance;Predictive models;Software;Entropy;Object oriented modeling;Accuracy;Maintenance;software metrics;mining software repositories;defect prediction;just-in-time prediction}, 
ISSN={0098-5589}, 
}

@article{krishna17_bell,
  author    = {R. Krishna and
               T. Menzies},
  title     = {Simpler Transfer Learning (Using "Bellwethers")},
  journal   = {CoRR},
  volume    = {abs/1703.06218},
  year      = {2017},
  archivePrefix = {arXiv},
  eprint    = {1703.06218},
  timestamp = {Wed, 07 Jun 2017 14:42:11 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/KrishnaM17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{calero15_green,
 author = {Calero, C. and Piattini, M.},
 title = {Green in Software Engineering},
 year = {2015},
 isbn = {3319085808, 9783319085807},
 publisher = {Springer Publishing Company, Incorporated},
} 

@article{agrawal2019dodge,
  title={How to "DODGE" Complex Software Analytics?},
  author={Agrawal, A. and Fu, W. and Chen, D. and Shen, X. and Menzies, T.},
  journal={arXiv preprint arXiv:1902.01838},
  year={2019}
}
@article{phillips17_fft,
  title={FFTrees: A toolbox to create, visualize, and evaluate fast-and-frugal decision trees},
  author={Phillips, N. D. and Neth, H. and Woike, J. K. and Gaissmaier, W.},
  journal={Judgment and Decision Making},
  year={2017}
}

@book{feldman07_text,
author = {Feldman, R. and Ronen, and Sanger, and James,},
year = {2007},
title = {The text mining handbook: Advanced approaches in analyzing unstructured data}
}

@article{agrawal2018wrong,
  title={What is wrong with topic modeling? And how to fix it using search-based software engineering},
  author={Agrawal, A. and Fu, W. and Menzies, T.},
  journal={IST},
  year={2018},
  publisher={Elsevier}
}
@article{zhou2016combining,
  title={Combining text mining and data mining for bug report classification},
  author={Zhou, Y. and Tong, Y. and Gu, R. and Gall, H.},
  journal={Journal of Software: Evolution and Process},
  year={2016},
  publisher={Wiley Online Library}
}

@inproceedings{Tsay:2014,
 author = {Tsay, J. and Dabbish, L. and Herbsleb, J.},
 title = {Influence of Social and Technical Factors for Evaluating Contribution in GitHub},
 booktitle = {36th ICSE},
 year = {2014},
 url = {http://doi.acm.org/10.1145/2568225.2568315},
 keywords = {GitHub, contribution, open source, signaling theory, social computing, social media, transparency},
} 


@inproceedings{Rahman:2013,
 author = {Rahman, F. and Devanbu, P.},
 title = {How, and Why, Process Metrics Are Better},
 booktitle = {ICSE},
 year = {2013},
 url = {http://dl.acm.org/citation.cfm?id=2486788.2486846},
} 


@inproceedings{ghotra2015revisiting,
  title={Revisiting the impact of classification techniques on the performance of defect prediction models},
  author={Ghotra, Baljinder and McIntosh, Shane and Hassan, Ahmed E},
  booktitle={Proceedings of the 37th International Conference on Software Engineering-Volume 1},
  pages={789--800},
  year={2015},
  organization={IEEE Press}
}
@article{pedregosa2011scikit,
  title={Scikit-learn: Machine learning in Python},
  author={Pedregosa, Fabian and Varoquaux, Ga{\"e}l and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and others},
  journal={Journal of Machine Learning Research},
  volume={12},
  number={Oct},
  pages={2825--2830},
  year={2011}
}
@article{haasdonk2005feature,
  title={Feature space interpretation of SVMs with indefinite kernels},
  author={Haasdonk, Bernard},
  journal={IEEE Transactions on Pattern Analysis and Machine Intelligence},
  volume={27},
  number={4},
  pages={482--492},
  year={2005},
  publisher={IEEE}
}
@article{nasrabadi2007pattern,
  title={Pattern recognition and machine learning},
  author={Nasrabadi, Nasser M},
  journal={Journal of electronic imaging},
  volume={16},
  number={4},
  pages={049901},
  year={2007},
  publisher={International Society for Optics and Photonics}
}
@article{apte1994automated,
  title={Automated learning of decision rules for text categorization},
  author={Apt{\'e}, Chidanand and Damerau, Fred and Weiss, Sholom M},
  journal={ACM Transactions on Information Systems (TOIS)},
  volume={12},
  number={3},
  pages={233--251},
  year={1994},
  publisher={ACM}
}
@inproceedings{kohavi1995study,
  title={A study of cross-validation and bootstrap for accuracy estimation and model selection},
  author={Kohavi, Ron and others},
  booktitle={Ijcai},
  volume={14},
  number={2},
  pages={1137--1145},
  year={1995},
  organization={Stanford, CA}
}
@incollection{refaeilzadeh2009cross,
  title={Cross-validation},
  author={Refaeilzadeh, Payam and Tang, Lei and Liu, Huan},
  booktitle={Encyclopedia of database systems},
  pages={532--538},
  year={2009},
  publisher={Springer}
}

@inproceedings{majumder2018,
 author = {Suvodeep Majumder and
               Nikhila Balaji and
               Katie Brey and
               Wei Fu and
               Tim Menzies},
 title = {500+ Times Faster Than Deep Learning (A Case Study Exploring Faster Methods for Text Mining StackOverflow)},
   booktitle={Mining Software Repositories (MSR), 2018 IEEE/ACM 15th International Conference on},
  year={2018},
  organization={ACM},
} 

@article{cortes1995support,
  title={Support vector machine},
  author={Cortes, Corinna and Vapnik, Vladimir},
  journal={Machine learning},
  volume={20},
  number={3},
  pages={273--297},
  year={1995}
}
@article{phillips2017fftrees,
  title={FFTrees: A toolbox to create, visualize, and evaluate fast-and-frugal decision trees},
  author={Phillips, Nathaniel D and Neth, Hansj{\"o}rg and Woike, Jan K and Gaissmaier, Wolfgang},
  journal={Judgment and Decision Making},
  volume={12},
  number={4},
  pages={344},
  year={2017},
  publisher={Society for Judgment \& Decision Making}
}
@article{chen2017replicating,
  title={Replicating and Scaling up Qualitative Analysis using Crowdsourcing: A Github-based Case Study},
  author={Chen, Di and Stolee, Kathryn T and Menzies, Tim},
  journal={arXiv preprint arXiv:1702.08571},
  year={2017}
}
@inproceedings{deng2014scalable,
  title={Scalable multi-label annotation},
  author={Deng, Jia and Russakovsky, Olga and Krause, Jonathan and Bernstein, Michael S and Berg, Alex and Fei-Fei, Li},
  booktitle={Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
  pages={3099--3102},
  year={2014},
  organization={ACM}
}
@article{DBLP:journals/corr/YuM17,
  author    = {Zhe Yu and
               Tim Menzies},
  title     = {Testing Reading Tactics for Automated Reading Assistance: Is it Useful
               to Apply Old Knowledge?},
  journal   = {CoRR},
  volume    = {abs/1705.05420},
  year      = {2017},
  url       = {http://arxiv.org/abs/1705.05420},
  archivePrefix = {arXiv},
  eprint    = {1705.05420},
  timestamp = {Wed, 07 Jun 2017 14:42:49 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/YuM17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{scott1999feature,
  title={Feature engineering for text classification},
  author={Scott, Sam and Matwin, Stan},
  booktitle={ICML},
  volume={99},
  pages={379--388},
  year={1999}
}
@article{menzies2008improving,
  title={Improving IV\&V Techniques Through the Analysis of Project Anomalies: Text Mining PITS issue reports-final report},
  author={Menzies, Tim},
  journal={Citeseer},
  year={2008}
}
@misc{Porter1980,
abstract = {The Porter stemming algorithm (or ‘Porter stemmer') is a process for removing the commoner morphological and inflexional endings from words in English. Its main use is as part of a term normalisation process that is usually done when setting up Information Retrieval systems.},
author = {Porter, M},
booktitle = {Program},
keywords = {ir,porter},
number = {3},
pages = {130--137},
title = {{The Porter Stemming Algorithm}},
url = {http://tartarus.org/martin/PorterStemmer/},
volume = {14},
year = {1980}
}
@inproceedings{bird2006nltk,
  title={NLTK: the natural language toolkit},
  author={Bird, Steven},
  booktitle={Proceedings of the COLING/ACL on Interactive presentation sessions},
  pages={69--72},
  year={2006},
  organization={Association for Computational Linguistics}
}
@inproceedings{menzies2008automated,
  title={Automated severity assessment of software defect reports},
  author={Menzies, Tim and Marcus, Andrian},
  booktitle={Software Maintenance, 2008. ICSM 2008. IEEE International Conference on},
  pages={346--355},
  year={2008},
  organization={IEEE}
}
@inproceedings{lamkanfi2011comparing,
  title={Comparing mining algorithms for predicting the severity of a reported bug},
  author={Lamkanfi, Ahmed and Demeyer, Serge and Soetens, Quinten David and Verdonck, Tim},
  booktitle={Software Maintenance and Reengineering (CSMR), 2011 15th European Conference on},
  pages={249--258},
  year={2011},
  organization={IEEE}
}
@inproceedings{chaturvedi2012determining,
  title={Determining bug severity using machine learning techniques},
  author={Chaturvedi, KK and Singh, VB},
  booktitle={Software Engineering (CONSEG), 2012 CSI Sixth International Conference on},
  pages={1--6},
  year={2012},
  organization={IEEE}
}
@article{xia2017improving,
  title={Improving automated bug triaging with specialized topic model},
  author={Xia, Xin and Lo, David and Ding, Ying and Al-Kofahi, Jafar M and Nguyen, Tien N and Wang, Xinyu},
  journal={IEEE Transactions on Software Engineering},
  volume={43},
  number={3},
  pages={272--297},
  year={2017},
  publisher={IEEE}
}
@inproceedings{thung2012automatic,
  title={Automatic defect categorization},
  author={Thung, Ferdian and Lo, David and Jiang, Lingxiao},
  booktitle={Reverse Engineering (WCRE), 2012 19th Working Conference on},
  pages={205--214},
  year={2012},
  organization={IEEE}
}
@article{tian2016unreliability,
  title={On the unreliability of bug severity data},
  author={Tian, Yuan and Ali, Nasir and Lo, David and Hassan, Ahmed E},
  journal={Empirical Software Engineering},
  volume={21},
  number={6},
  pages={2298--2323},
  year={2016},
  publisher={Springer}
}
@inproceedings{xia2014automated,
  title={Automated configuration bug report prediction using text mining},
  author={Xia, Xin and Lo, David and Qiu, Weiwei and Wang, Xingen and Zhou, Bo},
  booktitle={Computer Software and Applications Conference (COMPSAC), 2014 IEEE 38th Annual},
  pages={107--116},
  year={2014},
  organization={IEEE}
}
@inproceedings{kochhar2014automatic,
  title={Automatic fine-grained issue report reclassification},
  author={Kochhar, Pavneet Singh and Thung, Ferdian and Lo, David},
  booktitle={Engineering of Complex Computer Systems (ICECCS), 2014 19th International Conference on},
  pages={126--135},
  year={2014},
  organization={IEEE}
}
@article{xia2015automatic,
  title={Automatic, high accuracy prediction of reopened bugs},
  author={Xia, Xin and Lo, David and Shihab, Emad and Wang, Xinyu and Zhou, Bo},
  journal={Automated Software Engineering},
  volume={22},
  number={1},
  pages={75--109},
  year={2015},
  publisher={Springer}
}
@inproceedings{sharma2012predicting,
  title={Predicting the priority of a reported bug using machine learning techniques and cross project validation},
  author={Sharma, Meera and Bedi, Punam and Chaturvedi, KK and Singh, VB},
  booktitle={Intelligent Systems Design and Applications (ISDA), 2012 12th International Conference on},
  pages={539--545},
  year={2012},
  organization={IEEE}
}
@inproceedings{tian2013drone,
  title={Drone: Predicting priority of reported bugs by multi-factor analysis},
  author={Tian, Yuan and Lo, David and Sun, Chengnian},
  booktitle={Software Maintenance (ICSM), 2013 29th IEEE International Conference on},
  pages={200--209},
  year={2013},
  organization={IEEE}
}
@article{fu2016tuning,
  title={Tuning for software analytics: Is it really necessary?},
  author={Fu, W. and Menzies, T. and Shen, X.},
  journal={IST},
  year={2016},
  publisher={Elsevier}
}
@inproceedings{agrawal2018better,
  title={Is better data better than better data miners?: on the benefits of tuning smote for defect prediction},
  author={Agrawal, A. and Menzies, T.},
  booktitle={IST},
  year={2018},
  organization={ACM}
}
@article{blei2003latent,
  title={Latent dirichlet allocation},
  author={Blei, David M and Ng, Andrew Y and Jordan, Michael I},
  journal={Journal of machine Learning research},
  volume={3},
  number={Jan},
  pages={993--1022},
  year={2003}
}

@article{bennin2018mahakil,
  title={Mahakil: Diversity based oversampling approach to alleviate the class imbalance issue in software defect prediction},
  author={Bennin, K. E. and Keung, J. and Phannachitta, p. and Monden, A. and Mensah, S.},
  journal={TSE},
  year={2018},
  publisher={IEEE}
}

@article{fu2018building,
  title={Building Better Quality Predictors Using ``$\epsilon$-Dominance"},
  author={Fu, W. and Menzies, T. and Chen, D. and Agrawal, A.},
  journal={arXiv preprint arXiv:1803.04608},
  year={2018}
}

@article{martignon2003naive,
  title={Naive and yet enlightened: From natural frequencies to fast and frugal decision trees},
  author={Martignon, L. and Vitouch, O. and Takezawa, M. and Forster, M. R},
  journal={Thinking: Psychological perspectives on reasoning, judgment and decision making},
  year={2003},
  publisher={John Wiley \& Sons, Ltd}
}

@Article{Breiman2001,
author="Breiman, L.",
title="Random Forests",
journal="Machine Learning",
year="2001",
abstract="Random forests are a combination of tree predictors such that each tree depends on the values of a random vector sampled independently and with the same distribution for all trees in the forest. The generalization error for forests converges a.s. to a limit as the number of trees in the forest becomes large. The generalization error of a forest of tree classifiers depends on the strength of the individual trees in the forest and the correlation between them. Using a random selection of features to split each node yields error rates that compare favorably to Adaboost (Y. Freund {\&} R. Schapire, Machine Learning: Proceedings of the Thirteenth International conference, ***, 148--156), but are more robust with respect to noise. Internal estimates monitor error, strength, and correlation and these are used to show the response to increasing the number of features used in the splitting. Internal estimates are also used to measure variable importance. These ideas are also applicable to regression.",
issn="1573-0565",
doi="10.1023/A:1010933404324",
url="https://doi.org/10.1023/A:1010933404324"
}


@article{Majumder19,
  author    = {Suvodeep Majumder and
               Joymallya Chakraborty and
               Amritanshu Agrawal and
               Tim Menzies},
  title     = {Why Software Projects need Heroes (Lessons Learned from 1100+ Projects)},
  journal   = {CoRR},
  year      = {2019},
}

@incollection{gigerenzer1999good,
  title={How good are fast and frugal heuristics?},
  author={Gigerenzer, G. and Czerlinski, J. and Martignon, L.},
  booktitle={Decision science and technology},
  year={1999},
  publisher={Springer}
}
@incollection{czerlinski1999good,
  title={How good are simple heuristics?},
  author={Czerlinski, Jean and Gigerenzer, Gerd and Goldstein, Daniel G},
  booktitle={Simple heuristics that make us smart},
  pages={97--118},
  year={1999},
  publisher={Oxford University Press}
}
@inproceedings{brighton2006robust,
  title={Robust Inference with Simple Cognitive Models.},
  author={Brighton, Henry},
  booktitle={AAAI spring symposium: Between a rock and a hard place: Cognitive science principles meet AI-hard problems},
  pages={17--22},
  year={2006}
}
@article{friedman1997bias,
  title={On bias, variance, 0/1—loss, and the curse-of-dimensionality},
  author={Friedman, Jerome H},
  journal={Data mining and knowledge discovery},
  volume={1},
  number={1},
  pages={55--77},
  year={1997},
  publisher={Springer}
}
@techreport{fodor2002survey,
  title={A survey of dimension reduction techniques},
  author={Fodor, Imola K},
  year={2002},
  institution={Lawrence Livermore National Lab., CA (US)}
}
@article{van2009dimensionality,
  title={Dimensionality reduction: a comparative},
  author={Van Der Maaten, Laurens and Postma, Eric and Van den Herik, Jaap},
  journal={J Mach Learn Res},
  volume={10},
  pages={66--71},
  year={2009}
}
@article{menzies2003data,
  title={Data mining for very busy people},
  author={Menzies, Tim and Hu, Ying},
  journal={Computer},
  volume={36},
  number={11},
  pages={22--29},
  year={2003},
  publisher={IEEE}
}
@inproceedings{vellido2012making,
  title={Making machine learning models interpretable.},
  author={Vellido, Alfredo and Mart{\'\i}n-Guerrero, Jos{\'e} David and Lisboa, Paulo JG},
  booktitle={ESANN},
  volume={12},
  pages={163--172},
  year={2012},
  organization={Citeseer}
}
@article{tian2015automated,
  title={Automated prediction of bug report priority using multi-factor analysis},
  author={Tian, Yuan and Lo, David and Xia, Xin and Sun, Chengnian},
  journal={Empirical Software Engineering},
  volume={20},
  number={5},
  pages={1354--1383},
  year={2015},
  publisher={Springer}
}
@inproceedings{pingclasai2013classifying,
  title={Classifying bug reports to bugs and other requests using topic modeling},
  author={Pingclasai, Natthakul and Hata, Hideaki and Matsumoto, Ken-ichi},
  booktitle={Software Engineering Conference (APSEC), 2013 20th Asia-Pacific},
  volume={2},
  pages={13--18},
  year={2013},
  organization={IEEE}
}
@inproceedings{layman2016topic,
  title={Topic modeling of NASA space system problem reports: research in practice},
  author={Layman, Lucas and Nikora, Allen P and Meek, Joshua and Menzies, Tim},
  booktitle={Mining Software Repositories (MSR), 2016 IEEE/ACM 13th Working Conference on},
  pages={303--314},
  year={2016},
  organization={IEEE}
}
@inproceedings{chen2012explaining,
  title={Explaining software defects using topic models},
  author={Chen, T. H. and Thomas, S. W and Nagappan, M. and Hassan, A. E},
  booktitle={9th MSR},
  year={2012}
}
@inproceedings{wang2013searching,
  title={Searching for better configurations: a rigorous approach to clone evaluation},
  author={Wang, Tiantian and Harman, Mark and Jia, Yue and Krinke, Jens},
  booktitle={Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
  pages={455--465},
  year={2013},
  organization={ACM}
}
@inproceedings{yang2015deep,
  title={Deep learning for just-in-time defect prediction},
  author={Yang, X. and Lo, D. and Xia, X. and Zhang, Y. and Sun, J.},
  booktitle={Software Quality, Reliability and Security (QRS)},
  year={2015},
  organization={IEEE}
}
@inproceedings{white2015toward,
  title={Toward deep learning software repositories},
  author={White, Martin and Vendome, Christopher and Linares-V{\'a}squez, Mario and Poshyvanyk, Denys},
  booktitle={Mining Software Repositories (MSR), 2015 IEEE/ACM 12th Working Conference on},
  pages={334--345},
  year={2015},
  organization={IEEE}
}
@article{menzies2009explanation,
  title={Explanation vs Performance in Data Mining: A Case Study with Predicting Runaway Projects.},
  author={Menzies, Tim and Mizuno, Osamu and Takagi, Yasunari and Kikuno, Tohru},
  journal={JSEA},
  volume={2},
  number={4},
  pages={221--236},
  year={2009}
}
@article{zhang2008text,
  title={Text classification based on multi-word with support vector machine},
  author={Zhang, Wen and Yoshida, Taketoshi and Tang, Xijin},
  journal={Knowledge-Based Systems},
  volume={21},
  number={8},
  pages={879--886},
  year={2008},
  publisher={Elsevier}
}
@article{martignon2008categorization,
  title={Categorization with limited resources: A family of simple heuristics},
  author={Martignon, L. and Katsikopoulos, K. V and Woike, J. K},
  journal={Journal of Mathematical Psychology},
  year={2008},
  publisher={Elsevier}
}
@misc{svmmodel,
    author = "{C. Yeh}",
    title = {{Support Vector Machines for classification}},
    howpublished = {\url{http://efavdb.com/svm-classification/}},
    year=2015,
}
@online{DL2017alchemy,
  author = {Synced, AI Technology \& Industry Review},
  title = {LeCun vs Rahimi: Has Machine Learning Become Alchemy?},
  year = 2017,
  url = {https://medium.com/@Synced/lecun-vs-rahimi-has-machine-learning-become-alchemy-21cb1557920d},
  urldate = {2017-12-12}
}
@article{martens2011performance,
  title={Performance of classification models from a user perspective},
  author={Martens, David and Vanthienen, Jan and Verbeke, Wouter and Baesens, Bart},
  journal={Decision Support Systems},
  volume={51},
  number={4},
  pages={782--793},
  year={2011},
  publisher={Elsevier}
}
@incollection{maimon2005decomposition,
  title={Decomposition methodology for knowledge discovery and data mining},
  author={Maimon, Oded and Rokach, Lior},
  booktitle={Data mining and knowledge discovery handbook},
  pages={981--1003},
  year={2005},
  publisher={Springer}
}
@article{larkin1980expert,
  title={Expert and novice performance in solving physics problems},
  author={Larkin, Jill and McDermott, John and Simon, Dorothea P and Simon, Herbert A},
  journal={Science},
  volume={208},
  number={4450},
  pages={1335--1342},
  year={1980},
  publisher={American Association for the Advancement of Science}
}
@inproceedings{hihn2015data,
  title={Data mining methods and cost estimation models: Why is it so hard to infuse new ideas?},
  author={Hihn, Jaitus and Menzies, Tim},
  booktitle={Automated Software Engineering Workshop (ASEW), 2015 30th IEEE/ACM International Conference on},
  pages={5--9},
  year={2015},
  organization={IEEE}
}
@article{martens2007comprehensible,
  title={Comprehensible credit scoring models using rule extraction from support vector machines},
  author={Martens, David and Baesens, Bart and Van Gestel, Tony and Vanthienen, Jan},
  journal={European journal of operational research},
  volume={183},
  number={3},
  pages={1466--1476},
  year={2007},
  publisher={Elsevier}
}
@article{martens2013explaining,
  title={Explaining Data-Driven Document Classifications},
  author={Martens, David and Provost, Foster},
  journal={Management Information Systems Quarterly},
  volume={38},
  number={1},
  pages={73--99},
  year={2014}
}

@INPROCEEDINGS{Patil17_concept, 
author={S. {Patil}}, 
booktitle={2017 IEEE/ACM 14th International Conference on Mining Software Repositories (MSR)}, 
title={Concept-Based Classification of Software Defect Reports}, 
year={2017}, 
volume={}, 
number={}, 
pages={182-186}, 
keywords={data mining;learning (artificial intelligence);software engineering;software management;concept-based classification;software defect reports;software defect management life-cycle;supervised learning approach;labeled training data;explicit semantic analysis;ESA;semantic similarity;software defect classification;Software;Encyclopedias;Electronic publishing;Internet;Training data;Semantics;Software Defect Classification;Explicit Semantic Analysis;Mining Software Respositories;Text Data Mining}, 
doi={10.1109/MSR.2017.20}, 
ISSN={}, 
month={May},}

@INPROCEEDINGS{LoISCME_17_unsupervised, 
author={Q. {Huang} and X. {Xia} and D. {Lo}}, 
booktitle={2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
title={Supervised vs Unsupervised Models: A Holistic Look at Effort-Aware Just-in-Time Defect Prediction}, 
year={2017}, 
volume={}, 
number={}, 
pages={159-170}, 
keywords={inspection;just-in-time;learning (artificial intelligence);program debugging;public domain software;software cost estimation;software maintenance;software metrics;inspection budget;unsupervised model;code inspection cost;LT;defective software;historical bug data;effort-aware just-in-time defect prediction;JIT defect prediction;CBS;EALR;harmonic mean;Predictive models;Inspection;Measurement;Computer bugs;Analytical models;Feature extraction;Software;Change Classification;Cost Effectiveness;Evaluation;Bias}, 
doi={10.1109/ICSME.2017.51}, 
ISSN={}, 
month={Sep.},}

@article{dejaeger2013toward,
  title={Toward comprehensible software fault prediction models using bayesian network classifiers},
  author={Dejaeger, Karel and Verbraken, Thomas and Baesens, Bart},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={2},
  pages={237--257},
  year={2013},
  publisher={IEEE}
}
@article{moeyersoms2015comprehensible,
  title={Comprehensible software fault and effort prediction: A data mining approach},
  author={Moeyersoms, Julie and de Fortuny, Enric Junqu{\'e} and Dejaeger, Karel and Baesens, Bart and Martens, David},
  journal={Journal of Systems and Software},
  volume={100},
  pages={80--90},
  year={2015},
  publisher={Elsevier}
}
@inproceedings{tan1999text,
  title={Text mining: The state of the art and the challenges},
  author={Tan, Ah-Hwee and others},
  booktitle={Proceedings of the PAKDD 1999 Workshop on Knowledge Disocovery from Advanced Databases},
  volume={8},
  pages={65--70},
  year={1999},
  organization={sn}
}
@inproceedings{kimicse16,
 author = {Kim, Miryung and Zimmermann, Thomas and DeLine, Robert and Begel, Andrew},
 title = {The Emerging Role of Data Scientists on Software Development Teams},
 booktitle = {Proceedings of the 38th International Conference on Software Engineering},
 series = {ICSE '16},
 year = {2016},
 isbn = {978-1-4503-3900-1},
 location = {Austin, Texas},
 pages = {96--107},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2884781.2884783},
 doi = {10.1145/2884781.2884783},
 acmid = {2884783},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{explainableicse18,
  author    = {Hoa Khanh Dam and
               Truyen Tran and
               Aditya Ghose},
  title     = {Explainable Software Analytics},
  journal   = {CoRR},
  volume    = {abs/1802.00603},
  year      = {2018},
  url       = {http://arxiv.org/abs/1802.00603},
  archivePrefix = {arXiv},
  eprint    = {1802.00603},
  timestamp = {Thu, 01 Mar 2018 15:00:45 +0100},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1802-00603},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@article{lipton2016,
  author    = {Zachary Chase Lipton},
  title     = {The Mythos of Model Interpretability},
  journal   = {CoRR},
  volume    = {abs/1606.03490},
  year      = {2016},
  url       = {http://arxiv.org/abs/1606.03490},
  archivePrefix = {arXiv},
  eprint    = {1606.03490},
  timestamp = {Wed, 07 Jun 2017 14:40:56 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/Lipton16a},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@article{gleicher2016framework,
  title={A framework for considering comprehensibility in modeling},
  author={Gleicher, Michael},
  journal={Big data},
  volume={4},
  number={2},
  pages={75--88},
  year={2016},
  publisher={Mary Ann Liebert, Inc. 140 Huguenot Street, 3rd Floor New Rochelle, NY 10801 USA}
}
@inproceedings{brighton2006,
  title={Robust inference with simple cognitive models},
  author={Brighton, Henry},
  booktitle={Between a rock and a hard place: Cognitive science principles meet AI-hard problems: Papers from the AAAI Spring Symposium},
  pages={17--22},
  year={2006},
  organization={AAAI Press}
}
@article{Camilleri2014DT,
  title={Parameter optimization in decision tree learning by using simple genetic algorithms},
  author={Camilleri, Michel and Neri, Filippo},
  journal={WSEAS Transactions on Computers},
  volume={13},
  pages={582--591},
  year={2014}
}
@book{feldman2006tmh,
 author = {Feldman, Ronen and Sanger, James},
 title = {Text Mining Handbook: Advanced Approaches in Analyzing Unstructured Data},
 year = {2006},
 isbn = {0521836573, 9780521836579},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@article{Yu2019,
title = "FAST2: An intelligent assistant for finding relevant papers",
journal = "Expert Systems with Applications",
volume = "120",
pages = "57 - 71",
year = "2019",
author = "Zhe Yu and Tim Menzies",
keywords = "Active learning, Literature reviews, Text mining, Semi-supervised learning, Relevance feedback, Selection process"
}

@Article{Yu2018,
author="Yu, Zhe
and Kraft, Nicholas A.
and Menzies, Tim",
title="Finding better active learners for faster literature reviews",
journal="Empirical Software Engineering",
year="2018",
abstract="Literature reviews can be time-consuming and tedious to complete. By cataloging and refactoring three state-of-the-art active learning techniques from evidence-based medicine and legal electronic discovery, this paper finds and implements FASTREAD, a faster technique for studying a large corpus of documents, combining and parametrizing the most efficient active learning algorithms. This paper assesses FASTREAD using datasets generated from existing SE literature reviews (Hall, Wahono, Radjenovi{\'{c}}, Kitchenham et al.). Compared to manual methods, FASTREAD lets researchers find 95{\%} relevant studies after reviewing an order of magnitude fewer papers. Compared to other state-of-the-art automatic methods, FASTREAD reviews 20--50{\%} fewer studies while finding same number of relevant primary studies in a systematic literature review.",
}

@Article{De16mean,
author="De, Prithwijit",
title="The arithmetic mean - Geometric mean - Harmonic mean: Inequalities and a spectrum of applications",
journal="Resonance",
year="2016",
abstract="The Arithmetic Mean--Geometric Mean--Harmonic Mean inequality, AM--GM--HM inequality in short, is one of the fundamental inequalities in Algebra, and it is used extensively in olympiad mathematics to solve many problems. The aim of this article is to acquaint students with the inequality, its proof and various applications.",
}

@ARTICLE{menzies07precision, 
author={T. Menzies and A. Dekhtyar and J. Distefano and J. Greenwald}, 
journal={IEEE TSE}, 
title={Problems with Precision: A Response to "Comments on 'Data Mining Static Code Attributes to Learn Defect Predictors'"}, 
year={2007}, 
keywords={data mining;data mining static code attributes;defect predictors;Data mining;Detectors;Equations;Predictive models;Accuracy;Software engineering;NASA;Testing;Performance evaluation;Project management}, }

@article{RODRIGUEZPEREZ2018164,
title = "Reproducibility and credibility in empirical software engineering: A case study based on a systematic literature review of the use of the SZZ algorithm",
author = {Rodriguez, G. and Robles, G. and Gonzalez-Barahona, J.},
journal = "IST",
year = "2018",
keywords = "Credibility, Reproducibility, SZZ Algorithm, Systematic literature review",
}

@ARTICLE{7588121, 
author={D. A. {da Costa} and S. {McIntosh} and W. {Shang} and U. {Kulesza} and R. {Coelho} and A. E. {Hassan}}, 
journal={IEEE Transactions on Software Engineering}, 
title={A Framework for Evaluating the Results of the SZZ Approach for Identifying Bug-Introducing Changes}, 
year={2017}, 
volume={43}, 
number={7}, 
pages={641-657}, 
keywords={program debugging;SZZ approach;bug-introducing change identification;Silwerski-Zimmermann-Zeller approach;ground truth;open source projects;data evaluation;Computer bugs;Software engineering;Electronic mail;Software;Manuals;History;Systematics;SZZ;evaluation framework;bug detection;software repository mining}, 
month={July},}

@incollection{Amarel1986,
Author = {Saul Amarel},
Booktitle = {Machine Learning: An Artificial Intelligence Approach},
Date-Added = {2016-06-01 15:03:26 +0000},
Date-Modified = {2016-06-01 15:05:12 +0000},
Publisher = {Morgan Kaufmann},
Title = {Program Synthesis as a Theory Formation Task: problem
representations and solution methods},
Year = {1986}}


@inproceedings{williams2003backdoors,
Author = {Williams, Ryan and Gomes, Carla P and Selman, Bart},
Booktitle = ijcai,
Date-Added = {2016-06-01 15:00:50 +0000},
Date-Modified = {2016-06-01 15:00:50 +0000},
Title = {Backdoors to typical case complexity},
Year = {2003}}


@inproceedings{Crawford:1994,
Acmid = {199540},
Address = {Menlo Park, CA, USA},
Author = {Crawford, James M. and Baker, Andrew B.},
Booktitle = {Proceedings of the Twelfth National Conference on
Artificial Intelligence (Vol. 2)},
Location = {Seattle, Washington, USA},
Pages = {1092--1097},
Title = {Experimental Results on the Application of Satisfiability
Algorithms to Scheduling Problems},

Year = {1994}}

@article{Kohavi:1997,
Acmid = {270627},
Address = {Essex, UK},
Author = {Kohavi, Ron and John, George H.},
Doi = {10.1016/S0004-3702(97)00043-X},
Issn = {0004-3702},
Issue_Date = {Dec. 1997},
Journal = {Artif. Intell.},
Keywords = {classification, feature seleciton, filter, wrapper},
Month = dec,
Number = {1-2},
Numpages = {52},
Pages = {273--324},
Publisher = {Elsevier Science Publishers Ltd.},
Title = {Wrappers for Feature Subset Selection},

Volume = {97},
Year = {1997},
Bdsk-Url-1 = {http://dx.doi.org/10.1016/S0004-3702(97)00043-X}
}
@article{liu2010evolutionary,
  title={Evolutionary optimization of software quality modeling with
multiple repositories},
  author={Liu, Yi and Khoshgoftaar, Taghi M and Seliya, Naeem},
  journal={IEEE Transactions on Software Engineering},
  year={2010}
}
@article{treude2018per,
  title={Per-Corpus Configuration of Topic Modelling for GitHub and
Stack Overflow Collections},
  author={Treude, Christoph and Wagner, Markus},
  journal={arXiv preprint arXiv:1804.04749},
  year={2018}
}
@article{zhong2004,
  title={Analyzing software measurement data with clustering techniques},
  author={Zhong, Shi and Khoshgoftaar, Taghi M and Seliya, Naeem},
  journal={IEEE Intelligent Systems},
  volume={19},
  number={2},
  pages={20--27},
  year={2004},
  publisher={IEEE}
}
@inproceedings{sarro2012further,
  title={A further analysis on the use of genetic algorithm to
configure support vector machines for inter-release fault prediction},
  author={Sarro, Federica and Di Martino, Sergio and Ferrucci,
Filomena and Gravino, Carmine},
  booktitle={Symposium on applied computing},
  year={2012},
  organization={ACM}
}
@article{oliveira2010ga,
  title={GA-based method for feature selection and parameters
optimization for machine learning regression applied to software
effort estimation},
  author={Oliveira, Adriano LI and Braga, Petronio L and Lima, Ricardo
MF and Corn{\'e}lio, M{\'a}rcio L},
  journal={Information and Software Technology Journal},
  year={2010}
}

@misc{

https://www.washingtonpost.com/national/health-science/particles-faster-than-light-revolution-or-mistake/2011/09/23/gIQArpJzqK_story.html?utm_term=.69fdb9e388a4
}

@inproceedings{orso2014software,
  title={Software testing: a research travelogue (2000--2014)},
  author={Orso, Alessandro and Rothermel, Gregg},
  booktitle={Future of Software Engineering},
  year={2014},
}

@inproceedings{ghotra2015revisiting,
  title={Revisiting the impact of classification techniques on the
performance of defect prediction models},
  author={Ghotra, Baljinder and McIntosh, Shane and Hassan, Ahmed E},
  booktitle={ICSE},
  year={2015}
 }

@book{efron93bootstrap,
    address = {New York},
    author = {Efron, B. and Tibshirani, R. J.},
    posted-at = {2007-09-03 16:53:17},
    priority = {0},
    publisher = {Chapman \& Hall},
    title = {{An Introduction to the Bootstrap}},
    year = {1993}
}




@article{shepperd2012evaluating,
  title={Evaluating prediction systems in software project estimation},
  author={Shepperd, M. and MacDonell, S.},
  journal={IST},
  volume={54},
  number={8},
  pages={820--827},
  year={2012},
  publisher={Elsevier}
}


@book{Calero:2015,
 author = {Calero, C. and Piattini, M.},
 title = {Green in Software Engineering},
 year = {2015},
 publisher = {Springer Publishing Company, Incorporated},
}


@book{cohen1995empirical,
  title={Empirical methods for artificial intelligence},
  author={Cohen, P. R},
  year={1995},
  publisher={MIT press Cambridge, MA}
}

@article{laumanns2002combining,
  title={Combining convergence and diversity in evolutionary
multiobjective optimization},
  author={Laumanns, M. and Thiele, L. and Deb, K. and
Zitzler, E.},
  journal={Evolutionary computation},
  year={2002},
  publisher={MIT Press}
}

@inproceedings{rahman2013and,
  title={How, and why, process metrics are better},
  author={Rahman, F. and Devanbu, p.},
  booktitle={ICSE},
  year={2013},
  organization={IEEE}
}


@inproceedings{zhang2016cross,
  title={Cross-project defect prediction using a connectivity-based
unsupervised classifier},
  author={Zhang, F. and Zheng, Q. and Zou, Y. and Hassan, A. E},
  booktitle={ICSE},
  year={2016},
  organization={ACM}
}


@article{kohavi1997wrappers,
  title={Wrappers for feature subset selection},
  author={Kohavi, R. and John, G. H},
  journal={Artificial intelligence},
  year={1997},
  publisher={Elsevier}
}

@article{LumpeVMRT12,
  author    = {M. Lumpe and
               R. Vasa and
               T. Menzies and
               R. Rush and
               B. Turhan},
  title     = {Learning Better Inspection Optimization Policies},
  journal   = {Software Engineering and
Knowledge Engineering},
  year      = {2012},
}



@ARTICLE{wan18,
author={Z. Wan and X. Xia and A. E. Hassan and D. Lo and J. Yin and X. Yang},
journal={TSE},
title={Perceptions, Expectations, \& Challenges in Defect Prediction},
year={2018},
}

@inproceedings{Williams:2003,
 author = {Williams, R. and Gomes, C. P. and Selman, B.},
 title = {Backdoors to Typical Case Complexity},
 booktitle = {Proceedings of the 18th International Joint Conference
on Artificial Intelligence},
 series = {IJCAI'03},
 year = {2003},
}
[download]

@inproceedings{Crawford1994ExperimentalRO,
  title={Experimental results on the application of satisfiability
algorithms to scheduling problems},
  author={James M. Crawford and Andrew B. Baker},
  booktitle={AAAI 1994},
  year={1994}
}

@incollection{michalski2013machine,
  title="Program Synthesis as a Theory Formation Task: Problem
Representations and Solution Methods",
  author={Amarel, S.},
  booktitle={Machine learning: An artificial intelligence approach},
  year={2013},
  publisher={Springer Science \& Business Media}
}
@book{michalski2013machine,
  title={Program synthesis as a theory formation task: Problem
representations and solution methods},
  author={Amarel, S.},
  year={1983},
  publisher={Department of Computer Science, Rutgers University}
}

@inproceedings{Wang:2016,
 author = {Wang, Song and Liu, Taiyue and Tan, Lin},
 title = {Automatically Learning Semantic Features for Defect Prediction},
 booktitle = {Proceedings of the 38th International Conference on
Software Engineering},
 series = {ICSE},
 year = {2016},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{ray2016naturalness,
  title={On the naturalness of buggy code},
  author={Ray, B. and Hellendoorn, V. and Godhane, S.
and Tu, Z. and Bacchelli, A. and Devanbu, P.},
  booktitle={ICSE},
  year={2016},
  organization={ACM}
}

@inproceedings{Panichella:2013,
 author = {Panichella, A. and Dit, B. and Oliveto, R. and
Di Penta, M. and Poshyvanyk, D. and De Lucia, A.},
 title = {How to Effectively Use Topic Models for Software Engineering
Tasks? An Approach Based on Genetic Algorithms},
 booktitle = {ICSE},
 year = {2013},
}



@inproceedings{Hellendoorn:2017,
 author = {Hellendoorn, Vincent J. and Devanbu, Premkumar},
 title = {Are Deep Neural Networks the Best Choice for Modeling Source Code?},
 booktitle = {FSE'17},
 year = {2017},
 pages = {763--773},
}

@article{lumpe2012learning,
  title={Learning better inspection optimization policies},
  author={Lumpe, Markus and Vasa, Rajesh and Menzies, Tim and Rush,
Rebecca and Turhan, Burak},
  journal={International Journal of Software Engineering and Knowledge
Engineering},
  volume={22},
  number={05},
  pages={621--644},
  year={2012},
  publisher={World Scientific}
}

@inproceedings{wang2013searching,
  title={Searching for better configurations: a rigorous approach to
clone evaluation},
  author={Wang, Tiantian and Harman, Mark and Jia, Yue and Krinke, Jens},
  booktitle={ Foundations of Software Engineering},
  year={2013},
  organization={ACM}
}

@article{deb2005evaluating,
  title={Evaluating the $\varepsilon$-domination based multi-objective
evolutionary algorithm for a quick computation of Pareto-optimal
solutions},
  author={Deb, Kalyanmoy and Mohan, Manikanth and Mishra, Shikhar},
  journal={Evolutionary computation},
  year={2005},
  publisher={MIT Press}
}

@article{martignon2003naive,
  title={Naive and yet enlightened: From natural frequencies to fast
and frugal decision trees},
  author={Martignon, Laura and Vitouch, Oliver and Takezawa, Masanori
and Forster, Malcolm R},
  journal={Thinking: Psychological perspectives on reasoning, judgment
and decision making},
  pages={189--211},
  year={2003},
  publisher={John Wiley \& Sons, Ltd}
}

@book{menzies2014sharing,
  title={Sharing data and models in software engineering},
  author={Menzies, Tim and Kocaguneli, Ekrem and Turhan, Burak and
Minku, Leandro and Peters, Fayola},
  year={2014},
  publisher={Morgan Kaufmann}
}

@article{storn1997differential,
  title={Differential evolution--a simple and efficient heuristic for
global optimization over continuous spaces},
  author={R. Storn  and K. Price},
  journal={Journal of global optimization},
  volume={11},
  number={4},
  pages={341--359},
  year={1997},
  publisher={Springer}
}

@article{durillo2011jmetal,
  title={jMetal: A Java framework for multi-objective optimization},
  author={Durillo, Juan J and Nebro, Antonio J},
  journal={Advances in Engineering Software},
  volume={42},
  number={10},
  pages={760--771},
  year={2011},
  publisher={Elsevier}
}

@inproceedings{fu2017easy,
 author = {Fu, Wei and Menzies, Tim},
 title = {Easy over Hard: A Case Study on Deep Learning},
 booktitle = {Foundations of Software Engineering},
 year = {2017},
 publisher = {ACM},
}


@misc{white05,
title="Consolidating, Accessing and Analyzing Unstructured Data",
author="Colin White",
year=2005,
note="http://www.b-eye-network.com/view/2098"
}


@book{Witten:2005,
 author = {Witten, Ian H. and Frank, Eibe},
 title = {Data Mining: Practical Machine Learning Tools and
Techniques, Second Edition (Morgan Kaufmann Series in Data Management
Systems)},
 year = {2005},
 isbn = {0120884070},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
}


@article{Menzies:2007prec,
 author = {Menzies, T. and Dekhtyar, A. and Distefano, J. and
Greenwald, J.},
 title = {Problems with Precision: A Response to "Comments on 'Data
Mining Static Code Attributes to Learn Defect Predictors'"},
 journal = {IEEE TSE},
 year = {2007}
}


@inproceedings{Sculley:2010,
 author = {Sculley, D.},
 title = {Web-scale K-means Clustering},
 booktitle = {Proceedings of the 19th International Conference on
World Wide Web},
 series = {WWW '10},
 year = {2010},
 isbn = {978-1-60558-799-8},
 location = {Raleigh, North Carolina, USA},
 pages = {1177--1178},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1772690.1772862},
 doi = {10.1145/1772690.1772862},
 acmid = {1772862},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {scalability, sparse solutions, unsupervised clustering},
}

[download]


@ARTICLE{Lessmann08,
author={S. Lessmann and B. Baesens and C. Mues and S. Pietsch},
journal={IEEE Transactions on Software Engineering},
title={Benchmarking Classification Models for Software Defect
Prediction: A Proposed Framework and Novel Findings},
year={2008},
volume={34},
number={4},
pages={485-496},
keywords={benchmark testing;software quality;statistical
testing;benchmarking classification models;code attributes;fault-prone
modules;metric-based classification;predictive classification
models;proprietary data sets;software defect prediction;software
quality;statistical testing procedures;testing efficiency;Complexity
measures;Data mining;Formal methods;Statistical methods},
doi={10.1109/TSE.2008.35},
ISSN={0098-5589},
month={July},}


@misc{menzies2012special,
  title={Special issue on repeatable results in software engineering
prediction},
  author={Menzies, Tim and Shepperd, Martin},
  year={2012},
  publisher={Springer}
}

@inproceedings{xu2016predicting,
  title={Predicting semantically linkable knowledge in developer
online forums via convolutional neural network},
  author={Xu, Bowen and Ye, Deheng and Xing, Zhenchang and Xia, Xin
and Chen, Guibin and Li, Shanping},
  booktitle={International Conference on Automated Software Engineering},
  year={2016},
  organization={ACM}
}

@article{breiman2001random,
  title={Random forests},
  author={Breiman, Leo},
  journal={Machine learning},
  volume={45},
  number={1},
  pages={5--32},
  year={2001},
  publisher={Springer}
}
@inproceedings{wang2016automatically,
  title={Automatically learning semantic features for defect prediction},
  author={Wang, Song and Liu, Taiyue and Tan, Lin},
  booktitle={Proceedings of the 38th International Conference on
Software Engineering},
  pages={297--308},
  year={2016},
  organization={ACM}
}

@inproceedings{majumder18,
  author    = {Suvodeep Majumder and
               Nikhila Balaji and
               Katie Brey and
               Wei Fu and
               Tim Menzies},
  title     = {500+ Times Faster Than Deep Learning {(A} Case Study
Exploring Faster
               Methods for Text Mining StackOverflow)},
  booktitle   = {Mining Software Repository},
  year      = {2018}
}


@article{barr2015oracle,
  title={The oracle problem in software testing: A survey},
  author={Barr, Earl T and Harman, Mark and McMinn, Phil and Shahbaz,
Muzammil and Yoo, Shin},
  journal={IEEE transactions on software engineering},
  year={2015}
}
@book{feldman2006j,
  title={J, The Text Mining Handbook},
  author={Feldman, R-SANGER},
  year={2006},
  publisher={New York: Cambridge University Press}
}
@inproceedings{bird2006nltk,
  title={NLTK: the natural language toolkit},
  author={Bird, Steven},
  booktitle={Proceedings of the COLING/ACL on Interactive presentation
sessions},
  year={2006}
}
@inproceedings{blei2003latent,
  title={Latent dirichlet allocation},
  author={Blei, David M and Ng, Andrew Y and Jordan, Michael I},
  booktitle={the Journal of machine Learning research},
  year={2003}
}
@misc{Porter1980,
abstract = {The Porter stemming algorithm (or ‘Porter stemmer') is a
process for removing the commoner morphological and inflexional
endings from words in English. Its main use is as part of a term
normalisation process that is usually done when setting up Information
Retrieval systems.},
author = {Porter, M},
booktitle = {Program},
keywords = {ir,porter},
number = {3},
pages = {130--137},
title = {{The Porter Stemming Algorithm}},
url = {http://tartarus.org/martin/PorterStemmer/},
volume = {14},
year = {1980}
}

@article{xia18,
  title={Hyperparameter Optimization for Effort Estimation},
  author={Xia, Tianpei and Krishna, Rahul and Chen, Jianfeng and
Mathew, George and Shen, Xipeng and Menzies, Tim},
  journal={arXiv preprint arXiv:1805.00336},
  year={2018}
}

@inproceedings{kocaguneli2010use,
  title={When to use data from other projects for effort estimation},
  author={Kocaguneli, Ekrem and Gay, Gregory and Menzies, Tim and
Yang, Ye and Keung, Jacky W},
  booktitle={Proceedings of the IEEE/ACM international conference on
Automated software engineering},
  pages={321--324},
  year={2010},
  organization={ACM}
}


@inproceedings{chen2005feature,
  title={Feature subset selection can improve software cost estimation
accuracy},
  author={Chen, Zhihao and Menzies, Tim and Port, Dan and Boehm, Barry},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={30},
  number={4},
  pages={1--6},
  year={2005},
  organization={ACM}
}

@article{fayyad1993multi,
  title={Multi-interval discretization of continuous-valued attributes
for classification learning},
  author={Fayyad, Usama and Irani, Keki},
  year={1993}
}

@misc{menzies2012special,
  title={Special issue on repeatable results in software engineering
prediction},
  author={Menzies, Tim and Shepperd, Martin},
  year={2012},
  publisher={Springer}
}

@article{yoo2012regression,
  title={Regression testing minimization, selection and
prioritization: a survey},
  author={Yoo, Shin and Harman, Mark},
  journal={Software Testing, Verification and Reliability},
  volume={22},
  number={2},
  pages={67--120},
  year={2012},
  publisher={Wiley Online Library}
}

@book{myers2011art,
  title={The art of software testing},
  author={Myers, Glenford J and Sandler, Corey and Badgett, Tom},
  year={2011},
  publisher={John Wiley \& Sons}
}

@article{hamill2009common,
  title={Common trends in software fault and failure data},
  author={Hamill, M. and Goseva-Popstojanova, K.},
  journal={IEEE TSE},
  year={2009}
}

@article{koru2009investigation,
  title={An investigation into the functional form of the size-defect
relationship for software modules},
  author={Koru, A G. and Zhang, D. and El Emam,
K. and Liu, H.},
  journal={IEEE TSE},
  year={2009}
}

@inproceedings{ostrand2004bugs,
  title={Where the bugs are},
  author={Ostrand, T. J and Weyuker, E. J and Bell, R. M},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  year={2004}
}

 @article{glover1989tabu,
  title={Tabu search—part I},
  author={Glover, Fred},
  journal={ORSA Journal on computing},
  volume={1},
  number={3},
  pages={190--206},
  year={1989},
  publisher={INFORMS}
}

@article{lim2012stakerare,
  title={StakeRare: using social networks and collaborative filtering
for large-scale requirements elicitation},
  author={Lim, Soo Ling and Finkelstein, Anthony},
  journal={IEEE Transactions on Software Engineering},
  volume={38},
  number={3},
  pages={707--735},
  year={2012},
  publisher={IEEE}
}

@article{menzies2013local,
  title={Local versus global lessons for defect prediction and effort
estimation},
  author={Menzies, Tim and Butcher, Andrew and Cok, David and Marcus,
Andrian and Layman, Lucas and Shull, Forrest and Turhan, Burak and
Zimmermann, Thomas},
  journal={IEEE Transactions on software engineering},
  volume={39},
  number={6},
  pages={822--834},
  year={2013},
  publisher={IEEE}
}


@article{sjoberg2013quantifying,
  title={Quantifying the effect of code smells on maintenance effort},
  author={Sj{\o}berg, Dag IK and Yamashita, Aiko and Anda, Bente CD
and Mockus, Audris and Dyb{\aa}, Tore},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={8},
  pages={1144--1156},
  year={2013},
  publisher={IEEE}
}

@article{kocaguneli2012value,
  title={On the value of ensemble effort estimation},
  author={Kocaguneli, E. and Menzies, T. and Keung, J. W},
  journal={IEEE TSE},
  volume={38},
  number={6},
  pages={1403--1416},
  year={2012},
  publisher={IEEE}
}

@article{kocaguneli2012exploiting,
  title={Exploiting the essential assumptions of analogy-based effort
estimation},
  author={Kocaguneli, E. and Menzies, T. and Bener, A. and
Keung, J. W},
  journal={IEEE TSE},
  year={2012}
}

@article{petke2018guest,
  title={Guest Editorial for the Special Section from the 9th
International Symposium on Search Based Software Engineering},
  author={Petke, Justyna and Menzies, Tim},
  journal={Information and Software Technology},
  year={2018}
}

@article{nair2018finding,
  title={Finding faster configurations using flash},
  author={Nair, Vivek and Yu, Zhe and Menzies, Tim and Siegmund,
Norbert and Apel, Sven},
  journal={arXiv preprint arXiv:1801.02175},
  year={2018}
}

@ARTICLE{chen18,
author={J. Chen and V. Nair and R. Krishna and T. Menzies},
journal={IEEE Transactions on Software Engineering (pre-print)},
title={"Sampling" as a Baseline Optimizer for Search-based Software
Engineering},
year={2018},
pages={1-1},
}
@inproceedings{vesterstrom2004comparative,
  title={A comparative study of differential evolution, particle swarm
optimization, and evolutionary algorithms on numerical benchmark
problems},
  author={Vesterstr{\o}m, Jakob and Thomsen, Rene},
  booktitle={Congress on Evolutionary Computation},
  year={2004},
  organization={IEEE}
}
@article{chen2018applications,
  title={Applications of Psychological Science for Actionable Analytics},
  author={Chen, Di and Fu, Wei and Krishna, Rahul and Menzies, Tim},
  journal={Foundations of Software Engineering},
  year={2018}
}
@article{menzies2008improving,
  title={Improving IV\&V Techniques Through the Analysis of Project
Anomalies: Text Mining PITS issue reports-final report},
  author={Menzies, Tim},
  journal={Citeseer},
  year={2008}
}
@inproceedings{menzies2008automated,
  title={Automated severity assessment of software defect reports},
  author={Menzies, Tim and Marcus, Andrian},
  booktitle={International Conference on Software Maintenance },
  year={2008},
  organization={IEEE}
}
@article{Chawla:2002,
 author = {Chawla, Nitesh V. and Bowyer, Kevin W. and Hall, Lawrence
O. and Kegelmeyer, W. Philip},
 title = {SMOTE: Synthetic Minority Over-sampling Technique},
 journal = {J. Artif. Int. Res.},
 year = {2002}
}

@article{unterkalmsteiner2012evaluation,
  title={Evaluation and measurement of software process improvement—a
systematic literature review},
  author={Unterkalmsteiner, M. and Gorschek, T. and Islam, A.
A. and Cheng, C. K. and Permadi, R. B. and Feldt,
R.},
  journal={IEEE TSE},
  year={2012},
  publisher={IEEE}
}

@article{misirli2011ai,
  title={Ai-based software defect predictors: Applications and
benefits in a case study},
  author={Misirli, A. T. and Bener, A. and Kale, R.},
  journal={AI Magazine},
  year={2011}
}


@article{chidamber1994metrics,
  title={A metrics suite for object oriented design},
  author={Chidamber, Shyam R and Kemerer, Chris F},
  journal={IEEE TSE},
  year={1994},
  publisher={IEEE}
}

@article{kafura1987use,
  title={The use of software complexity metrics in software maintenance},
  author={Kafura, D. and Reddy, G. R.},
  journal={IEEE TSE},
}

@article{mccabe1976complexity,
  title={A complexity measure},
  author={McCabe, Thomas J},
  journal={IEEE TSE},
  number={4},
  pages={308--320},
  year={1976},
  publisher={IEEE}
}

@inproceedings{fu2017unsupervised,
 author = {Fu, Wei and Menzies, Tim},
 title = {Revisiting Unsupervised Learning for Defect Prediction},
 booktitle = {Proceedings of the 2017 11th Joint Meeting on
Foundations of Software Engineering},
 series = {ESEC/FSE 2017},
 year = {2017},
 pages = {72--83},
 numpages = {12},
 publisher = {ACM}
}

@article{kim2008classifying,
  title={Classifying software changes: Clean or buggy?},
  author={Kim, Sunghun and Whitehead Jr, E James and Zhang, Yi},
  journal={IEEE Transactions on Software Engineering},
  volume={34},
  number={2},
  pages={181--196},
  year={2008},
  publisher={IEEE}
}


@article{phillips2017fftrees,
  title={FFTrees: A toolbox to create, visualize, and evaluate
fast-and-frugal decision trees},
  author={Phillips, Nathaniel D and Neth, Hansj{\"o}rg and Woike, Jan
K and Gaissmaier, Wolfgang},
  journal={Judgment and Decision Making},
  volume={12},
  number={4},
  pages={344},
  year={2017},
  publisher={Society for Judgment \& Decision Making}
}

@article{woike2017integrating,
  title={Integrating and testing natural frequencies, na{\"\i}ve
Bayes, and fast-and-frugal trees.},
  author={Woike, Jan K and Hoffrage, Ulrich and Martignon, Laura},
  journal={Decision},
  volume={4},
  number={4},
  pages={234},
  year={2017},
  publisher={Educational Publishing Foundation}
}

@article{kamei2013large,
  title={A large-scale empirical study of just-in-time quality assurance},
  author={Kamei, Yasutaka and Shihab, Emad and Adams, Bram and Hassan,
Ahmed E and Mockus, Audris and Sinha, Anand and Ubayashi, Naoyasu},
  journal={IEEE Transactions on Software Engineering},
  year={2013}
}

@article{mockus2000predicting,
  title={Predicting risk of software changes},
  author={Mockus, Audris and Weiss, David M},
  journal={Bell Labs Technical Journal},
  volume={5},
  number={2},
  pages={169--180},
  year={2000},
  publisher={Alcatel-Lucent}
}

@inproceedings{yang2016effort,
  title={Effort-aware just-in-time defect prediction: simple
unsupervised models could be better than supervised models},
  author={Yang, Yibiao and Zhou, Yuming and Liu, Jinping and Zhao,
Yangyang and Lu, Hongmin and Xu, Lei and Xu, Baowen and Leung,
Hareton},
  booktitle={Foundations of Software Engineering},
  year={2016},
  organization={ACM}
}


@article{pedregosa2011scikit,
  title={Scikit-learn: Machine learning in Python},
  author={Pedregosa, Fabian and Varoquaux, Ga{\"e}l and Gramfort,
Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel,
Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron
and Dubourg, Vincent and others},
  journal={Journal of machine learning research},
  year={2011}
}

@inproceedings{huang2017supervised,
  title={Supervised vs unsupervised models: A holistic look at
effort-aware just-in-time defect prediction},
  author={Huang, Qiao and Xia, Xin and Lo, David},
  booktitle={Software Maintenance and Evolution (ICSME), 2017 IEEE
International Conference on},
  pages={159--170},
  year={2017},
  organization={IEEE}
}

@inproceedings{liu2017code,
  title={Code churn: A neglected metric in effort-aware just-in-time
defect prediction},
  author={Liu, Jinping and Zhou, Yuming and Yang, Yibiao and Lu,
Hongmin and Xu, Baowen},
  booktitle={Empirical Software Engineering and Measurement (ESEM),
2017 ACM/IEEE International Symposium on},
  pages={11--19},
  year={2017},
  organization={IEEE}
}


@article{fu2016differential,
  title={Why is differential evolution better than grid search for
tuning defect predictors?},
  author={Fu, W. and Nair, V. and Menzies, T.},
  journal={arXiv:1609.02613},
  year={2016}
}

@inproceedings{nair2017using,
  title={Using bad learners to find good configurations},
  author={Nair, V. and Menzies, T. and Siegmund, N. and Apel, S.},
  booktitle={11th Joint Meeting on FSE},
  year={2017},
  organization={ACM}
}

@inproceedings{nagappan2006mining,
  title={Mining metrics to predict component failures},
  author={Nagappan, Nachiappan and Ball, Thomas and Zeller, Andreas},
  booktitle={Proceedings of the 28th International Conference on
Software Engineering},
  pages={452--461},
  year={2006},
  organization={ACM}
}
@inproceedings{d2010extensive,
  title={An extensive comparison of bug prediction approaches},
  author={D'Ambros, Marco and Lanza, Michele and Robbes, Romain},
  booktitle={2010 7th IEEE Working Conference on Mining Software Repositories},
  pages={31--41},
  year={2010},
  organization={IEEE}
}

@inproceedings{hassan2009predicting,
  title={Predicting faults using the complexity of code changes},
  author={Hassan, Ahmed E},
  booktitle={Proceedings of the 31st International Conference on
Software Engineering},
  pages={78--88},
  year={2009},
  organization={IEEE}
}

@inproceedings{nagappan2005use,
  title={ to predict system defect density},
  author={Nagappan, Nachiappan and Ball, Thomas},
  booktitle={Proceedings of the 27th International Conference on
Software Engineering},
  pages={284--292},
  year={2005},
  organization={IEEE}
}

@inproceedings{paaareanu2008combining,
  title={Combining unit-level symbolic execution and system-level
concrete execution for testing NASA software},
  author={Pasareanu, Corina S and Mehlitz, Peter C and Bushnell, David
H and Gundy-Burlet, Karen and Lowry, Michael and Person, Suzette and
Pape, Mark},
  booktitle={Proceedings of the 2008 International Symposium on
Software Testing and Analysis},
  pages={15--26},
  year={2008},
  organization={ACM}
}




@article{hamill09,
  title={Common trends in software fault and failure data},
  author={Hamill, Maggie and Goseva-Popstojanova, Katerina},
  journal={IEEE Transactions on Software Engineering},
  volume={35},
  number={4},
  pages={484--496},
  year={2009},
  publisher={IEEE}
}

@inproceedings{Shull:2001,
  title={Improving software inspections by using reading techniques},
  author={Shull, Forrest and Rus, Ioana and Basili, Victor},
  booktitle={Proceedings of the 23rd International Conference on
Software Engineering},
  pages={726--727},
  year={2001},
  organization={IEEE}
}


@inproceedings{Ostrand:2004,
  title={Where the bugs are},
  author={Ostrand, Thomas J and Weyuker, Elaine J and Bell, Robert M},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={29},
  number={4},
  pages={86--96},
  year={2004},
  organization={ACM}
}

@inproceedings{dev16, author = {Devanbu, Prem and Zimmermann, Thomas and Bird, Christian}, title = {Belief \& Evidence in Empirical Software Engineering}, year = {2016}, booktitle = {ICSE}}



@inproceedings{rahman2014comparing,
  title={Comparing static bug finders and statistical prediction},
  author={Rahman, F. and Khatri, S. and Barr, E. T and
Devanbu, P.},
  booktitle={ICSE},
  year={2014},
  organization={ACM}
}

@inproceedings{guo2010characterizing,
  title={Characterizing and predicting which bugs get fixed: an
empirical study of Microsoft Windows},
  author={Guo, Philip J and Zimmermann, Thomas and Nagappan,
Nachiappan and Murphy, Brendan},
  booktitle={Proceedings of the 32nd ACM/IEEE International Conference
on Software Engineering - Volume 1},
  volume={1},
  pages={495--504},
  year={2010},
  organization={ACM}
}

@inproceedings{matsumoto2010analysis,
  title={An analysis of developer metrics for fault prediction},
  author={Matsumoto, S. and Kamei, Y. and Monden, A.
and Matsumoto, K. and Nakamura, M.},
  booktitle={6th PROMISE},
  year={2010}
}

@article{graves2000predicting,
  title={Predicting fault incidence using software change history},
  author={Graves, T. L and Karr, A. F and Marron, J. S and Siy, H.},
  journal={TSE},
  year={2000},
  publisher={IEEE}
}


@inproceedings{yin2011fixes,
  title={How do fixes become bugs?},
  author={Yin, Zuoning and Yuan, Ding and Zhou, Yuanyuan and
Pasupathy, Shankar and Bairavasundaram, Lakshmi},
  booktitle={Proceedings of the 19th ACM SIGSOFT Symposium and the
13th European Conference on Foundations of Software Engineering},
  pages={26--36},
  year={2011},
  organization={ACM}
}


@article{lessmann2008benchmarking,
  title={Benchmarking classification models for software defect
prediction: A proposed framework and novel findings},
  author={Lessmann, Stefan and Baesens, Bart and Mues, Christophe and
Pietsch, Swantje},
  journal={IEEE Transactions on Software Engineering},
  volume={34},
  number={4},
  pages={485--496},
  year={2008},
  publisher={IEEE}
}
@article{hosseini2017systematic,
  title={A Systematic Literature Review and Meta-analysis on Cross
Project Defect Prediction},
  author={Hosseini, Seyedrebvar and Turhan, Burak and Gunarathna, Dimuthu},
  journal={IEEE Transactions on Software Engineering},
  year={2017},
  publisher={IEEE}
}

@INPROCEEDINGS{Cortes95support-vectornetworks,
    author = {Corinna Cortes and Vladimir Vapnik},
    title = {Support-Vector Networks},
    booktitle = {Machine Learning},
    year = {1995},
    pages = {273--297}
}

@book{fenton2012risk,
  title={Risk assessment and decision analysis with Bayesian networks},
  author={Fenton, Norman and Neil, Martin},
  year={2012},
  publisher={Crc Press}
}


@article{menzies2007data,
  title={Data mining static code attributes to learn defect predictors},
  author={Menzies, Tim and Greenwald, Jeremy and Frank, Art},
  journal={IEEE Transactions on Software Engineering},
  volume={33},
  number={1},
  year={2007},
  publisher={IEEE}
}

@article{hall2012systematic,
  title={A systematic literature review on fault prediction
performance in software engineering},
  author={Hall, Tracy and Beecham, Sarah and Bowes, David and Gray,
David and Counsell, Steve},
  journal={IEEE Transactions on Software Engineering},
  volume={38},
  number={6},
  pages={1276--1304},
  year={2012},
  publisher={IEEE}
}

@inproceedings{Krishna:2016,
 author = {Krishna, Rahul and Yu, Zhe and Agrawal, Amritanshu and
Dominguez, Manuel and Wolf, David},
 title = {The "BigSE" Project: Lessons Learned from Validating
Industrial Text Mining},
 booktitle = {Proceedings of the 2Nd International Workshop on BIG
Data Software Engineering},
 series = {BIGDSE '16},
 year = {2016},
 pages = {65--71},
}
@article{interactions-with-big-data-analytics,
  title={Interactions with big data analytics},
  author={Fisher, Danyel and DeLine, Rob and Czerwinski, Mary and
Drucker, Steven},
  journal={ACM interactions},
  year={2012},
  publisher={ACM}
}

@inproceedings{huang17,
author={Qiao Huang and Xin Xia and David Lo},
title={Supervised vs unsupervised models: a holistic look at
effort-aware              just-in-time defect prediction},
booktitle={2017 IEEE International Conference on Software Maintenance
and Evolution},
year={2017},
publisher={IEEE}
}


@article{nadkarni2014structured,
  title={Structured Versus Unstructured Data: The Balance of Power
Continues to Shift},
  author={Nadkarni, Ashish and Yezhkova, Natalya},
  journal={IDC (Industry Development and Models) Mar},
  year={2014}
}

@article{luan2017fast,
  title={Fast-and-frugal trees as noncompensatory models of
performance-based personnel decisions},
  author={Luan, Shenghua and Reb, Jochen},
  journal={Organizational Behavior and Human Decision Processes},
  volume={141},
  pages={29--42},
  year={2017},
  publisher={Elsevier}
}

@misc{neumann13,
 author="S. Neumann",
 title="GitHub, You Got Issues: An Analysis of Issues on GitHub in 2013",
 year=2013,
 note="https://www.xplenty.com/blog/github-issue-analysis-2013/"
}

@article{aikman2014taking,
  title={Taking uncertainty seriously: simplicity versus complexity in
financial regulation},
  author={Aikman, David and Galesic, Mirta and Gigerenzer, Gerd and
Kapadia, Sujit and Katsikopoulos, Konstantinos V and Kothiyal, Amit
and Murphy, Emma and Neumann, Tobias},
  year={2014}
}

@incollection{cruciani2017different,
  title={Different Views on Economic Rationality: Affect and Emotions},
  author={Cruciani, Caterina},
  booktitle={Investor Decision-Making and the Role of the Financial Advisor},
  pages={37--64},
  year={2017},
  publisher={Springer}
}

@article{neth2014homo,
  title={Homo heuristicus in the financial world: From risk management
to managing uncertainty},
  author={Neth, Hansj{\"o}rg and Meder, Bj{\"o}rn and Kothiyal, Amit
and Gigerenzer, Gerd},
  journal={Journal of Risk Management in Financial Institutions},
  volume={7},
  number={2},
  pages={134--144},
  year={2014},
  publisher={Henry Stewart Publications}
}

@article{forbes2015heuristics,
  title={Which heuristics can aid financial-decision-making?},
  author={Forbes, William and Hudson, Robert and Skerratt, Len and
Soufian, Mona},
  journal={International review of Financial analysis},
  volume={42},
  pages={199--210},
  year={2015},
  publisher={Elsevier}
}

@article{wegwarth2009smart,
  title={Smart strategies for doctors and doctors-in-training:
heuristics in medicine},
  author={Wegwarth, Odette and Gaissmaier, Wolfgang and Gigerenzer, Gerd},
  journal={Medical education},
  volume={43},
  number={8},
  pages={721--728},
  year={2009},
  publisher={Wiley Online Library}
}

@article{luan2011signal,
  title={A signal-detection analysis of fast-and-frugal trees.},
  author={Luan, Shenghua and Schooler, Lael J and Gigerenzer, Gerd},
  journal={Psychological Review},
  volume={118},
  number={2},
  pages={316},
  year={2011},
  publisher={American Psychological Association}
}

@article{jenny2013simple,
  title={Simple rules for detecting depression},
  author={Jenny, Mirjam A and Pachur, Thorsten and Williams, S Lloyd
and Becker, Eni and Margraf, J{\"u}rgen},
  journal={Journal of Applied Research in Memory and Cognition},
  volume={2},
  number={3},
  pages={149--157},
  year={2013},
  publisher={Elsevier}
}

@article{benjamini1995controlling,
  title={Controlling the false discovery rate: a practical and
powerful approach to multiple testing},
  author={Benjamini, Yoav and Hochberg, Yosef},
  journal={Journal of the Royal Statistical Society. Series B (Methodological)},
  pages={289--300},
  year={1995},
  publisher={JSTOR}
}

@inproceedings{romano2006exploring,
  title={Exploring methods for evaluating group differences on the
NSSE and other surveys: Are the t-test and Cohen’sd indices the most
appropriate choices},
  author={Romano, Jeanine and Kromrey, Jeffrey D and Coraggio, Jesse
and Skowronek, Jeff and Devine, Linda},
  booktitle={Annual Meeting of the Southern Association for
Institutional Research},
  year={2006}
}

@article{ostrand2005predicting,
  title={Predicting the location and number of faults in large
software systems},
  author={Ostrand, Thomas J and Weyuker, Elaine J and Bell, Robert M},
  journal={IEEE TSE},
  year={2005},
  publisher={IEEE}
}

@article{menzies2010defect,
  title={Defect prediction from static code features: current results,
limitations, new approaches},
  author={Menzies, Tim and Milton, Zach and Turhan, Burak and Cukic,
Bojan and Jiang, Yue and Bener, Ay{\c{s}}e},
  journal={Automated Software Engineering},
  volume={17},
  number={4},
  pages={375--407},
  year={2010},
  publisher={Springer}
}


@article{kirkpatrick1983optimization,
  title={Optimization by simulated annealing},
  author={Kirkpatrick, Scott and Gelatt, C Daniel and Vecchi, Mario P},
  journal={science},
  volume={220},
  number={4598},
  pages={671--680},
  year={1983},
  publisher={American Association for the Advancement of Science}
}
@book{goldberg2006genetic,
  title={Genetic algorithms},
  author={Goldberg, David E},
  year={2006},
  publisher={Pearson Education India}
}

@inproceedings{zimmermann2007predicting,
  title={Predicting defects for eclipse},
  author={Zimmermann, Thomas and Premraj, Rahul and Zeller, Andreas},
  booktitle={Proceedings of the Third International Workshop on
Predictor Models in Software Engineering},
  pages={9},
  year={2007},
  organization={IEEE Computer Society}
}

@article{nam2017heterogeneous,
  title={Heterogeneous defect prediction},
  author={Nam, Jaechang and Fu, Wei and Kim, Sunghun and Menzies, Tim
and Tan, Lin},
  journal={IEEE Transactions on Software Engineering},
  year={2017},
  publisher={IEEE}
}

@inproceedings{mende2010effort,
  title={Effort-aware defect prediction models},
  author={Mende, T. and Koschke, R.},
  booktitle={14th CSMR},
  pages={107--116},
  year={2010},
  organization={IEEE}
}

@INPROCEEDINGS{Kocaguneli13,
author={E. Kocaguneli and T. Zimmermann and C. Bird and N. Nagappan
and T. Menzies},
booktitle={2013 35th International Conference on Software Engineering (ICSE)},
title={Distributed development considered harmful?},
year={2013},
volume={},
number={},
pages={882-890},
keywords={distributed processing;software quality;Microsoft
products;Office 2010;arcane mathematical analysis;collocated
software;distributed development;distributed software;industrial
practitioners;software products;software
quality;Birds;Buildings;Dispersion;Measurement;Software
quality;Standards},
doi={10.1109/ICSE.2013.6606637},
ISSN={0270-5257},
month={May},}



@article{chen2018multi,
  title={MULTI: Multi-objective effort-aware just-in-time software
defect prediction},
  journal={Information and Software Technology},
  volume={93},
  pages={1--13},
  year={2018},
  publisher={Elsevier}
}

@article{chen2005finding,
  title={Finding the right data for software cost modeling},
  author={Chen, Zhihao and Menzies, Tim and Port, Daniel and Boehm, D},
  journal={IEEE software},
  volume={22},
  number={6},
  pages={38--46},
  year={2005},
  publisher={IEEE}
}

@article{monden2013assessing,
  title={Assessing the cost effectiveness of fault prediction in
acceptance testing},
  author={Monden, A. and Hayashi, T. and Shinoda, S. and
Shirai, K. and Yoshida, J. and Barker, M. and Matsumoto,
K.},
  journal={IEEE TSE},
  year={2013},
  publisher={IEEE}
}

@article{menzies2003data,
  title={Data mining for very busy people},
  author={Menzies, Tim and Hu, Ying},
  journal={Computer},
  volume={36},
  number={11},
  pages={22--29},
  year={2003},
  publisher={IEEE}
}



@inproceedings{jiang2013personalized,
  title={Personalized defect prediction},
  author={Jiang, Tian and Tan, Lin and Kim, Sunghun},
  booktitle={Proceedings of the 28th IEEE/ACM International Conference
on Automated Software Engineering},
  pages={279--289},
  year={2013},
  organization={IEEE}
}

@inproceedings{kim2007predicting,
  title={Predicting faults from cached history},
  author={Kim, Sunghun and Zimmermann, Thomas and Whitehead Jr, E
James and Zeller, Andreas},
  booktitle={Proceedings of the 29th International Conference on
Software Engineering},
  pages={489--498},
  year={2007},
  organization={IEEE}
}


@inproceedings{menzies2008implications,
  title={Implications of ceiling effects in defect predictors},
  author={Menzies, Tim and Turhan, Burak and Bener, Ayse and Gay,
Gregory and Cukic, Bojan and Jiang, Yue},
  booktitle={Proceedings of the 4th international workshop on
Predictor models in software engineering},
  pages={47--54},
  year={2008},
  organization={ACM}
}


@inproceedings{jing2014dictionary,
  title={Dictionary learning based software defect prediction},
  author={Jing, Xiao-Yuan and Ying, Shi and Zhang, Zhi-Wu and Wu,
Shan-Shan and Liu, Jin},
  booktitle={Proceedings of the 36th International Conference on
Software Engineering},
  pages={414--423},
  year={2014},
  organization={ACM}
}

@article{menzies2010defect,
  title={Defect prediction from static code features: current results,
limitations, new approaches},
  author={Menzies, Tim and Milton, Zach and Turhan, Burak and Cukic,
Bojan and Jiang, Yue and Bener, Ay{\c{s}}e},
  journal={Automated Software Engineering},
  volume={17},
  number={4},
  pages={375--407},
  year={2010},
  publisher={Springer}
}


@inproceedings{lee2011micro,
  title={Micro interaction metrics for defect prediction},
  author={Lee, Taek and Nam, Jaechang and Han, DongGyun and Kim,
Sunghun and In, Hoh Peter},
  booktitle={Proceedings of the 19th ACM SIGSOFT Symposium and the
13th European Conference on Foundations of Software Engineering},
  pages={311--321},
  year={2011},
  organization={ACM}
}


@inproceedings{moser2008comparative,
  title={A comparative analysis of the efficiency of change metrics
and static code attributes for defect prediction},
  author={Moser, Raimund and Pedrycz, Witold and Succi, Giancarlo},
  booktitle={Proceedings of the 30th International Conference on
Software Engineering},
  pages={181--190},
  year={2008},
  organization={ACM}
}

@inproceedings{nam2013transfer,
  title={Transfer defect learning},
  author={Nam, Jaechang and Pan, Sinno Jialin and Kim, Sunghun},
  booktitle={Proceedings of the 2013 International Conference on
Software Engineering},
  pages={382--391},
  year={2013},
  organization={IEEE}
}



@inproceedings{anvik2006should,
  title={Who should fix this bug?},
  author={Anvik, John and Hiew, Lyndon and Murphy, Gail C},
  booktitle={Proceedings of the 28th international conference on
Software engineering},
  pages={361--370},
  year={2006},
  organization={ACM}
}


@inproceedings{weiss2007long,
  title={How long will it take to fix this bug?},
  author={Weiss, Cathrin and Premraj, Rahul and Zimmermann, Thomas and
Zeller, Andreas},
  booktitle={Proceedings of the Fourth International Workshop on
Mining Software Repositories},
  pages={1},
  year={2007},
  organization={IEEE}
}

@inproceedings{fukushima2014empirical,
  title={An empirical study of just-in-time defect prediction using
cross-project models},
  author={Fukushima, Takafumi and Kamei, Yasutaka and McIntosh, Shane
and Yamashita, Kazuhiro and Ubayashi, Naoyasu},
  booktitle={Proceedings of the 11th Working Conference on Mining
Software Repositories},
  pages={172--181},
  year={2014},
  organization={ACM}
}

@inproceedings{sliwerski2005changes,
  title={When do changes induce fixes?},
  author={{\'S}liwerski, Jacek and Zimmermann, Thomas and Zeller, Andreas},
  booktitle={ACM sigsoft software engineering notes},
  volume={30},
  number={4},
  pages={1--5},
  year={2005},
  organization={ACM}
}

@inproceedings{shihab2012industrial,
  title={An industrial study on the risk of software changes},
  author={Shihab, Emad and Hassan, Ahmed E and Adams, Bram and Jiang,
Zhen Ming},
  booktitle={Proceedings of the ACM SIGSOFT 20th International
Symposium on the Foundations of Software Engineering},
  pages={62},
  year={2012},
  organization={ACM}
}



@book{halstead1977elements,
  title={Elements of software science},
  author={Halstead, Maurice Howard},
  volume={7},
  year={1977},
  publisher={Elsevier New York}
}


@article{khoshgoftaar2001modeling,
  title={Modeling software quality with},
  author={Khoshgoftaar, Taghi M and Allen, Edward B},
  journal={Recent Advances in Reliability and Quality Engineering},
  volume={2},
  pages={247},
  year={2001},
  publisher={World Scientific}
}

@article{khoshgoftaar2003software,
  title={Software quality classification modeling using the SPRINT
decision tree algorithm},
  author={Khoshgoftaar, Taghi M and Seliya, Naeem},
  journal={International Journal on Artificial Intelligence Tools},
  volume={12},
  number={03},
  pages={207--225},
  year={2003},
  publisher={World Scientific}
}

@article{khoshgoftaar2000balancing,
  title={Balancing misclassification rates in classification-tree
models of software quality},
  author={Khoshgoftaar, Taghi M and Yuan, Xiaojing and Allen, Edward B},
  journal={Empirical Software Engineering},
  volume={5},
  number={4},
  pages={313--330},
  year={2000},
  publisher={Springer}
}
@article{bergstra2012random,
  title={Random search for hyper-parameter optimization},
  author={Bergstra, James and Bengio, Yoshua},
  journal={Journal of Machine Learning Research},
  volume={13},
  number={Feb},
  pages={281--305},
  year={2012}
}

@inproceedings{abs-1807-11112,
  title={Is one hyperparameter optimizer enough?},
  author={Tu, Huy and Nair, Vivek},
  booktitle = {FSE SWAN},
  year={2018}
}

@article{fugrid16,
  author    = {W. Fu and
               V. Nair and
               T. Menzies},
  title     = {Why is Differential Evolution Better than Grid Search
for Tuning Defect
               Predictors?},
  journal   = {CoRR},
  volume    = {abs/1609.02613},
  year      = {2016},
}



@article{turhan2009relative,
  title={On the relative value of cross-company and within-company
data for defect prediction},
  author={Turhan, Burak and Menzies, Tim and Bener, Ay{\c{s}}e B and
Di Stefano, Justin},
  journal={Empirical Software Engineering},
  volume={14},
  number={5},
  pages={540--578},
  year={2009},
  publisher={Springer}
}

@inproceedings{nam2015heterogeneous,
  title={Heterogeneous Defect Prediction},
  author={Nam, Jaechang and Kim, Sunghun},
  booktitle={Proceedings of The European Software Engineering
Conference and the ACM SIGSOFT Symposium on the Foundations of
Software Engineering (ESEC/FSE 2015)},
  year={2015}
}

@article{ma2012transfer,
  title={Transfer learning for cross-company software defect prediction},
  author={Ma, Ying and Luo, Guangchun and Zeng, Xue and Chen, Aiguo},
  journal={Information and Software Technology},
  volume={54},
  number={3},
  pages={248--256},
  year={2012},
  publisher={Elsevier}
}

@inproceedings{zhang2014towards,
  title={Towards building a universal defect prediction model},
  author={Zhang, Feng and Mockus, Audris and Keivanloo, Iman and Zou, Ying},
  booktitle={Proceedings of the 11th Working Conference on Mining
Software Repositories},
  pages={182--191},
  year={2014},
  organization={ACM}
}




@inproceedings{Arisholm:2006,
  title={Predicting fault-prone components in a java legacy system},
  author={Arisholm, E. and Briand, L. C},
  booktitle={ESEM},
  year={2006},
  organization={ACM}
}

@inproceedings{nam2015clami,
  title={CLAMI: Defect Prediction on Unlabeled Datasets},
  author={Nam, Jaechang and Kim, Sunghun},
  booktitle={Proceedings of the 30th IEEE/ACM International Conference
on Automated Software Engineering (ASE 2015)},
  year={2015}
}


@inproceedings{kim2015remi,
  title={REMI: defect prediction for efficient API testing},
  author={Kim, M. and Nam, J. and Yeon, J. and Choi,
S. and Kim, S.},
  booktitle={FSE},
  year={2015},
  organization={ACM}
}


@article{wilkes1985memoirs,
  title={Memoirs of a Computer Pioneer},
  author={Wilkes, Maurice V},
  journal={Cambridge, Mass., London},
  year={1985}
}


@inproceedings{akiyama1971example,
  title={An example of software system debugging},
  author={Akiyama, Fumio},
  booktitle={IFIP Congress (1)},
  volume={71},
  pages={353--359},
  year={1971}
}


@inproceedings{yang2016defect,
  title={Defect Prediction on Unlabeled Datasets by Using Unsupervised
Clustering},
  author={Yang, Jun and Qian, Hongbing},
  booktitle={High Performance Computing and Communications; IEEE 14th
International Conference on Smart City; IEEE 2nd International
Conference on Data Science and Systems (HPCC/SmartCity/DSS), 2016 IEEE
18th International Conference on},
  pages={465--472},
  year={2016},
  organization={IEEE}
}

@article{Witten:2002,
 author = {Witten, Ian H. and Frank, Eibe},
 title = {Data Mining: Practical Machine Learning Tools and Techniques
with Java Implementations},
 journal = {SIGMOD Rec.},
 issue_date = {March 2002},
 volume = {31},
 number = {1},
 month = mar,
 year = {2002},
 issn = {0163-5808},
 pages = {76--77},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/507338.507355},
 doi = {10.1145/507338.507355},
 acmid = {507355},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{hall2009weka,
  title={The WEKA data mining software: an update},
  author={Hall, Mark and Frank, Eibe and Holmes, Geoffrey and
Pfahringer, Bernhard and Reutemann, Peter and Witten, Ian H},
  journal={ACM SIGKDD Explorations Newsletter},
  volume={11},
  number={1},
  pages={10--18},
  year={2009},
  publisher={ACM}
}


@incollection{wolpert2002supervised,
  title={The supervised learning no-free-lunch theorems},
  author={Wolpert, David H},
  booktitle={Soft Computing and Industry},
  pages={25--42},
  year={2002},
  publisher={Springer}
}


@article{kocaguneli2012exploiting,
  title={Exploiting the essential assumptions of analogy-based effort
estimation},
  author={Kocaguneli, Ekrem and Menzies, Tim and Bener, Ayse and
Keung, Jacky W},
  journal={IEEE Transactions on Software Engineering},
  volume={38},
  number={2},
  pages={425--438},
  year={2012},
  publisher={IEEE}
}

@inproceedings{yan2017file,
  title={File-level defect prediction: Unsupervised vs. supervised models},
  author={Yan, Meng and Fang, Yicheng and Lo, David and Xia, Xin and
Zhang, Xiaohong},
  booktitle={Empirical Software Engineering and Measurement (ESEM),
2017 ACM/IEEE International Symposium on},
  pages={344--353},
  year={2017},
  organization={IEEE}
}

@article{cohen1988statistical,
  title={Statistical power analysis for the behavioral sciences. 1988,
Hillsdale, NJ: L},
  author={Cohen, Jacob},
  journal={Lawrence Earlbaum Associates},
  volume={2},
  year={1988}
}

@article{chen19,
  title={Replication Can Improve Prior Results: A GitHub Study of Pull Request Acceptance},
  author={D. Chen and K. T. Stolee and T. Menzies},
  journal={CoRR},
  year={2019},
  volume={abs/1902.04060}
}


@inproceedings{yu2019terminator,
 author = {Yu, Zhe and Fahid, Fahmid and Menzies, Tim and Rothermel, Gregg and Patrick, Kyle and Cherian, Snehit},
 title = {TERMINATOR: Better Automated UI Test Case Prioritization},
 booktitle = {Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
 series = {ESEC/FSE 2019},
 year = {2019},
 isbn = {978-1-4503-5572-8},
 location = {Tallinn, Estonia},
 pages = {883--894},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/3338906.3340448},
 doi = {10.1145/3338906.3340448},
 acmid = {3340448},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated UI testing, test case prioritization, total recall},
} 

@ARTICLE{8883076,
author={Z. {Yu} and C. {Theisen} and L. {Williams} and T. {Menzies}},
journal={IEEE Transactions on Software Engineering},
title={Improving Vulnerability Inspection Efficiency Using Active Learning},
year={2019},
volume={},
number={},
pages={1-1},
keywords={Inspection;Software;Tools;Security;Predictive models;Error correction;NIST;Active learning;security;vulnerabilities;software engineering;error correction},
doi={10.1109/TSE.2019.2949275},
ISSN={},
month={},}

@inproceedings{yu2018total,
  title={Total recall, language processing, and software engineering},
  author={Yu, Zhe and Menzies, Tim},
  booktitle={Proceedings of the 4th ACM SIGSOFT International Workshop on NLP for Software Engineering},
  pages={10--13},
  year={2018},
  organization={ACM}
}

@article{fahid2019better,
  title={Better Technical Debt Detection via SURVEYing},
  author={Fahid, Fahmid M and Yu, Zhe and Menzies, Tim},
  journal={arXiv preprint arXiv:1905.08297},
  year={2019}
}

@article{yu2019searching,
  title={Searching for Better Test Case Prioritization Schemes: a Case Study of AI-assisted Systematic Literature Review},
  author={Yu, Zhe and Carver, Jeffrey C and Rothermel, Gregg and Menzies, Tim},
  journal={arXiv preprint arXiv:1909.07249},
  year={2019}
}

@Book{stephen,
  author = {Stephen H. Kan},
  title = {Metrics and Models in Software Quality Engineering}
},



@article{mittas13,
  author =	 {Nikolaos Mittas and Lefteris Angelis},
  title =	 {Ranking and Clustering Software Cost Estimation
                  Models through a Multiple Comparisons Algorithm},
  journal =	 {IEEE Trans. Software Eng.},
  volume =	 39,
  number =	 4,
  year =	 2013,
  pages =	 {537-551},
}

@INPROCEEDINGS{arcuri11,
author={Arcuri, A. and Briand, L.}, 
booktitle={ICSE'11},
title={A practical guide for using statistical tests to assess randomized algorithms in software engineering}, 
year={2011}, 
pages={1-10}}


@ARTICLE{basil, 
author={V. R. Basili and L. C. Briand and W. L. Melo}, 
journal={IEEE Transactions on Software Engineering}, 
title={A validation of object-oriented design metrics as quality indicators}, 
year={1996}, 
volume={22}, 
number={10}, 
pages={751-761}, 
keywords={object-oriented methods;software metrics;software quality;software maintenance;information systems;object-oriented languages;C language;object-oriented design metrics;software quality indicators;fault-prone classes;class maintenance changes;metric validation;information management systems;sequential life cycle model;object oriented analysis;C++ programming language;data set;software development;Programming;Object oriented modeling;Software systems;Software maintenance;Design methodology;Computer languages;Predictive models;Resource management;System testing;Costs}, 
doi={10.1109/32.544352}, 
ISSN={0098-5589}, 
month={Oct},},

@ARTICLE{Subramanyam, 
author={R. Subramanyam and M. S. Krishnan}, 
journal={IEEE Transactions on Software Engineering}, 
title={Empirical analysis of CK metrics for object-oriented design complexity: implications for software defects}, 
year={2003}, 
volume={29}, 
number={4}, 
pages={297-310}, 
keywords={object-oriented programming;software metrics;program debugging;CK metric analysis;object-oriented design complexity;software defects;software development;software quality;OO design complexity metrics;software defect determination;C++;Java;Software design;Software quality;Application software;Programming;Productivity;Computer industry;Industrial control;Computer languages;Size control;Java}, 
doi={10.1109/TSE.2003.1191795}, 
ISSN={0098-5589}, 
month={April},},

@inproceedings{Zimmermann:2007:PDE:1268984.1269057,
 author = {Zimmermann, Thomas and Premraj, Rahul and Zeller, Andreas},
 title = {Predicting Defects for Eclipse},
 booktitle = {Proceedings of the Third International Workshop on Predictor Models in Software Engineering},
 series = {PROMISE '07},
 year = {2007},
 isbn = {0-7695-2954-2},
 pages = {9--},
 url = {http://dx.doi.org/10.1109/PROMISE.2007.10},
 doi = {10.1109/PROMISE.2007.10},
 acmid = {1269057},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
},

@ARTICLE{timm, 
author={T. Menzies and J. Greenwald and A. Frank}, 
journal={IEEE Transactions on Software Engineering}, 
title={Data Mining Static Code Attributes to Learn Defect Predictors}, 
year={2007}, 
volume={33}, 
number={1}, 
pages={2-13}, 
keywords={data mining;learning (artificial intelligence);program diagnostics;program testing;software quality;data mining;static code attributes;defect predictor learning;McCabes versus Halstead;lines of code counts;resource-bound exploration;Data mining;Bayesian methods;Artificial intelligence;Software testing;System testing;Learning systems;Art;Software quality;Software systems;Financial management;Data mining detect prediction;McCabe;Halstead;artifical intelligence;empirical;naive Bayes.}, 
doi={10.1109/TSE.2007.256941}, 
ISSN={0098-5589}, 
month={Jan},},


@ARTICLE{graves, 
author={T. L. Graves and A. F. Karr and J. S. Marron and H. Siy}, 
journal={IEEE Transactions on Software Engineering}, 
title={Predicting fault incidence using software change history}, 
year={2000}, 
volume={26}, 
number={7}, 
pages={653-661}, 
keywords={software maintenance;software metrics;software fault tolerance;management of change;fault incidence;software change history;change management data;change history;fault potential;code decay;metrics;statistical analysis;History;Predictive models;Software systems;Aging;Time measurement;Software measurement;Length measurement;Software development management;Statistical analysis;Degradation}, 
doi={10.1109/32.859533}, 
ISSN={0098-5589}, 
month={July},},

@ARTICLE{Ostrand, 
author={T. J. Ostrand and E. J. Weyuker and R. M. Bell}, 
journal={IEEE Transactions on Software Engineering}, 
title={Predicting the location and number of faults in large software systems}, 
year={2005}, 
volume={31}, 
number={4}, 
pages={340-355}, 
keywords={program testing;software fault tolerance;binomial distribution;regression analysis;large software systems;binomial regression model;software fault prediction;software testing;Software systems;Predictive models;Fault diagnosis;System testing;History;Fault detection;Software testing;Personnel;Resource management;Sorting;Index Terms- Software faults;fault-prone;prediction;regression model;empirical study;software testing.}, 
doi={10.1109/TSE.2005.49}, 
ISSN={0098-5589}, 
month={April},},

@inproceedings{Knab,
 author = {Knab, Patrick and Pinzger, Martin and Bernstein, Abraham},
 title = {Predicting Defect Densities in Source Code Files with Decision Tree Learners},
 booktitle = {Proceedings of the 2006 International Workshop on Mining Software Repositories},
 series = {MSR '06},
 year = {2006},
 isbn = {1-59593-397-2},
 location = {Shanghai, China},
 pages = {119--125},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/1137983.1138012},
 doi = {10.1145/1137983.1138012},
 acmid = {1138012},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data mining, decision tree learner, defect prediction},
},

@inproceedings{SerdarBiçer,
 author = {Bi\c{c}er, Serdar and Bener, Ay\c{s}e Ba\c{s}ar and \c{C}a\u{g}layan, Bora},
 title = {Defect Prediction Using Social Network Analysis on Issue Repositories},
 booktitle = {Proceedings of the 2011 International Conference on Software and Systems Process},
 series = {ICSSP '11},
 year = {2011},
 isbn = {978-1-4503-0730-7},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {63--71},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1987875.1987888},
 doi = {10.1145/1987875.1987888},
 acmid = {1987888},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {defect prediction, developer communication, network metrics, social networks},
},

@inproceedings{fengzhang,
 author = {Zhang, Feng and Mockus, Audris and Keivanloo, Iman and Zou, Ying},
 title = {Towards Building a Universal Defect Prediction Model},
 booktitle = {Proceedings of the 11th Working Conference on Mining Software Repositories},
 series = {MSR 2014},
 year = {2014},
 isbn = {978-1-4503-2863-0},
 location = {Hyderabad, India},
 pages = {182--191},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2597073.2597078},
 doi = {10.1145/2597073.2597078},
 acmid = {2597078},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Universal defect prediction model, bug, context factors, defect, defect prediction, large scale, quality, rank transformation},
},

@misc{antoniolima,
    title={Coding Together at Scale: GitHub as a Collaborative Social Network},
    author={Antonio Lima and Luca Rossi and Mirco Musolesi},
    year={2014},
    eprint={1407.2535},
    archivePrefix={arXiv},
    primaryClass={cs.SI}
},

@article{gregmadey,
author = {Madey, Greg and Freeh, Vincent and Tynan, Renee},
year = {1806},
month = {01},
pages = {},
title = {The Open source software development phenomenon: An analysis based on social network theory},
journal = {Americas Conference on Information Systems}
},

@INPROCEEDINGS{devandu, 
author={C. Bird and N. Nagappan and H. Gall and B. Murphy and P. Devanbu}, 
booktitle={2009 20th International Symposium on Software Reliability Engineering}, 
title={Putting It All Together: Using Socio-technical Networks to Predict Failures}, 
year={2009}, 
volume={}, 
number={}, 
pages={109-119}, 
keywords={human factors;social sciences;software development management;software fault tolerance;software quality;socio-technical network;social factor;development organization;software quality;task assignment;dependency structure;individual software components fault proneness;software component network property;Eclipse development environment;failure prone components prediction;Predictive models;History;Software quality;Costs;Software systems;Software reliability;Reliability engineering;Social factors;Software performance;NIST;social networks;empirical studies;bug prediction}, 
doi={10.1109/ISSRE.2009.17}, 
ISSN={1071-9458}, 
month={Nov},},


@inproceedings{laurie1,
 author = {Meneely, Andrew and Williams, Laurie and Snipes, Will and Osborne, Jason},
 title = {Predicting Failures with Developer Networks and Social Network Analysis},
 booktitle = {Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {SIGSOFT '08/FSE-16},
 year = {2008},
 isbn = {978-1-59593-995-1},
 location = {Atlanta, Georgia},
 pages = {13--23},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1453101.1453106},
 doi = {10.1145/1453101.1453106},
 acmid = {1453106},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {developer network, failure prediction, logistic regression, negative binomial regression, social network analysis},
},

@inproceedings{TimoWolf,
 author = {Wolf, Timo and Schroter, Adrian and Damian, Daniela and Nguyen, Thanh},
 title = {Predicting Build Failures Using Social Network Analysis on Developer Communication},
 booktitle = {Proceedings of the 31st International Conference on Software Engineering},
 series = {ICSE '09},
 year = {2009},
 isbn = {978-1-4244-3453-4},
 pages = {1--11},
 numpages = {11},
 url = {http://dx.doi.org/10.1109/ICSE.2009.5070503},
 doi = {10.1109/ICSE.2009.5070503},
 acmid = {1555017},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
},

@inproceedings{Pamela,
 author = {Bhattacharya, Pamela and Iliofotou, Marios and Neamtiu, Iulian and Faloutsos, Michalis},
 title = {Graph-based Analysis and Prediction for Software Evolution},
 booktitle = {Proceedings of the 34th International Conference on Software Engineering},
 series = {ICSE '12},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {419--429},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337273},
 acmid = {2337273},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
},

@Article{bell1,
author="Weyuker, Elaine J.
and Ostrand, Thomas J.
and Bell, Robert M.",
title="Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models",
journal="Empirical Software Engineering",
year="2008",
month="Oct",
day="01",
volume="13",
number="5",
pages="539--559",
abstract="Fault prediction by negative binomial regression models is shown to be effective for four large production software systems from industry. A model developed originally with data from systems with regularly scheduled releases was successfully adapted to a system without releases to identify 20{\%} of that system's files that contained 75{\%} of the faults. A model with a pre-specified set of variables derived from earlier research was applied to three additional systems, and proved capable of identifying averages of 81, 94 and 76{\%} of the faults in those systems. A primary focus of this paper is to investigate the impact on predictive accuracy of using data about the number of developers who access individual code units. For each system, including the cumulative number of developers who had previously modified a file yielded no more than a modest improvement in predictive accuracy. We conclude that while many factors can ``spoil the broth'' (lead to the release of software with too many defects), the number of developers is not a major influence.",
issn="1573-7616",
doi="10.1007/s10664-008-9082-8",
url="https://doi.org/10.1007/s10664-008-9082-8"
},

@Article{bell2,
author="Bell, Robert M.
and Ostrand, Thomas J.
and Weyuker, Elaine J.",
title="The limited impact of individual developer data on software defect prediction",
journal="Empirical Software Engineering",
year="2013",
month="Jun",
day="01",
volume="18",
number="3",
pages="478--505",
abstract="Previous research has provided evidence that a combination of static code metrics and software history metrics can be used to predict with surprising success which files in the next release of a large system will have the largest numbers of defects. In contrast, very little research exists to indicate whether information about individual developers can profitably be used to improve predictions. We investigate whether files in a large system that are modified by an individual developer consistently contain either more or fewer faults than the average of all files in the system. The goal of the investigation is to determine whether information about which particular developer modified a file is able to improve defect predictions. We also extend earlier research evaluating use of counts of the number of developers who modified a file as predictors of the file's future faultiness. We analyze change reports filed for three large systems, each containing 18 releases, with a combined total of nearly 4 million LOC and over 11,000 files. A buggy file ratio is defined for programmers, measuring the proportion of faulty files in Release R out of all files modified by the programmer in Release R-1. We assess the consistency of the buggy file ratio across releases for individual programmers both visually and within the context of a fault prediction model. Buggy file ratios for individual programmers often varied widely across all the releases that they participated in. A prediction model that takes account of the history of faulty files that were changed by individual developers shows improvement over the standard negative binomial model of less than 0.13{\%} according to one measure, and no improvement at all according to another measure. In contrast, augmenting a standard model with counts of cumulative developers changing files in prior releases produced up to a 2{\%} improvement in the percentage of faults detected in the top 20{\%} of predicted faulty files. The cumulative number of developers interacting with a file can be a useful variable for defect prediction. However, the study indicates that adding information to a model about which particular developer modified a file is not likely to improve defect predictions.",
issn="1573-7616",
doi="10.1007/s10664-011-9178-4",
url="https://doi.org/10.1007/s10664-011-9178-4"
},

@inproceedings{bell3,
 author = {Ostrand, Thomas J. and Weyuker, Elaine J. and Bell, Robert M.},
 title = {Programmer-based Fault Prediction},
 booktitle = {Proceedings of the 6th International Conference on Predictive Models in Software Engineering},
 series = {PROMISE '10},
 year = {2010},
 isbn = {978-1-4503-0404-7},
 location = {Timi\şoara, Romania},
 pages = {19:1--19:10},
 articleno = {19},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1868328.1868357},
 doi = {10.1145/1868328.1868357},
 acmid = {1868357},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {bug ratio, empirical study, fault-prone, prediction, regression model, software faults},
},

@inproceedings{perils,
 author = {Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M. and Damian, Daniela},
 title = {The Promises and Perils of Mining GitHub},
 booktitle = {Proceedings of the 11th Working Conference on Mining Software Repositories},
 series = {MSR 2014},
 year = {2014},
 isbn = {978-1-4503-2863-0},
 location = {Hyderabad, India},
 pages = {92--101},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2597073.2597074},
 doi = {10.1145/2597073.2597074},
 acmid = {2597074},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Mining software repositories, bias, code reviews, git, github},
},

@Article{curating,
author="Munaiah, Nuthan
and Kroh, Steven
and Cabrey, Craig
and Nagappan, Meiyappan",
title="Curating GitHub for engineered software projects",
journal="Empirical Software Engineering",
year="2017",
month="Dec",
day="01",
volume="22",
number="6",
pages="3219--3253",
abstract="Software forges like GitHub host millions of repositories. Software engineering researchers have been able to take advantage of such a large corpora of potential study subjects with the help of tools like GHTorrent and Boa. However, the simplicity in querying comes with a caveat: there are limited means of separating the signal (e.g. repositories containing engineered software projects) from the noise (e.g. repositories containing home work assignments). The proportion of noise in a random sample of repositories could skew the study and may lead to researchers reaching unrealistic, potentially inaccurate, conclusions. We argue that it is imperative to have the ability to sieve out the noise in such large repository forges. We propose a framework, and present a reference implementation of the framework as a tool called reaper, to enable researchers to select GitHub repositories that contain evidence of an engineered software project. We identify software engineering practices (called dimensions) and propose means for validating their existence in a GitHub repository. We used reaper to measure the dimensions of 1,857,423 GitHub repositories. We then used manually classified data sets of repositories to train classifiers capable of predicting if a given GitHub repository contains an engineered software project. The performance of the classifiers was evaluated using a set of 200 repositories with known ground truth classification. We also compared the performance of the classifiers to other approaches to classification (e.g. number of GitHub Stargazers) and found our classifiers to outperform existing approaches. We found stargazers-based classifier (with 10 as the threshold for number of stargazers) to exhibit high precision (97{\%}) but an inversely proportional recall (32{\%}). On the other hand, our best classifier exhibited a high precision (82{\%}) and a high recall (86{\%}). The stargazer-based criteria offers precision but fails to recall a significant portion of the population.",
issn="1573-7616",
doi="10.1007/s10664-017-9512-6",
url="https://doi.org/10.1007/s10664-017-9512-6"
},

@article{Agrawal_2018,
   title={We don’t need another hero?},
   ISBN={9781450356596},
   url={http://dx.doi.org/10.1145/3183519.3183549},
   DOI={10.1145/3183519.3183549},
   journal={Proceedings of the 40th International Conference on Software Engineering Software Engineering in Practice - ICSE-SEIP  ’18},
   publisher={ACM Press},
   author={Agrawal, Amritanshu and Rahman, Akond and Krishna, Rahul and Sobran, Alexander and Menzies, Tim},
   year={2018}
},


@INPROCEEDINGS{borges, 
author={H. Borges and A. Hora and M. T. Valente}, 
booktitle={2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
title={Understanding the Factors That Impact the Popularity of GitHub Repositories}, 
year={2016}, 
volume={}, 
number={}, 
pages={334-344}, 
keywords={public domain software;software reviews;source code (software);time series;GitHub Repositories;open source developers;software acceptance;software system popularity;open source software;stargazers button;GitHub projects;programming language;project popularity;time series;software market;Software;Libraries;Organizations;Documentation;HTML;Java;GitHub;Software Popularity;Open Source software;Social coding}, 
doi={10.1109/ICSME.2016.31}, 
ISSN={}, 
month={Oct},}

@article{NIST,
author = {Tassey and Gregory},
year = {2002},
month = {05},
pages = {},
title = {The Economic Impacts of Inadequate Infrastructure for Software Testing}
}

@incollection{Boehm,
 author = {Boehm, Barry W.},
 chapter = {Software Engineering Economics},
 title = {Software Pioneers},
 editor = {Broy, Manfred and Denert, Ernst},
 year = {2002},
 isbn = {3-540-43081-4},
 pages = {641--686},
 numpages = {46},
 url = {http://dl.acm.org/citation.cfm?id=944331.944370},
 acmid = {944370},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {computer programming costs, cost models, management decision aids, software cost estimation, software economics, software engineering, software management},
}

@inproceedings{Arisholm:2006:PFC:1159733.1159738,
 author = {Arisholm, Erik and Briand, Lionel C.},
 title = {Predicting Fault-prone Components in a Java Legacy System},
 booktitle = {Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering},
 series = {ISESE '06},
 year = {2006},
 isbn = {1-59593-218-6},
 location = {Rio de Janeiro, Brazil},
 pages = {8--17},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1159733.1159738},
 doi = {10.1145/1159733.1159738},
 acmid = {1159738},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Bernstein2007ImprovingDP,
  title={Improving defect prediction using temporal features and non linear models},
  author={Abraham Bernstein and Jayalath Ekanayake and Martin Pinzger},
  booktitle={IWPSE},
  year={2007}
}

@inproceedings{Denaro:2002:EEF:581339.581371,
 author = {Denaro, Giovanni and Pezz\`{e}, Mauro},
 title = {An Empirical Evaluation of Fault-proneness Models},
 booktitle = {Proceedings of the 24th International Conference on Software Engineering},
 series = {ICSE '02},
 year = {2002},
 isbn = {1-58113-472-X},
 location = {Orlando, Florida},
 pages = {241--251},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/581339.581371},
 doi = {10.1145/581339.581371},
 acmid = {581371},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cross-validation, fault-proneness models, logistic regression, principal component analysis, software faultiness, software metrics, software process, testing process},
} 

@inproceedings{Nagappan:2005:URC:1062455.1062514,
 author = {Nagappan, Nachiappan and Ball, Thomas},
 title = {Use of Relative Code Churn Measures to Predict System Defect Density},
 booktitle = {Proceedings of the 27th International Conference on Software Engineering},
 series = {ICSE '05},
 year = {2005},
 isbn = {1-58113-963-2},
 location = {St. Louis, MO, USA},
 pages = {284--292},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1062455.1062514},
 doi = {10.1145/1062455.1062514},
 acmid = {1062514},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {defect density, fault-proneness, multiple regression, principal component analysis, relative code churn},
} 

@inproceedings{Ostrand:2005:LF:1095242.1095262,
 author = {Ostrand, Thomas J. and Weyuker, Elaine J. and Bell, Robert M.},
 title = {Locating Where Faults Will Be},
 booktitle = {Proceedings of the 2005 Conference on Diversity in Computing},
 series = {TAPIA '05},
 year = {2005},
 isbn = {1-59593-257-7},
 location = {Albuquerque, New Mexico, USA},
 pages = {48--50},
 numpages = {3},
 url = {http://doi.acm.org/10.1145/1095242.1095262},
 doi = {10.1145/1095242.1095262},
 acmid = {1095262},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {empirical study, fault-prone, prediction, regression model, software faults, software testing},
} 

@ARTICLE{Acuna, 
author={S. T. Acuna and N. Juristo and A. M. Moreno}, 
journal={IEEE Software}, 
title={Emphasizing human capabilities in software development}, 
year={2006}, 
volume={23}, 
number={2}, 
pages={94-101}, 
keywords={human resource management;software development management;small-to-medium enterprises;software houses;software development;human resources management;software organization;human capability-based procedure;personnel development;occupational psychologist;small and medium-sized enterprise;Humans;Programming;Psychology;Software development management;Standards development;Software testing;Refining;Software standards;Risk management;Resource management;human capabilities;software roles;person-role fit}, 
doi={10.1109/MS.2006.47}, 
ISSN={0740-7459}, 
month={March},}

@book{Constantine,
 author = {Constantine, Larry},
 title = {The  Peopleware Papers: Notes on the Human Side of Programming},
 year = {2001},
 isbn = {0130601233},
 edition = {2nd},
 publisher = {Prentice Hall Professional Technical Reference},
} 

@article{Solingen,
author = {Solingen, Rini and Berghout, Egon and Kusters, Rob and Trienekens, Jos},
year = {2000},
month = {11},
pages = {965-971},
title = {From process improvement to people improvement: Enabling learning in software development},
volume = {42},
journal = {Information and Software Technology},
doi = {10.1016/S0950-5849(00)00148-8}
}

@inproceedings{Whitehead:2007:CSE:1253532.1254720,
 author = {Whitehead, Jim},
 title = {Collaboration in Software Engineering: A Roadmap},
 booktitle = {2007 Future of Software Engineering},
 series = {FOSE '07},
 year = {2007},
 isbn = {0-7695-2829-5},
 pages = {214--225},
 numpages = {12},
 url = {https://doi.org/10.1109/FOSE.2007.4},
 doi = {10.1109/FOSE.2007.4},
 acmid = {1254720},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@article{Shukla,
author = {V. Shukla, Shilpa and Redmiles, David},
year = {1996},
month = {12},
pages = {},
title = {Collaborative Learning in a Software Bug-Tracking Scenario}
}
@inproceedings{Grinter:1999:SAP:295665.295668,
 author = {Grinter, Rebecca E.},
 title = {Systems Architecture: Product Designing and Social Engineering},
 booktitle = {Proceedings of the International Joint Conference on Work Activities Coordination and Collaboration},
 series = {WACC '99},
 year = {1999},
 isbn = {1-58113-070-8},
 location = {San Francisco, California, USA},
 pages = {11--18},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/295665.295668},
 doi = {10.1145/295665.295668},
 acmid = {295668},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {coordination and collaboration, empirical studies of design and development, grounded theory, systems architecture},
} 

@ARTICLE{Ohlsson, 
author={N. Ohlsson and H. Alberg}, 
journal={IEEE Transactions on Software Engineering}, 
title={Predicting fault-prone software modules in telephone switches}, 
year={1996}, 
volume={22}, 
number={12}, 
pages={886-894}, 
keywords={telephony;telecommunication computing;software fault tolerance;software metrics;statistical analysis;program testing;diagrams;electronic switching systems;fault-prone software module prediction;telephone switches;Ericsson Telecom AB;design metrics;function test failure reports;ERIMET tool;design documents;prediction model;design measures;performance;Alberg diagram;historical data;linear regression;software reliability;Telephony;Predictive models;Fault diagnosis;Switches;Telecommunication switching;Software testing;Data analysis;Size measurement;Linear regression;Phase measurement}, 
doi={10.1109/32.553637}, 
ISSN={0098-5589}, 
month={Dec},}

@inproceedings{Moser:2008:CAE:1368088.1368114,
 author = {Moser, Raimund and Pedrycz, Witold and Succi, Giancarlo},
 title = {A Comparative Analysis of the Efficiency of Change Metrics and Static Code Attributes for Defect Prediction},
 booktitle = {Proceedings of the 30th International Conference on Software Engineering},
 series = {ICSE '08},
 year = {2008},
 isbn = {978-1-60558-079-1},
 location = {Leipzig, Germany},
 pages = {181--190},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1368088.1368114},
 doi = {10.1145/1368088.1368114},
 acmid = {1368114},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cost-sensitive classification, defect prediction, software metrics},
}

@INPROCEEDINGS{4814164, 
author={T. Zimmermann and N. Nagappan}, 
booktitle={2008 ACM/IEEE 30th International Conference on Software Engineering}, 
title={Predicting defects using network analysis on dependency graphs}, 
year={2008}, 
volume={}, 
number={}, 
pages={531-540}, 
keywords={software metrics;software quality;defects prediction;network analysis;dependency graphs;software development;quality assurance;resources allocation;code complexity metrics;central program units;Windows developers;Quality management;Resource management;Network servers;Quality assurance;Costs;Predictive models;Software engineering;Software measurement;Engineering management;Permission;defect prediction;dependency graph;network analysis;windows server 2003}, 
doi={10.1145/1368088.1368161}, 
ISSN={0270-5257}, 
month={May},}

@inproceedings{Goeminne,
author = {Goeminne, Mathieu and Mens, Tom},
year = {2011},
month = {01},
pages = {74-82},
title = {Evidence for the Pareto principle in Open Source Software Activity},
volume = {708},
journal = {CEUR Workshop Proceedings}
}

@inproceedings{yamashita2015revisiting,
  title={Revisiting the applicability of the pareto principle to core development teams in open source software projects},
  author={Yamashita, Kazuhiro and McIntosh, Shane and Kamei, Yasutaka and Hassan, Ahmed E and Ubayashi, Naoyasu},
  booktitle={Proceedings of the 14th International Workshop on Principles of Software Evolution},
  pages={46--55},
  year={2015},
  organization={ACM}
}

@inproceedings{robles2009evolution,
  title={Evolution of the core team of developers in libre software projects},
  author={Robles, Gregorio and Gonzalez-Barahona, Jesus M and Herraiz, Israel},
  booktitle={Mining Software Repositories, 2009. MSR'09. 6th IEEE International Working Conference on},
  pages={167--170},
  year={2009},
  organization={IEEE}
}
@inproceedings{torres2011analysis,
  title={Analysis of the core team role in open source communities},
  author={Torres, MR Martinez and Toral, SL and Perales, M and Barrero, F},
  booktitle={Complex, Intelligent and Software Intensive Systems (CISIS), 2011 International Conference on},
  pages={109--114},
  year={2011},
  organization={IEEE}
}
@inproceedings{goeminne2011evidence,
  title={Evidence for the pareto principle in open source software activity},
  author={Goeminne, Mathieu and Mens, Tom},
  booktitle={the Joint Porceedings of the 1st International workshop on Model Driven Software Maintenance and 5th International Workshop on Software Quality and Maintainability},
  pages={74--82},
  year={2011}
}
@article{wood2005multiview,
  title={Multiview as social informatics in action: past, present and future},
  author={Wood-Harper, Trevor and Wood, Bob},
  journal={Information Technology \& People},
  volume={18},
  number={1},
  pages={26--32},
  year={2005},
  publisher={Emerald Group Publishing Limited}
}
@inproceedings{boehm2006view,
  title={A view of 20th and 21st century software engineering},
  author={Boehm, Barry},
  booktitle={Proceedings of the 28th international conference on Software engineering},
  pages={12--29},
  year={2006},
  organization={ACM}
}
@article{hislop2002integrating,
  title={Integrating agile practices into software engineering courses},
  author={Hislop, Gregory W and Lutz, Michael J and Naveda, J Fernando and McCracken, W Michael and Mead, Nancy R and Williams, Laurie A},
  journal={Computer science education},
  volume={12},
  number={3},
  pages={169--185},
  year={2002},
  publisher={Taylor \& Francis}
}
@article{morcovcomplex,
  title={Complex IT Projects in Education: The Challenge},
  author={Morcov, Stefan},
  year={2012},
  journal={International Journal of Computer Science Research and Application},
  volume={2},
  pages={115--125},
}
@inproceedings{bier2011online,
  title={An online learning approach to information systems security education},
  author={Bier, Norman and Lovett, Marsha and Seacord, Robert},
  booktitle={Proceedings of the 15th Colloquium for Information Systems Security Education},
  year={2011}
}

@article{cosentino2017systematic,
  title={A Systematic Mapping Study of Software Development With GitHub},
  author={Cosentino, Valerio and Izquierdo, Javier L C{\'a}novas and Cabot, Jordi},
  journal={IEEE Access},
  volume={5},
  pages={7173--7192},
  year={2017},
  publisher={IEEE}
}

@inproceedings{dias2016does,
  title={How Does the Shift to GitHub Impact Project Collaboration?},
  author={Dias, Luiz Felipe and Steinmacher, Igor and Pinto, Gustavo and da Costa, Daniel Alencar and Gerosa, Marco},
  booktitle={Software Maintenance and Evolution (ICSME), 2016 IEEE International Conference on},
  pages={473--477},
  year={2016},
  organization={IEEE}
}

@article{Peterson,
author = {Peterson, Kevin},
year = {2013},
month = {12},
pages = {},
title = {The GitHub Open Source Development Process}
}

@article{KrishnamurthyS,
	author = {Sandeep Krishnamurthy},
	title = {Cave or community? An empirical examination of 100 mature open source projects (originally published in Volume 7, Number 6, June 2002)},
	journal = {First Monday},
	volume = {0},
	number = {0},
	year = {2005},
	keywords = {},
	issn = {13960466},	doi = {10.5210/fm.v0i0.1477},
	url = {https://firstmonday.org/ojs/index.php/fm/article/view/1477}
}

@inproceedings{gautam2017empirical,
  title={An empirical study of activity, popularity, size, testing, and stability in continuous integration},
  author={Gautam, Aakash and Vishwasrao, Saket and Servant, Francisco},
  booktitle={Proceedings of the 14th International Conference on Mining Software Repositories},
  pages={495--498},
  year={2017},
  organization={IEEE Press}
}

@article{Otero_2009,
author = {Otero, Luis and Centeno, Grisselle and Ruiz-Torres, Alex and E. Otero, Carlos},
year = {2009},
month = {05},
pages = {1333-1339},
title = {A systematic approach for resource allocation in software projects},
volume = {56},
journal = {Computers & Industrial Engineering},
doi = {10.1016/j.cie.2008.08.002}
}

@inproceedings{Yiftachel:2006,
 author = {Yiftachel, Peleg and Peled, Dan and Hadar, Irit and Goldwasser, Dan},
 title = {Resource Allocation Among Development Phases: An Economic Approach},
 booktitle = {Proceedings of the 2006 International Workshop on Economics Driven Software Engineering Research},
 series = {EDSER '06},
 year = {2006},
 isbn = {1-59593-396-4},
 location = {Shanghai, China},
 pages = {43--48},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/1139113.1139124},
 doi = {10.1145/1139113.1139124},
 acmid = {1139124},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {software development phases, software production function, software quality, software resource allocation},
}

@ARTICLE{Agile_software_development, 
author={A. Cockburn and J. Highsmith}, 
journal={Computer}, 
title={Agile software development, the people factor}, 
year={2001}, 
volume={34}, 
number={11}, 
pages={131-133}, 
keywords={software development management;human factors;agile software development;people factor;talents;teams;user experts;individual competence;agile organizations;agile ecosystems;Programming;Project management;Humans;Feedback;Chaotic communication;Software development management;Technology management;World Wide Web;Problem-solving;Collaborative work}, 
doi={10.1109/2.963450}, 
ISSN={0018-9162}, 
month={Nov},}

@article{Kraut:1995:CSD:203330.203345,
 author = {Kraut, Robert E. and Streeter, Lynn A.},
 title = {Coordination in Software Development},
 journal = {Commun. ACM},
 issue_date = {March 1995},
 volume = {38},
 number = {3},
 month = mar,
 year = {1995},
 issn = {0001-0782},
 pages = {69--81},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/203330.203345},
 doi = {10.1145/203330.203345},
 acmid = {203345},
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@ARTICLE{1205177, 
author={J. D. Herbsleb and A. Mockus}, 
journal={IEEE Transactions on Software Engineering}, 
title={An empirical study of speed and communication in globally distributed software development}, 
year={2003}, 
volume={29}, 
number={6}, 
pages={481-494}, 
keywords={software development management;management of change;social aspects of automation;globally distributed software development;technology companies;development cycle time;source code change management system;survey data;calendar time;distributed social networks;same-site social networks;collaboration technology;speed;communication;Programming;Collaborative work;Social network services;Frequency;Software development management;Delay effects;Calendars;Data analysis;Testing;Collaborative software}, 
doi={10.1109/TSE.2003.1205177}, 
ISSN={0098-5589}, 
month={June},}

@book{Adzic:2011:SES:2031459,
 author = {Adzic, Gojko},
 title = {Specification by Example: How Successful Teams Deliver the Right Software},
 year = {2011},
 isbn = {1617290084, 9781617290084},
 edition = {1st},
 publisher = {Manning Publications Co.},
 address = {Greenwich, CT, USA},
}

@inproceedings{Abreu:2009:DCF:1595808.1595835,
 author = {Abreu, Roberto and Premraj, Rahul},
 title = {How Developer Communication Frequency Relates to Bug Introducing Changes},
 booktitle = {Proceedings of the Joint International and Annual ERCIM Workshops on Principles of Software Evolution (IWPSE) and Software Evolution (Evol) Workshops},
 series = {IWPSE-Evol '09},
 year = {2009},
 isbn = {978-1-60558-678-6},
 location = {Amsterdam, The Netherlands},
 pages = {153--158},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/1595808.1595835},
 doi = {10.1145/1595808.1595835},
 acmid = {1595835},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {developer communication, mailing lists, social network analysis, software quality},
} 

@article{TESCH2009657,
title = "User and developer common knowledge: Effect on the success of information system development projects",
journal = "International Journal of Project Management",
volume = "27",
number = "7",
pages = "657 - 664",
year = "2009",
issn = "0263-7863",
doi = "https://doi.org/10.1016/j.ijproman.2009.01.002",
url = "http://www.sciencedirect.com/science/article/pii/S0263786309000039",
author = "Debbie Tesch and Marion G. Sobol and Gary Klein and James J. Jiang",
keywords = "Project management, System development, Domain knowledge, Collaboration, Knowledge redundancy"
}

@inproceedings{Girba,
author = {Girba, T and Kuhn, A and Seeberger, M and Ducasse, Stéphane},
year = {2005},
month = {10},
pages = {113- 122},
title = {How developers drive software evolution},
volume = {2005},
isbn = {0-7695-2349-8},
journal = {International Workshop on Principles of Software Evolution (IWPSE)},
doi = {10.1109/IWPSE.2005.21}
}

@ARTICLE{841783, 
author={T. C. Lethbridge}, 
journal={Computer}, 
title={What knowledge is important to a software professional?}, 
year={2000}, 
volume={33}, 
number={5}, 
pages={44-50}, 
keywords={software engineering;training;professional aspects;personnel;software professional;licensing requirements;educational curricula;training programs;survey;job functions;careers;Educational institutions;Software engineering;Licenses;Engineering profession;Computer science education;Computer science;Educational programs;Design engineering;Knowledge engineering;Computer industry}, 
doi={10.1109/2.841783}, 
ISSN={0018-9162}, 
month={May},}

@article{RodrguezGarca2012EmpiricalFO,
  title={Empirical findings on team size and productivity in software development},
  author={Daniel Rodr{\'i}guez-Garc{\'i}a and Miguel-{\'A}ngel Sicilia and Elena Garc{\'i}a Barriocanal and Rachel Harrison},
  journal={Journal of Systems and Software},
  year={2012},
  volume={85},
  pages={562-570}
}

@misc{Erik,
title = {The Relationship Between Team Size and Code Quality},
author = {Erik Dietrich},
howpublished = "\url {https://blog.ndepend.com/relationship-team-size-code-quality/ }",
}


@misc{Bernstein,
title = {Does Team Size Impact Code Quality?},
author = {Michael Bernstein},
howpublished = "\url {https://codeclimate.com/blog/does-team-size-impact-code-quality/ }",
year = {cited May 2014} }


@misc{Erickson,
title = {Small Teams Are Dramatically More Efficient than Large Teams},
author = {Carl Erickson},
howpublished = "\url {https://spin.atomicobject.com/2012/01/11/small-teams-are-dramatically-more-efficient-than-large-teams/ }",
year = {cited Jan 2012} }

@article{brooks1974mythical,
  title={The mythical man-month},
  author={Brooks, Frederick P},
  journal={Datamation},
  volume={20},
  number={12},
  pages={44--52},
  year={1974}
}

@article{madey2002open,
  title={The open source software development phenomenon: An analysis based on social network theory},
  author={Madey, Gregory and Freeh, Vincent and Tynan, Renee},
  journal={AMCIS 2002 Proceedings},
  pages={247},
  year={2002}
}

@article{sowe2008understanding,
  title={Understanding knowledge sharing activities in free/open source software projects: An empirical study},
  author={Sowe, Sulayman K and Stamelos, Ioannis and Angelis, Lefteris},
  journal={Journal of Systems and Software},
  volume={81},
  number={3},
  pages={431--446},
  year={2008},
  publisher={Elsevier}
}

@article{fuller2014user,
  title={User roles and contributions in innovation-contest communities},
  author={F{\"u}ller, Johann and Hutter, Katja and Hautz, Julia and Matzler, Kurt},
  journal={Journal of Management Information Systems},
  volume={31},
  number={1},
  pages={273--308},
  year={2014},
  publisher={Taylor \& Francis}
}

@article{sowe2006identifying,
  title={Identifying knowledge brokers that yield software engineering knowledge in OSS projects},
  author={Sowe, Sulayman and Stamelos, Ioannis and Angelis, Lefteris},
  journal={Information and Software Technology},
  volume={48},
  number={11},
  pages={1025--1033},
  year={2006},
  publisher={Elsevier}
}

@article{Brooks:1975,
 author = {Brooks,Jr., Fred P.},
 title = {The Mythical Man-Month},
 journal = {SIGPLAN Not.},
 issue_date = {June 1975},
 volume = {10},
 number = {6},
 month = apr,
 year = {1975},
 issn = {0362-1340},
 pages = {193--},
 url = {http://doi.acm.org/10.1145/390016.808439},
 doi = {10.1145/390016.808439},
 acmid = {808439},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Chief programmer, Documentation, Estimation, Scheduling, Software architecture, Software engineering, Support services, Testing},
} 
[download]


@article{koch2002effort,
  title={Effort, co-operation and co-ordination in an open source software project: GNOME},
  author={Koch, Stefan and Schneider, Georg},
  journal={Information Systems Journal},
  volume={12},
  number={1},
  pages={27--42},
  year={2002},
  publisher={Wiley Online Library}
}

@article{mockus2002two,
  title={Two case studies of open source software development: Apache and Mozilla},
  author={Mockus, Audris and Fielding, Roy T and Herbsleb, James D},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={11},
  number={3},
  pages={309--346},
  year={2002},
  publisher={ACM}
}

@inproceedings{Herbsleb:2014,
 author = {Herbsleb, James},
 title = {Socio-technical Coordination (Keynote)},
 booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering},
 series = {ICSE Companion 2014},
 year = {2014},
 isbn = {978-1-4503-2768-8},
 location = {Hyderabad, India},
 pages = {1--1},
 numpages = {1},
 url = {http://doi.acm.org/10.1145/2591062.2600729},
 doi = {10.1145/2591062.2600729},
 acmid = {2600729},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Architecture, Congruence, Coordination, Organization},
} 
[download]

@inproceedings{Pinzger2008CanDN,
  title={Can developer-module networks predict failures?},
  author={Martin Pinzger and Nachiappan Nagappan and Brendan Murphy},
  booktitle={SIGSOFT FSE},
  year={2008}
}

@inproceedings{Meneely2008PredictingFW,
  title={Predicting failures with developer networks and social network analysis},
  author={Andrew Meneely and Laurie A. Williams and Will Snipes and Jason A. Osborne},
  booktitle={SIGSOFT FSE},
  year={2008}
}

@Article{Weyuker2008,
author="Weyuker, Elaine J.
and Ostrand, Thomas J.
and Bell, Robert M.",
title="Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models",
journal="Empirical Software Engineering",
year="2008",
month="Oct",
day="01",
volume="13",
number="5",
pages="539--559",
abstract="Fault prediction by negative binomial regression models is shown to be effective for four large production software systems from industry. A model developed originally with data from systems with regularly scheduled releases was successfully adapted to a system without releases to identify 20{\%} of that system's files that contained 75{\%} of the faults. A model with a pre-specified set of variables derived from earlier research was applied to three additional systems, and proved capable of identifying averages of 81, 94 and 76{\%} of the faults in those systems. A primary focus of this paper is to investigate the impact on predictive accuracy of using data about the number of developers who access individual code units. For each system, including the cumulative number of developers who had previously modified a file yielded no more than a modest improvement in predictive accuracy. We conclude that while many factors can ``spoil the broth'' (lead to the release of software with too many defects), the number of developers is not a major influence.",
issn="1573-7616",
doi="10.1007/s10664-008-9082-8",
url="https://doi.org/10.1007/s10664-008-9082-8"
}

@article{KUPIAINEN2015143,
title = "Using metrics in Agile and Lean Software Development – A systematic literature review of industrial studies",
journal = "Information and Software Technology",
volume = "62",
pages = "143 - 163",
year = "2015",
issn = "0950-5849",
doi = "https://doi.org/10.1016/j.infsof.2015.02.005",
url = "http://www.sciencedirect.com/science/article/pii/S095058491500035X",
author = "Eetu Kupiainen and Mika V. Mäntylä and Juha Itkonen",
keywords = "Agile, Lean, Metrics, Measurement, Systematic literature review, Software engineering",
abstract = "Context
Software industry has widely adopted Agile software development methods. Agile literature proposes a few key metrics but little is known of the actual metrics use in Agile teams.
Objective
The objective of this paper is to increase knowledge of the reasons for and effects of using metrics in industrial Agile development. We focus on the metrics that Agile teams use, rather than the ones used from outside by software engineering researchers. In addition, we analyse the influence of the used metrics.
Method
This paper presents a systematic literature review (SLR) on using metrics in industrial Agile software development. We identified 774 papers, which we reduced to 30 primary studies through our paper selection process.
Results
The results indicate that the reasons for and the effects of using metrics are focused on the following areas: sprint planning, progress tracking, software quality measurement, fixing software process problems, and motivating people. Additionally, we show that although Agile teams use many metrics suggested in the Agile literature, they also use many custom metrics. Finally, the most influential metrics in the primary studies are Velocity and Effort estimate.
Conclusion
The use of metrics in Agile software development is similar to Traditional software development. Projects and sprints need to be planned and tracked. Quality needs to be measured. Problems in the process need to be identified and fixed. Future work should focus on metrics that had high importance but low prevalence in our study, as they can offer the largest impact to the software industry."
}

@INPROCEEDINGS{1385642, 
author={ and and S. {Christley} and G. {Madey}}, 
booktitle={Proceedings of the 38th Annual Hawaii International Conference on System Sciences}, 
title={A Topological Analysis of the Open Souce Software Development Community}, 
year={2005}, 
volume={}, 
number={}, 
pages={198a-198a}, 
keywords={Programming;Social network services;Data mining;Performance analysis;Computer bugs;Project management;Open source software;Statistics;Technological innovation;Information analysis}, 
doi={10.1109/HICSS.2005.57}, 
ISSN={1530-1605}, 
month={Jan},}

@article{Majumder_2012,
   title={Capacitated team formation problem on social networks},
   ISBN={9781450314626},
   url={http://dx.doi.org/10.1145/2339530.2339690},
   DOI={10.1145/2339530.2339690},
   journal={Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining - KDD  ’12},
   publisher={ACM Press},
   author={Majumder, Anirban and Datta, Samik and Naidu, K.V.M.},
   year={2012}
}

@misc{lima2014coding,
    title={Coding Together at Scale: GitHub as a Collaborative Social Network},
    author={Antonio Lima and Luca Rossi and Mirco Musolesi},
    year={2014},
    eprint={1407.2535},
    archivePrefix={arXiv},
    primaryClass={cs.SI}
}

@ARTICLE{7539677, 
author={F. {Zhang} and A. E. {Hassan} and S. {McIntosh} and Y. {Zou}}, 
journal={IEEE Transactions on Software Engineering}, 
title={The Use of Summation to Aggregate Software Metrics Hinders the Performance of Defect Prediction Models}, 
year={2017}, 
volume={43}, 
number={5}, 
pages={476-491}, 
keywords={data aggregation;data mining;Java;public domain software;software metrics;software metrics aggregation;defect prediction models;software organizations;historical defect data mining;version control system;software changes recording;McCabe cyclomatic complexity;granularity disagreement;class-level software metrics;method-level software metrics;lines of code;Sloc;Cc;Java projects;open source projects;effort-aware defect prediction;summation;Predictive models;Correlation;Software metrics;Indexes;Software;Data models;Defect prediction;aggregation scheme;software metrics}, 
doi={10.1109/TSE.2016.2599161}, 
ISSN={0098-5589}, 
month={May},}

@ARTICLE{544352, 
author={V. R. {Basili} and L. C. {Briand} and W. L. {Melo}}, 
journal={IEEE Transactions on Software Engineering}, 
title={A validation of object-oriented design metrics as quality indicators}, 
year={1996}, 
volume={22}, 
number={10}, 
pages={751-761}, 
keywords={object-oriented methods;software metrics;software quality;software maintenance;information systems;object-oriented languages;C language;object-oriented design metrics;software quality indicators;fault-prone classes;class maintenance changes;metric validation;information management systems;sequential life cycle model;object oriented analysis;C++ programming language;data set;software development;Programming;Object oriented modeling;Software systems;Software maintenance;Design methodology;Computer languages;Predictive models;Resource management;System testing;Costs}, 
doi={10.1109/32.544352}, 
ISSN={0098-5589}, 
month={Oct},}

@article{LI1993111,
title = "Object-oriented metrics that predict maintainability",
journal = "Journal of Systems and Software",
volume = "23",
number = "2",
pages = "111 - 122",
year = "1993",
note = "Object-Oriented Software",
issn = "0164-1212",
doi = "https://doi.org/10.1016/0164-1212(93)90077-B",
url = "http://www.sciencedirect.com/science/article/pii/016412129390077B",
author = "Wei Li and Sallie Henry",
abstract = "Software metrics have been studied in the procedural paradigm as a quantitative means of assessing the software development process as well as the quality of software products. Several studies have validated that various metrics are useful indicators of maintenance effort in the procedural paradigm. However, software metrics have rarely been studied in the object-oriented paradigm. Very few metrics have been proposed to measure object-oriented systems, and the proposed ones have not been validated. This research concentrates on several object-oriented software metrics and the validation of these metrics with maintenance effort in two commercial systems. Statistical analyses of a prediction model incorporating 10 metrics were performed. In addition, a more compact model with fewer metrics is presented."
}

@article{BRIAND2000245,
title = "Exploring the relationships between design measures and software quality in object-oriented systems",
journal = "Journal of Systems and Software",
volume = "51",
number = "3",
pages = "245 - 273",
year = "2000",
issn = "0164-1212",
doi = "https://doi.org/10.1016/S0164-1212(99)00102-8",
url = "http://www.sciencedirect.com/science/article/pii/S0164121299001028",
author = "Lionel C. Briand and Jürgen Wüst and John W. Daly and D. Victor Porter",
keywords = "Coupling, Cohesion, Inheritance, Object-oriented, Metrics, Measurement, Empirical validation",
abstract = "One goal of this paper is to empirically explore the relationships between existing object-oriented (OO) coupling, cohesion, and inheritance measures and the probability of fault detection in system classes during testing. In other words, we wish to better understand the relationship between existing design measurement in OO systems and the quality of the software developed. The second goal is to propose an investigation and analysis strategy to make these kind of studies more repeatable and comparable, a problem which is pervasive in the literature on quality measurement. Results show that many of the measures capture similar dimensions in the data set, thus reflecting the fact that many of them are based on similar principles and hypotheses. However, it is shown that by using a subset of measures, accurate models can be built to predict which classes most of the faults are likely to lie in. When predicting fault-prone classes, the best model shows a percentage of correct classifications higher than 80% and finds more than 90% of faulty classes. Besides the size of classes, the frequency of method invocations and the depth of inheritance hierarchies seem to be the main driving factors of fault-proneness."
}
@inproceedings{Nagappan:2006:MMP:1134285.1134349,
 author = {Nagappan, Nachiappan and Ball, Thomas and Zeller, Andreas},
 title = {Mining Metrics to Predict Component Failures},
 booktitle = {Proceedings of the 28th International Conference on Software Engineering},
 series = {ICSE '06},
 year = {2006},
 isbn = {1-59593-375-1},
 location = {Shanghai, China},
 pages = {452--461},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1134285.1134349},
 doi = {10.1145/1134285.1134349},
 acmid = {1134349},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {bug database, complexity metrics, empirical study, principal component analysis, regression model},
} 
@ARTICLE{1191795, 
author={R. {Subramanyam} and M. S. {Krishnan}}, 
journal={IEEE Transactions on Software Engineering}, 
title={Empirical analysis of CK metrics for object-oriented design complexity: implications for software defects}, 
year={2003}, 
volume={29}, 
number={4}, 
pages={297-310}, 
keywords={object-oriented programming;software metrics;program debugging;CK metric analysis;object-oriented design complexity;software defects;software development;software quality;OO design complexity metrics;software defect determination;C++;Java;Software design;Software quality;Application software;Programming;Productivity;Computer industry;Industrial control;Computer languages;Size control;Java}, 
doi={10.1109/TSE.2003.1191795}, 
ISSN={0098-5589}, 
month={April},}


@ARTICLE{1435354, 
author={T. J. {Ostrand} and E. J. {Weyuker} and R. M. {Bell}}, 
journal={IEEE Transactions on Software Engineering}, 
title={Predicting the location and number of faults in large software systems}, 
year={2005}, 
volume={31}, 
number={4}, 
pages={340-355}, 
keywords={program testing;software fault tolerance;binomial distribution;regression analysis;large software systems;binomial regression model;software fault prediction;software testing;Software systems;Predictive models;Fault diagnosis;System testing;History;Fault detection;Software testing;Personnel;Resource management;Sorting;Index Terms- Software faults;fault-prone;prediction;regression model;empirical study;software testing.}, 
doi={10.1109/TSE.2005.49}, 
ISSN={0098-5589}, 
month={April},}

@inproceedings{Zimmermann:2009:CDP:1595696.1595713,
 author = {Zimmermann, Thomas and Nagappan, Nachiappan and Gall, Harald and Giger, Emanuel and Murphy, Brendan},
 title = {Cross-project Defect Prediction: A Large Scale Experiment on Data vs. Domain vs. Process},
 booktitle = {Proceedings of the the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
 series = {ESEC/FSE '09},
 year = {2009},
 isbn = {978-1-60558-001-2},
 location = {Amsterdam, The Netherlands},
 pages = {91--100},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1595696.1595713},
 doi = {10.1145/1595696.1595713},
 acmid = {1595713},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {churn, cross-project, decision trees, defect prediction, logistic regression, prediction quality},
} 
@ARTICLE{935855, 
author={K. {El Emam} and S. {Benlarbi} and N. {Goel} and S. N. {Rai}}, 
journal={IEEE Transactions on Software Engineering}, 
title={The confounding effect of class size on the validity of object-oriented metrics}, 
year={2001}, 
volume={27}, 
number={7}, 
pages={630-650}, 
keywords={software metrics;object-oriented programming;C++ language;software fault tolerance;software quality;class size;object-oriented metrics;software metrics validation;C++;telecommunications framework;fault-proneness;software quality;Size control;Software quality;Testing;Telecommunication control;Helium;Software engineering;Maintenance;Guidelines;Object oriented modeling;Predictive models}, 
doi={10.1109/32.935855}, 
ISSN={0098-5589}, 
month={July},}

@article{ELEMAM200163,
title = "The prediction of faulty classes using object-oriented design metrics",
journal = "Journal of Systems and Software",
volume = "56",
number = "1",
pages = "63 - 75",
year = "2001",
issn = "0164-1212",
doi = "https://doi.org/10.1016/S0164-1212(00)00086-8",
url = "http://www.sciencedirect.com/science/article/pii/S0164121200000868",
author = "Khaled El Emam and Walcelio Melo and Javam C. Machado",
keywords = "Object-oriented metrics, Software metrics, Software quality, Java metrics, Java quality",
abstract = "Contemporary evidence suggests that most field faults in software applications are found in a small percentage of the software's components. This means that if these faulty software components can be detected early in the development project's life cycle, mitigating actions can be taken, such as a redesign. For object-oriented applications, prediction models using design metrics can be used to identify faulty classes early on. In this paper we report on a study that used object-oriented design metrics to construct such prediction models. The study used data collected from one version of a commercial Java application for constructing a prediction model. The model was then validated on a subsequent release of the same application. Our results indicate that the prediction model has a high accuracy. Furthermore, we found that an export coupling (EC) metric had the strongest association with fault-proneness, indicating a structural feature that may be symptomatic of a class with a high probability of latent faults."
}

@article{Cartwright,
author = {Cartwright, Michelle and Shepperd, Martin},
year = {2000},
month = {09},
pages = {786 - 796},
title = {An Empirical Investigation of an Object-Oriented Software System.},
volume = {26},
journal = {Software Engineering, IEEE Transactions on},
doi = {10.1109/32.879814}
}
@article{ELISH2008649,
title = "Predicting defect-prone software modules using support vector machines",
journal = "Journal of Systems and Software",
volume = "81",
number = "5",
pages = "649 - 660",
year = "2008",
note = "Software Process and Product Measurement",
issn = "0164-1212",
doi = "https://doi.org/10.1016/j.jss.2007.07.040",
url = "http://www.sciencedirect.com/science/article/pii/S016412120700235X",
author = "Karim O. Elish and Mahmoud O. Elish",
keywords = "Software metrics, Defect-prone modules, Support vector machines, Predictive models",
abstract = "Effective prediction of defect-prone software modules can enable software developers to focus quality assurance activities and allocate effort and resources more efficiently. Support vector machines (SVM) have been successfully applied for solving both classification and regression problems in many applications. This paper evaluates the capability of SVM in predicting defect-prone software modules and compares its prediction performance against eight statistical and machine learning models in the context of four NASA datasets. The results indicate that the prediction performance of SVM is generally better than, or at least, is competitive against the compared models."
}

@INPROCEEDINGS{841025, 
author={L. C. {Briand} and J. {Wust} and S. V. {Ikonomovski} and H. {Lounis}}, 
booktitle={Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002)}, 
title={Investigating quality factors in object-oriented designs: an industrial case study}, 
year={1999}, 
volume={}, 
number={}, 
pages={345-354}, 
keywords={object-oriented programming;software quality;quality factors;object-oriented designs;industrial case study;OO system classes;OO systems;Computer aided software engineering;Computer industry;Industrial relations;Permission;Software engineering;Software measurement;Software quality;Frequency;Object oriented modeling;Performance evaluation}, 
doi={10.1145/302405.302654}, 
ISSN={0270-5257}, 
month={May},}

@INPROCEEDINGS{809745, 
author={ and and }, 
booktitle={Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403)}, 
title={An empirical study on object-oriented metrics}, 
year={1999}, 
volume={}, 
number={}, 
pages={242-249}, 
keywords={object-oriented programming;software metrics;program testing;real-time systems;object-oriented design metrics;object oriented faults;program testing;industrial real-time systems;object management faults;object oriented testing;Testing;Electrical capacitance tomography;Fault detection;Hip;Independent component analysis;Encapsulation;Microwave integrated circuits;Performance evaluation;Costs;Software metrics}, 
doi={10.1109/METRIC.1999.809745}, 
ISSN={}, 
month={Nov},}

@ARTICLE{5560680, 
author={Y. {Shin} and A. {Meneely} and L. {Williams} and J. A. {Osborne}}, 
journal={IEEE Transactions on Software Engineering}, 
title={Evaluating Complexity, Code Churn, and Developer Activity Metrics as Indicators of Software Vulnerabilities}, 
year={2011}, 
volume={37}, 
number={6}, 
pages={772-787}, 
keywords={Linux;online front-ends;program testing;public domain software;software fault tolerance;software metrics;code churn;software vulnerabilities;developer activity metrics;security inspection;software metrics;source code;vulnerable code locations;open-source projects;Mozilla Firefox Web browser;Red Hat enterprise Linux kernel;Fault diagnosis;Software security;Complexity theory;Predictive models;Charge coupled devices;Fault prediction;software metrics;software security;vulnerability prediction.}, 
doi={10.1109/TSE.2010.81}, 
ISSN={0098-5589}, 
month={Nov},}

@Article{Menzies2010,
author="Menzies, Tim
and Milton, Zach
and Turhan, Burak
and Cukic, Bojan
and Jiang, Yue
and Bener, Ay{\c{s}}e",
title="Defect prediction from static code features: current results, limitations, new approaches",
journal="Automated Software Engineering",
year="2010",
month="Dec",
day="01",
volume="17",
number="4",
pages="375--407",
abstract="Building quality software is expensive and software quality assurance (QA) budgets are limited. Data miners can learn defect predictors from static code features which can be used to control QA resources; e.g. to focus on the parts of the code predicted to be more defective.",
issn="1573-7535",
doi="10.1007/s10515-010-0069-5",
url="https://doi.org/10.1007/s10515-010-0069-5"
}

@ARTICLE{5611551, 
author={Q. {Song} and Z. {Jia} and M. {Shepperd} and S. {Ying} and J. {Liu}}, 
journal={IEEE Transactions on Software Engineering}, 
title={A General Software Defect-Proneness Prediction Framework}, 
year={2011}, 
volume={37}, 
number={3}, 
pages={356-370}, 
keywords={learning (artificial intelligence);software fault tolerance;software performance evaluation;software defect proneness prediction framework;scheme evaluation;competing learning schemes;defect predictor;Software;Training data;Predictive models;Buildings;Data models;Prediction algorithms;Training;Software defect prediction;software defect-proneness prediction;machine learning;scheme evaluation.}, 
doi={10.1109/TSE.2010.90}, 
ISSN={0098-5589}, 
month={May},}

@inproceedings{Bird:2011:DTM:2025113.2025119,
 author = {Bird, Christian and Nagappan, Nachiappan and Murphy, Brendan and Gall, Harald and Devanbu, Premkumar},
 title = {Don'T Touch My Code!: Examining the Effects of Ownership on Software Quality},
 booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
 series = {ESEC/FSE '11},
 year = {2011},
 isbn = {978-1-4503-0443-6},
 location = {Szeged, Hungary},
 pages = {4--14},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2025113.2025119},
 doi = {10.1145/2025113.2025119},
 acmid = {2025119},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {emprical software engineering, expertise, ownership, quality},
} 

@inproceedings{Jureczko:2010:TIS:1868328.1868342,
 author = {Jureczko, Marian and Madeyski, Lech},
 title = {Towards Identifying Software Project Clusters with Regard to Defect Prediction},
 booktitle = {Proceedings of the 6th International Conference on Predictive Models in Software Engineering},
 series = {PROMISE '10},
 year = {2010},
 isbn = {978-1-4503-0404-7},
 location = {Timi\şoara, Romania},
 pages = {9:1--9:10},
 articleno = {9},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1868328.1868342},
 doi = {10.1145/1868328.1868342},
 acmid = {1868342},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {clustering, defect prediction, design metrics, size metrics},
} 

@article{FENTON200732,
title = "Predicting software defects in varying development lifecycles using Bayesian nets",
journal = "Information and Software Technology",
volume = "49",
number = "1",
pages = "32 - 43",
year = "2007",
note = "Most Cited Journal Articles in Software Engineering - 2000",
issn = "0950-5849",
doi = "https://doi.org/10.1016/j.infsof.2006.09.001",
url = "http://www.sciencedirect.com/science/article/pii/S0950584906001194",
author = "Norman Fenton and Martin Neil and William Marsh and Peter Hearty and David Marquez and Paul Krause and Rajat Mishra",
keywords = "Causal models, Dynamic Bayesian networks, Software defects, Decision support",
abstract = "An important decision in software projects is when to stop testing. Decision support tools for this have been built using causal models represented by Bayesian Networks (BNs), incorporating empirical data and expert judgement. Previously, this required a custom BN for each development lifecycle. We describe a more general approach that allows causal models to be applied to any lifecycle. The approach evolved through collaborative projects and captures significant commercial input. For projects within the range of the models, defect predictions are very accurate. This approach enables decision-makers to reason in a way that is not possible with regression-based models."
}

@inproceedings{Wolf:2009:PBF:1555001.1555017,
 author = {Wolf, Timo and Schroter, Adrian and Damian, Daniela and Nguyen, Thanh},
 title = {Predicting Build Failures Using Social Network Analysis on Developer Communication},
 booktitle = {Proceedings of the 31st International Conference on Software Engineering},
 series = {ICSE '09},
 year = {2009},
 isbn = {978-1-4244-3453-4},
 pages = {1--11},
 numpages = {11},
 url = {http://dx.doi.org/10.1109/ICSE.2009.5070503},
 doi = {10.1109/ICSE.2009.5070503},
 acmid = {1555017},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@INPROCEEDINGS{5362091, 
author={C. {Bird} and N. {Nagappan} and H. {Gall} and B. {Murphy} and P. {Devanbu}}, 
booktitle={2009 20th International Symposium on Software Reliability Engineering}, 
title={Putting It All Together: Using Socio-technical Networks to Predict Failures}, 
year={2009}, 
volume={}, 
number={}, 
pages={109-119}, 
keywords={human factors;social sciences;software development management;software fault tolerance;software quality;socio-technical network;social factor;development organization;software quality;task assignment;dependency structure;individual software components fault proneness;software component network property;Eclipse development environment;failure prone components prediction;Predictive models;History;Software quality;Costs;Software systems;Software reliability;Reliability engineering;Social factors;Software performance;NIST;social networks;empirical studies;bug prediction}, 
doi={10.1109/ISSRE.2009.17}, 
ISSN={1071-9458}, 
month={Nov}}

@INPROCEEDINGS{671604, 
author={A. B. {Binkley} and S. R. {Schach}}, 
booktitle={Proceedings of the 20th International Conference on Software Engineering}, 
title={Validation of the coupling dependency metric as a predictor of run-time failures and maintenance measures}, 
year={1998}, 
volume={}, 
number={}, 
pages={452-455}, 
keywords={software maintenance;software metrics;formal verification;software quality;coupling dependency metric;run-time failures;maintenance measures;design quality metric;run-time failure data;COBOL registration system;maintenance data;C text-processing utility;C++ patient collaborative care system;Java electronic file transfer facility;levels of interaction;software product;metrics validation;Runtime;Position measurement;Collaboration;Computer science;Java;Product design;Testing;Size measurement;Network-on-a-chip}, 
doi={10.1109/ICSE.1998.671604}, 
ISSN={0270-5257}, 
month={April}}

@Article{Okutan2014,
author="Okutan, Ahmet
and Y{\i}ld{\i}z, Olcay Taner",
title="Software defect prediction using Bayesian networks",
journal="Empirical Software Engineering",
year="2014",
month="Feb",
day="01",
volume="19",
number="1",
pages="154--181",
abstract="There are lots of different software metrics discovered and used for defect prediction in the literature. Instead of dealing with so many metrics, it would be practical and easy if we could determine the set of metrics that are most important and focus on them more to predict defectiveness. We use Bayesian networks to determine the probabilistic influential relationships among software metrics and defect proneness. In addition to the metrics used in Promise data repository, we define two more metrics, i.e. NOD for the number of developers and LOCQ for the source code quality. We extract these metrics by inspecting the source code repositories of the selected Promise data repository data sets. At the end of our modeling, we learn the marginal defect proneness probability of the whole software system, the set of most effective metrics, and the influential relationships among metrics and defectiveness. Our experiments on nine open source Promise data repository data sets show that response for class (RFC), lines of code (LOC), and lack of coding quality (LOCQ) are the most effective metrics whereas coupling between objects (CBO), weighted method per class (WMC), and lack of cohesion of methods (LCOM) are less effective metrics on defect proneness. Furthermore, number of children (NOC) and depth of inheritance tree (DIT) have very limited effect and are untrustworthy. On the other hand, based on the experiments on Poi, Tomcat, and Xalan data sets, we observe that there is a positive correlation between the number of developers (NOD) and the level of defectiveness. However, further investigation involving a greater number of projects is needed to confirm our findings.",
issn="1573-7616",
doi="10.1007/s10664-012-9218-8",
url="https://doi.org/10.1007/s10664-012-9218-8"
}

@article{HE2015170,
title = "An empirical study on software defect prediction with a simplified metric set",
journal = "Information and Software Technology",
volume = "59",
pages = "170 - 190",
year = "2015",
issn = "0950-5849",
doi = "https://doi.org/10.1016/j.infsof.2014.11.006",
url = "http://www.sciencedirect.com/science/article/pii/S0950584914002523",
author = "Peng He and Bing Li and Xiao Liu and Jun Chen and Yutao Ma",
keywords = "Defect prediction, Software metrics, Metric set simplification, Software quality",
abstract = "Context
Software defect prediction plays a crucial role in estimating the most defect-prone components of software, and a large number of studies have pursued improving prediction accuracy within a project or across projects. However, the rules for making an appropriate decision between within- and cross-project defect prediction when available historical data are insufficient remain unclear.
Objective
The objective of this work is to validate the feasibility of the predictor built with a simplified metric set for software defect prediction in different scenarios, and to investigate practical guidelines for the choice of training data, classifier and metric subset of a given project.
Method
First, based on six typical classifiers, three types of predictors using the size of software metric set were constructed in three scenarios. Then, we validated the acceptable performance of the predictor based on Top-k metrics in terms of statistical methods. Finally, we attempted to minimize the Top-k metric subset by removing redundant metrics, and we tested the stability of such a minimum metric subset with one-way ANOVA tests.
Results
The study has been conducted on 34 releases of 10 open-source projects available at the PROMISE repository. The findings indicate that the predictors built with either Top-k metrics or the minimum metric subset can provide an acceptable result compared with benchmark predictors. The guideline for choosing a suitable simplified metric set in different scenarios is presented in Table 12.
Conclusion
The experimental results indicate that (1) the choice of training data for defect prediction should depend on the specific requirement of accuracy; (2) the predictor built with a simplified metric set works well and is very useful in case limited resources are supplied; (3) simple classifiers (e.g., Naïve Bayes) also tend to perform well when using a simplified metric set for defect prediction; and (4) in several cases, the minimum metric subset can be identified to facilitate the procedure of general defect prediction with acceptable loss of prediction precision in practice."
}


@inproceedings{Ratzinger:2008:RRS:1370750.1370759,
 author = {Ratzinger, Jacek and Sigmund, Thomas and Gall, Harald C.},
 title = {On the Relation of Refactorings and Software Defect Prediction},
 booktitle = {Proceedings of the 2008 International Working Conference on Mining Software Repositories},
 series = {MSR '08},
 year = {2008},
 isbn = {978-1-60558-024-1},
 location = {Leipzig, Germany},
 pages = {35--38},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/1370750.1370759},
 doi = {10.1145/1370750.1370759},
 acmid = {1370759},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {mining, software analysis, software evolution},
} 

@Article{McIntosh2016,
author="McIntosh, Shane
and Kamei, Yasutaka
and Adams, Bram
and Hassan, Ahmed E.",
title="An empirical study of the impact of modern code review practices on software quality",
journal="Empirical Software Engineering",
year="2016",
month="Oct",
day="01",
volume="21",
number="5",
pages="2146--2189",
abstract="Software code review, i.e., the practice of having other team members critique changes to a software system, is a well-established best practice in both open source and proprietary software domains. Prior work has shown that formal code inspections tend to improve the quality of delivered software. However, the formal code inspection process mandates strict review criteria (e.g., in-person meetings and reviewer checklists) to ensure a base level of review quality, while the modern, lightweight code reviewing process does not. Although recent work explores the modern code review process, little is known about the relationship between modern code review practices and long-term software quality. Hence, in this paper, we study the relationship between post-release defects (a popular proxy for long-term software quality) and: (1) code review coverage, i.e., the proportion of changes that have been code reviewed, (2) code review participation, i.e., the degree of reviewer involvement in the code review process, and (3) code reviewer expertise, i.e., the level of domain-specific expertise of the code reviewers. Through a case study of the Qt, VTK, and ITK projects, we find that code review coverage, participation, and expertise share a significant link with software quality. Hence, our results empirically confirm the intuition that poorly-reviewed code has a negative impact on software quality in large systems using modern reviewing tools.",
issn="1573-7616",
doi="10.1007/s10664-015-9381-9",
url="https://doi.org/10.1007/s10664-015-9381-9"
}

@Article{Madeyski2015,
author="Madeyski, Lech
and Jureczko, Marian",
title="Which process metrics can significantly improve defect prediction models? An empirical study",
journal="Software Quality Journal",
year="2015",
month="Sep",
day="01",
volume="23",
number="3",
pages="393--422",
abstract="The knowledge about the software metrics which serve as defect indicators is vital for the efficient allocation of resources for quality assurance. It is the process metrics, although sometimes difficult to collect, which have recently become popular with regard to defect prediction. However, in order to identify rightly the process metrics which are actually worth collecting, we need the evidence validating their ability to improve the product metric-based defect prediction models. This paper presents an empirical evaluation in which several process metrics were investigated in order to identify the ones which significantly improve the defect prediction models based on product metrics. Data from a wide range of software projects (both, industrial and open source) were collected. The predictions of the models that use only product metrics (simple models) were compared with the predictions of the models which used product metrics, as well as one of the process metrics under scrutiny (advanced models). To decide whether the improvements were significant or not, statistical tests were performed and effect sizes were calculated. The advanced defect prediction models trained on a data set containing product metrics and additionally Number of Distinct Committers (NDC) were significantly better than the simple models without NDC, while the effect size was medium and the probability of superiority (PS) of the advanced models over simple ones was high ({\$}{\$}p=.016{\$}{\$}p=.016, {\$}{\$}r=-.29{\$}{\$}r=-.29, {\$}{\$}{\backslash}hbox {\{}PS{\}}=.76{\$}{\$}PS=.76), which is a substantial finding useful in defect prediction. A similar result with slightly smaller PS was achieved by the advanced models trained on a data set containing product metrics and additionally all of the investigated process metrics ({\$}{\$}p=.038{\$}{\$}p=.038, {\$}{\$}r=-.29{\$}{\$}r=-.29, {\$}{\$}{\backslash}hbox {\{}PS{\}}=.68{\$}{\$}PS=.68). The advanced models trained on a data set containing product metrics and additionally Number of Modified Lines (NML) were significantly better than the simple models without NML, but the effect size was small ({\$}{\$}p=.038{\$}{\$}p=.038, {\$}{\$}r=.06{\$}{\$}r=.06). Hence, it is reasonable to recommend the NDC process metric in building the defect prediction models.",
issn="1573-1367",
doi="10.1007/s11219-014-9241-7",
url="https://doi.org/10.1007/s11219-014-9241-7"
}

@inproceedings{Ostrand:2010:PFP:1868328.1868357,
 author = {Ostrand, Thomas J. and Weyuker, Elaine J. and Bell, Robert M.},
 title = {Programmer-based Fault Prediction},
 booktitle = {Proceedings of the 6th International Conference on Predictive Models in Software Engineering},
 series = {PROMISE '10},
 year = {2010},
 isbn = {978-1-4503-0404-7},
 location = {Timi\şoara, Romania},
 pages = {19:1--19:10},
 articleno = {19},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1868328.1868357},
 doi = {10.1145/1868328.1868357},
 acmid = {1868357},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {bug ratio, empirical study, fault-prone, prediction, regression model, software faults},
} 



@inproceedings{Jermakovics:2011:MVD:1984642.1984647,
 author = {Jermakovics, Andrejs and Sillitti, Alberto and Succi, Giancarlo},
 title = {Mining and Visualizing Developer Networks from Version Control Systems},
 booktitle = {Proceedings of the 4th International Workshop on Cooperative and Human Aspects of Software Engineering},
 series = {CHASE '11},
 year = {2011},
 isbn = {978-1-4503-0576-1},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {24--31},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1984642.1984647},
 doi = {10.1145/1984642.1984647},
 acmid = {1984647},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {social networks, software processes, visualization},
} 

@article{Concas:2010:ESS:1945538.1972593,
 author = {Concas, Giulio and Marchesi, Michele and Murgia, Alessandro and Tonelli, Roberto},
 title = {An Empirical Study of Social Networks Metrics in Object-oriented Software},
 journal = {Adv. Soft. Eng.},
 issue_date = {January 2010},
 volume = {2010},
 month = jan,
 year = {2010},
 issn = {1687-8655},
 pages = {4:1--4:21},
 articleno = {4},
 numpages = {21},
 url = {http://dx.doi.org/10.1155/2010/729826},
 doi = {10.1155/2010/729826},
 acmid = {1972593},
 publisher = {Hindawi Publishing Corp.},
 address = {New York, NY, United States},
} 
@inproceedings{Bicer:2011:DPU:1987875.1987888,
 author = {Bi\c{c}er, Serdar and Bener, Ay\c{s}e Ba\c{s}ar and \c{C}a\u{g}layan, Bora},
 title = {Defect Prediction Using Social Network Analysis on Issue Repositories},
 booktitle = {Proceedings of the 2011 International Conference on Software and Systems Process},
 series = {ICSSP '11},
 year = {2011},
 isbn = {978-1-4503-0730-7},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {63--71},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1987875.1987888},
 doi = {10.1145/1987875.1987888},
 acmid = {1987888},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {defect prediction, developer communication, network metrics, social networks},
} 

@article{Udaya,
author = {Udaya B. Challagulla, Venkata and B. Bastani, Farokh and Yen, I-Ling and A. Paul, Raymond},
year = {2008},
month = {04},
pages = {389-400},
title = {Empirical Assessment of Machine Learning Based Software Defect Prediction Techniques.},
volume = {17},
journal = {International Journal on Artificial Intelligence Tools},
doi = {10.1142/S0218213008003947}
}

@article{Prasad,
author = {Prasad, Manjula.C.M. and Florence, Lilly and Arya, Arti},
year = {2015},
month = {06},
pages = {179-190},
title = {A Study on Software Metrics based Software Defect Prediction using Data Mining and Machine Learning Techniques},
volume = {7},
journal = {International Journal of Database Theory and Application},
doi = {10.14257/ijdta.2015.8.3.15}
}

@Article{Kumar2017,
author="Kumar, Chandan
and Yadav, Dilip Kumar",
title="Software defects estimation using metrics of early phases of software development life cycle",
journal="International Journal of System Assurance Engineering and Management",
year="2017",
month="Dec",
day="01",
volume="8",
number="4",
pages="2109--2117",
abstract="An estimation of software defects can be obtained in the later phase of software testing. However, with the aim of cost-effectiveness and timely management of resources, the software defects estimation in the early phases of software development life cycle (SDLC) is one of the major research areas. In this paper, a software defect estimation model is proposed using Bayesian belief network (BBN) and reliability relevant metrics of early phases of SDLC (e.g., requirement analysis, design and coding phases). The causal relationship of software metrics is modeled using BBN. The qualitative value of software metrics and expert assessment of software defects is used for developing the proposed model. The defects estimation accuracy of the proposed model is examined using qualitative data set of ten real software projects. The defects estimation results are compared with the existing model and found more accurate.",
issn="0976-4348",
doi="10.1007/s13198-014-0326-2",
url="https://doi.org/10.1007/s13198-014-0326-2"
}

@misc{jiarpakdee2018impact,
    title={The Impact of Correlated Metrics on Defect Models},
    author={Jirayus Jiarpakdee and Chakkrit Tantithamthavorn and Ahmed E. Hassan},
    year={2018},
    eprint={1801.10271},
    archivePrefix={arXiv},
    primaryClass={cs.SE}
}

@Article{Gupta2017,
author="Gupta, Dharmendra Lal
and Saxena, Kavita",
title="Software bug prediction using object-oriented metrics",
journal="S{\={a}}dhan{\={a}}",
year="2017",
month="May",
day="01",
volume="42",
number="5",
pages="655--669",
abstract="Software quality is the fundamental requirement for a user, academia person, software developing organizations and researchers. In this paper a model for object-oriented Software Bug Prediction System (SBPS) has been developed. This model is capable of predicting the existence of bugs in a class if found, during software validation using metrics. The designed model forecasts the occurrences of bugs in a class when any new system is tested on it. For this experiment some open source similar types of defect datasets (projects) have been collected from Promise Software Engineering Repository. Some of these datasets have been selected for prediction of bugs, of which a few are not involved in model construction. First of all, we have formulated some hypotheses corresponding to each and every metric, and from metrics validation based on hypothesis basis finally 14 best suitable metrics have been selected for model creation. The Logistic Regression Classifier provides good accuracy among all classifiers. The proposed model is trained and tested on each of the validated dataset, including validated Combined Dataset separately too. The performance measure (accuracy) is computed in each case and finally it is found that the model provides overall averaged accuracy of 76.27{\%}.",
issn="0973-7677",
doi="10.1007/s12046-017-0629-5",
url="https://doi.org/10.1007/s12046-017-0629-5"
}
@Article{Jayanthi2018,
author="Jayanthi, R.
and Florence, Lilly",
title="Software defect prediction techniques using metrics based on neural network classifier",
journal="Cluster Computing",
year="2018",
month="Feb",
day="07",
abstract="Software industries strive for software quality improvement by consistent bug prediction, bug removal and prediction of fault-prone module. This area has attracted researchers due to its significant involvement in software industries. Various techniques have been presented for software defect prediction. Recent researches have recommended data-mining using machine learning as an important paradigm for software bug prediction. state-of-art software defect prediction task suffer from various issues such as classification accuracy. However, software defect datasets are imbalanced in nature and known fault prone due to its huge dimension. To address this issue, here we present a combined approach for software defect prediction and prediction of software bugs. Proposed approach delivers a concept of feature reduction and artificial intelligence where feature reduction is carried out by well-known principle component analysis (PCA) scheme which is further improved by incorporating maximum-likelihood estimation for error reduction in PCA data reconstruction. Finally, neural network based classification technique is applied which shows prediction results. A framework is formulated and implemented on NASA software dataset where four datasets i.e., KC1, PC3, PC4 and JM1 are considered for performance analysis using MATLAB simulation tool. An extensive experimental study is performed where confusion, precision, recall, classification accuracy etc. parameters are computed and compared with existing software defect prediction techniques. Experimental study shows that proposed approach can provide better performance for software defect prediction.",
issn="1573-7543",
doi="10.1007/s10586-018-1730-1",
url="https://doi.org/10.1007/s10586-018-1730-1"
}

@InProceedings{10.1007/978-981-13-1927-3_48,
author="Ravi Kumar, T.
and Srinivasa Rao, T.
and Bathini, Sandhya",
editor="Satapathy, Suresh Chandra
and Bhateja, Vikrant
and Das, Swagatam",
title="A Predictive Approach to Estimate Software Defects Density Using Weighted Artificial Neural Networks for the Given Software Metrics",
booktitle="Smart Intelligent Computing and Applications ",
year="2019",
publisher="Springer Singapore",
address="Singapore",
pages="449--457",
abstract="Context Applications of software have penetrated into every part of human life and have become significant in versatile areas. A case of negligence could cost a great loss of economy or even to life (Pentium FDIV bug ``Statistical Analysis of Floating Point Flaw: Intel White Paper'' (PDF) (2004) [1]; The Helminthiasis of the Internet [2]), and hence the reliability of the functions of an application is of extreme importance. A software error could be a deviation from the process flow, improper requirement definitions, or ambiguity in defining the constraints (IEEE Standard Glossary of Software Engineering Terminology (1990) [3]). To avoid the lateral effects, the applications should be evaluated beforehand for all defects in all phases of the software cycle. Objective This paper emphasizes on the prediction of software defect density using weighted neural networks and comparison with the fuzzy logic-based approach. Method Each design phase is divided into the neural network node. Software metrics are chosen for each stage and fed into the nodes with a weight associated to it. Neural network system are associated with input layers, SW-DDC layer (stage-wise defect density calculation layer) and C-DDC (consolidated defect density calculation layer). Results The accuracy of the predicted defects is very close the actual defects. Validation results show this method is very accurate than the current methods like fuzzy implementation. Conclusion Weighted artificial networks is used to predict the software defect density and is been verified on different real-time data sets ranging from very low project sizes to the very high project size.",
isbn="978-981-13-1927-3"
}

@misc{prasad2018statistical,
    title={Statistical Analysis of Metrics for Software Quality Improvement},
    author={Karuna Prasad and MG Divya and N Mangala},
    year={2018},
    eprint={1802.05865},
    archivePrefix={arXiv},
    primaryClass={cs.SE}
}

@INPROCEEDINGS{8595100, 
author={J. {Ludwig} and S. {Xu} and F. {Webber}}, 
booktitle={2018 IEEE/ACM International Conference on Technical Debt (TechDebt)}, 
title={Static Software Metrics for Reliability and Maintainability}, 
year={2018}, 
volume={}, 
number={}, 
pages={53-54}, 
keywords={case-based reasoning;software metrics;software quality;commonly identified sources;technical debt;open-source plug-in;static software metrics;static software code metrics;software product quality characteristics;code analysis tool;Measurement;Software;Software reliability;Quality assessment;Product design;Software engineering;Software product quality;technical debt;reliability;maintainability;architecture;metrics;static code analysis}, 
doi={}, 
ISSN={}, 
month={May},}

@InProceedings{10.1007/978-3-319-92270-6_42,
author="Suzuki, Jessica
and Canedo, Edna Dias",
editor="Stephanidis, Constantine",
title="Interaction Design Process Oriented by Metrics",
booktitle="HCI International 2018 -- Posters' Extended Abstracts",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="290--297",
abstract="Software quality is more than code, it expands beyond the code, the noticeable aspects for the user must be considered. In order to capture these aspects one can look towards the area of Interaction Design, which is studied within the discipline of Human-Computer Interaction (HCI). To apply the concepts of this discipline, procedures must be respected, thus forming a process. When considering software quality, one must consider processes it is the use of metrics. In this context, this paper explores a process of design interaction oriented by metrics. Supported by a literature review and methodology, the process is defined supporting this underlying argument. A questionnaire targeted with knowing in the field will reveal results aimed at validating and improving the proposed process.",
isbn="978-3-319-92270-6"
}

@article{Xenos,
author = {Xenos, Michalis},
year = {2006},
month = {01},
pages = {1029-1036},
title = {Software Metrics and Measurements},
journal = {Encyclopedia of E-Commerce, E-Government and Mobile Commerce},
doi = {10.4018/9781591407997.ch165}
}

@ARTICLE{1020298, 
author={N. {Fenton} and P. {Krause} and M. {Neil}}, 
journal={IEEE Software}, 
title={Software measurement: uncertainty and causal modeling}, 
year={2002}, 
volume={19}, 
number={4}, 
pages={116-122}, 
keywords={risk management;software metrics;belief networks;uncertainty handling;software development management;software measurement;causal modelling;uncertainty;risk management;Bayesian networks;graphical modelling technique;Software measurement;Testing;Predictive models;Risk management;Programming;Project management;Lungs;Cancer;Laboratories;Bayesian methods}, 
doi={10.1109/MS.2002.1020298}, 
ISSN={0740-7459}, 
month={July},}



%presence of heros

@inproceedings{ricca2010heroes,
  title={Are heroes common in FLOSS projects?},
  author={Ricca, Filippo and Marchetto, Alessandro},
  booktitle={Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement},
  pages={55},
  year={2010},
  organization={ACM}
}

@inproceedings{robles2006contributor,
  title={Contributor turnover in libre software projects},
  author={Robles, Gregorio and Gonzalez-Barahona, Jesus M},
  booktitle={IFIP International Conference on Open Source Systems},
  pages={273--286},
  year={2006},
  organization={Springer}
}

@article{capiluppi2007adapting,
  title={Adapting the “Staged Model for Software Evolution” to FLOSS},
  author={Capiluppi, Andrea and Gonzalez Barahona, Jesus M and Herraiz, Israel},
  year={2007}
}


%heros are bad
@inproceedings{fitzgerald2003making,
  title={Making Free/Open-Source Software (F/OSS) Work Better},
  author={Fitzgerald, Brian and Parnas, David L},
  booktitle={Proceedings do Workshop da Confer{\^e}ncia XP2003, Genova},
  year={2003},
  organization={Citeseer}
}

%communication network - failure

@inproceedings{wolf2009predicting,
  title={Predicting build failures using social network analysis on developer communication},
  author={Wolf, Timo and Schroter, Adrian and Damian, Daniela and Nguyen, Thanh},
  booktitle={Proceedings of the 31st International Conference on Software Engineering},
  pages={1--11},
  year={2009},
  organization={IEEE Computer Society}
}

@inproceedings{de2004sometimes,
  title={Sometimes you need to see through walls: a field study of application programming interfaces},
  author={de Souza, Cleidson RB and Redmiles, David and Cheng, Li-Te and Millen, David and Patterson, John},
  booktitle={Proceedings of the 2004 ACM conference on Computer supported cooperative work},
  pages={63--71},
  year={2004},
  organization={ACM}
}

@inproceedings{grinter1999geography,
  title={The geography of coordination: Dealing with distance in R\&D work},
  author={Grinter, Rebecca E and Herbsleb, James D and Perry, Dewayne E},
  booktitle={Proceedings of the international ACM SIGGROUP conference on Supporting group work},
  pages={306--315},
  year={1999},
  organization={ACM}
}

@inproceedings{herbsleb1999splitting,
  title={Splitting the organization and integrating the code: Conway's law revisited},
  author={Herbsleb, James D and Grinter, Rebecca E},
  booktitle={Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No. 99CB37002)},
  pages={85--95},
  year={1999},
  organization={IEEE}
}

@article{cataldo2013coordination,
  title={Coordination breakdowns and their impact on development productivity and software failures},
  author={Cataldo, Marcelo and Herbsleb, James D},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={3},
  pages={343--360},
  year={2013},
  publisher={IEEE}
}

@inproceedings{cataldo2007coordination,
  title={On coordination mechanisms in global software development},
  author={Cataldo, Marcelo and Bass, Matthew and Herbsleb, James D and Bass, Len},
  booktitle={International Conference on Global Software Engineering (ICGSE 2007)},
  pages={71--80},
  year={2007},
  organization={IEEE}
}

%SZZ 
@inproceedings{williams2008szz,
  title={Szz revisited: verifying when changes induce fixes},
  author={Williams, Chadd and Spacco, Jaime},
  booktitle={Proceedings of the 2008 workshop on Defects in large software systems},
  pages={32--36},
  year={2008},
  organization={ACM}
}

@article{bach1995enough,
  title={Enough about process: what we need are heroes},
  author={Bach, James},
  journal={IEEE Software},
  volume={12},
  number={2},
  pages={96--98},
  year={1995},
  publisher={IEEE}
}

@book{cockburn2006agile,
  title={Agile software development: the cooperative game},
  author={Cockburn, Alistair},
  year={2006},
  publisher={Pearson Education}
}

@article{kemerer2009impact,
  title={The impact of design and code reviews on software quality: An empirical study based on psp data},
  author={Kemerer, Chris F and Paulk, Mark C},
  journal={IEEE transactions on software engineering},
  volume={35},
  number={4},
  pages={534--550},
  year={2009},
  publisher={IEEE}
}

@inproceedings{knab2006predicting,
  title={Predicting defect densities in source code files with decision tree learners},
  author={Knab, Patrick and Pinzger, Martin and Bernstein, Abraham},
  booktitle={Proceedings of the 2006 international workshop on Mining software repositories},
  pages={119--125},
  year={2006},
  organization={ACM}
}

@INPROCEEDINGS{1008000, 
author={L. {Augustin} and D. {Bressler} and G. {Smith}}, 
booktitle={Proceedings of the 24th International Conference on Software Engineering. ICSE 2002}, 
title={Accelerating software development through collaboration}, 
year={2002}, 
volume={}, 
number={}, 
pages={559-563}, 
keywords={software engineering;Internet;public domain software;VA Software;collaborative software development;SourceForge platform;Web site;Linux;open source software;Internet;software engineering methodologies;Acceleration;Programming;Collaborative software;Software quality;Internet;Linux;Software engineering;Testing;Companies;Pain}, 
doi={10.1145/581407.581409}, 
ISSN={}, 
month={May},}

@INPROCEEDINGS{4221622, 
author={J. {Whitehead}}, 
booktitle={Future of Software Engineering (FOSE '07)}, 
title={Collaboration in Software Engineering: A Roadmap}, 
year={2007}, 
volume={}, 
number={}, 
pages={214-225}, 
keywords={groupware;software development management;Unified Modeling Language;software engineering projects;large software system;model-oriented collaboration;collaboration research;artifact-neutral coordination;UML collaboration tools;massively multiplayer online game technology;collaborative systems;Collaborative software;Software engineering;Collaborative work;Collaborative tools;Computer science;Software systems;Online Communities/Technical Collaboration;Humans;Convergence;Writing}, 
doi={10.1109/FOSE.2007.4}, 
ISSN={}, 
month={May},
}

@inproceedings{jarczyk2014github,
  title={Github projects. quality analysis of open-source software},
  author={Jarczyk, Oskar and Gruszka, B{\l}a{\.z}ej and Jaroszewicz, Szymon and Bukowski, Leszek and Wierzbicki, Adam},
  booktitle={International Conference on Social Informatics},
  pages={80--94},
  year={2014},
  organization={Springer}
}
@inproceedings{bissyande2013got,
  title={Got issues? who cares about it? a large scale investigation of issue trackers from github},
  author={Bissyand{\'e}, Tegawend{\'e} F and Lo, David and Jiang, Lingxiao and R{\'e}veillere, Laurent and Klein, Jacques and Le Traon, Yves},
  booktitle={Software Reliability Engineering (ISSRE), 2013 IEEE 24th International Symposium on},
  pages={188--197},
  year={2013},
  organization={IEEE}
}

@article{athanasiou2014test,
  title={Test code quality and its relation to issue handling performance},
  author={Athanasiou, Dimitrios and Nugroho, Ariadi and Visser, Joost and Zaidman, Andy},
  journal={IEEE Transactions on Software Engineering},
  volume={40},
  number={11},
  pages={1100--1125},
  year={2014},
  publisher={IEEE}
}

@inproceedings{gupta2014process,
  title={Process mining multiple repositories for software defect resolution from control and organizational perspective},
  author={Gupta, Monika and Sureka, Ashish and Padmanabhuni, Srinivas},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={122--131},
  year={2014},
  organization={ACM}
}

@article{reyes2017analyzing,
  title={Analyzing GitHub as a Collaborative Software Development Platform: A Systematic Review},
  author={Reyes L{\'o}pez, Arturo},
  year={2017}
}

@article{moniruzzaman2013comparative,
  title={Comparative study on agile software development methodologies},
  author={Moniruzzaman, ABM and Hossain, Dr Syed Akhter},
  journal={arXiv preprint arXiv:1307.3356},
  year={2013}
}

@article{rastogi2017empirical,
  title={Empirical analyses of software contributor productivity},
  author={Rastogi, Ayushi and Nagappan, Nachiappan and Jalote, Pankaj},
  year={2017},
  school={IIIT-Delhi}
}

@article{vijay2017software,
 title={Software Quality Metrics in Quality Assurance to Study the Impact of External Factors related to Time},
 author={Vijay, T John and Chand, Dr M Gopi and Done, Dr Harika},
 journal={International Journal of Advanced Research in Computer Science and Software Engineering},
 volume={7},
 number={1},
 year={2017}
}

@inproceedings{dahab2018enhancing,
 title={Enhancing software development process quality based on metrics correlation and suggestion},
 author={Dahab, Sarah and Balocchi, Erika Fernanda Silva and Maag, Stephane and Cavalli, Ana Rosa and Mallouli, Wissam},
 booktitle={ICSOFT 2018: 13th International Conference on Software Technologies},
 pages={120--131},
 year={2018},
 organization={Scitepress}
}

@inproceedings{hindle2008large,
  title={What do large commits tell us?: a taxonomical study of large commits},
  author={Hindle, Abram and German, Daniel M and Holt, Ric},
  booktitle={Proceedings of the 2008 international working conference on Mining software repositories},
  pages={99--108},
  year={2008},
  organization={ACM}
}

@inproceedings{rosen2015commit,
  title={Commit guru: analytics and risk prediction of software commits},
  author={Rosen, Christoffer and Grawi, Ben and Shihab, Emad},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={966--969},
  year={2015},
  organization={ACM}
}

@inproceedings{vasilescu2015quality,
  title={Quality and productivity outcomes relating to continuous integration in GitHub},
  author={Vasilescu, Bogdan and Yu, Yue and Wang, Huaimin and Devanbu, Premkumar and Filkov, Vladimir},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={805--816},
  year={2015},
  organization={ACM}
}


@article{louridas2008power,
  title={Power laws in software},
  author={Louridas, Panagiotis and Spinellis, Diomidis and Vlachos, Vasileios},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={18},
  number={1},
  pages={2},
  year={2008},
  publisher={ACM}
}

@article{concas2007power,
  title={Power-laws in a large object-oriented software system},
  author={Concas, Giulio and Marchesi, Michele and Pinna, Sandro and Serra, Nicola},
  journal={IEEE Transactions on Software Engineering},
  volume={33},
  number={10},
  pages={687--708},
  year={2007},
  publisher={IEEE}
}

@inproceedings{wheeldon2003power,
  title={Power law distributions in class relationships},
  author={Wheeldon, Richard and Counsell, Steve},
  booktitle={Proceedings Third IEEE International Workshop on Source Code Analysis and Manipulation},
  pages={45--54},
  year={2003},
  organization={IEEE}
}

@inproceedings{lin2015power,
  title={Why power laws? an explanation from fine-grained code changes},
  author={Lin, Zhongpeng and Whitehead, Jim},
  booktitle={2015 IEEE/ACM 12th Working Conference on Mining Software Repositories},
  pages={68--75},
  year={2015},
  organization={IEEE}
}

